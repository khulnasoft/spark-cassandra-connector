Index.PACKAGES = {"com.khulnasoft" : [], "com.khulnasoft.spark" : [], "com.khulnasoft.spark.connector.japi" : [{"name" : "com.khulnasoft.spark.connector.japi.CassandraRow", "shortDescription" : "", "object" : "com\/khulnasoft\/spark\/connector\/japi\/CassandraRow$.html", "members_class" : [{"label" : "toString", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.japi.CassandraRow.toString", "link" : "com\/khulnasoft\/spark\/connector\/japi\/CassandraRow.html#toString():String", "kind" : "def"}, {"label" : "iterator", "tail" : "(): Iterator[AnyRef]", "member" : "com.khulnasoft.spark.connector.japi.CassandraRow.iterator", "link" : "com\/khulnasoft\/spark\/connector\/japi\/CassandraRow.html#iterator:Iterator[AnyRef]", "kind" : "def"}, {"label" : "fieldValues", "tail" : "(): IndexedSeq[AnyRef]", "member" : "com.khulnasoft.spark.connector.japi.CassandraRow.fieldValues", "link" : "com\/khulnasoft\/spark\/connector\/japi\/CassandraRow.html#fieldValues:IndexedSeq[AnyRef]", "kind" : "def"}, {"label" : "fieldNames", "tail" : "(): CassandraRowMetadata", "member" : "com.khulnasoft.spark.connector.japi.CassandraRow.fieldNames", "link" : "com\/khulnasoft\/spark\/connector\/japi\/CassandraRow.html#fieldNames:com.khulnasoft.spark.connector.CassandraRowMetadata", "kind" : "def"}, {"member" : "com.khulnasoft.spark.connector.japi.CassandraRow#<init>", "error" : "unsupported entity"}, {"member" : "com.khulnasoft.spark.connector.japi.CassandraRow#<init>", "error" : "unsupported entity"}, {"member" : "com.khulnasoft.spark.connector.japi.CassandraRow#<init>", "error" : "unsupported entity"}, {"label" : "columnValues", "tail" : ": IndexedSeq[AnyRef]", "member" : "com.khulnasoft.spark.connector.japi.CassandraRow.columnValues", "link" : "com\/khulnasoft\/spark\/connector\/japi\/CassandraRow.html#columnValues:IndexedSeq[AnyRef]", "kind" : "val"}, {"label" : "metaData", "tail" : ": CassandraRowMetadata", "member" : "com.khulnasoft.spark.connector.japi.CassandraRow.metaData", "link" : "com\/khulnasoft\/spark\/connector\/japi\/CassandraRow.html#metaData:com.khulnasoft.spark.connector.CassandraRowMetadata", "kind" : "val"}, {"label" : "getMap", "tail" : "(name: String)(keyConverter: TypeConverter[K], valueConverter: TypeConverter[V]): Map[K, V]", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableData.getMap", "link" : "com\/khulnasoft\/spark\/connector\/japi\/CassandraRow.html#getMap[K,V](name:String)(implicitkeyConverter:com.khulnasoft.spark.connector.types.TypeConverter[K],implicitvalueConverter:com.khulnasoft.spark.connector.types.TypeConverter[V]):java.util.Map[K,V]", "kind" : "def"}, {"label" : "getMap", "tail" : "(name: String): Map[AnyRef, AnyRef]", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableData.getMap", "link" : "com\/khulnasoft\/spark\/connector\/japi\/CassandraRow.html#getMap(name:String):java.util.Map[AnyRef,AnyRef]", "kind" : "def"}, {"label" : "getSet", "tail" : "(name: String)(converter: TypeConverter[T]): Set[T]", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableData.getSet", "link" : "com\/khulnasoft\/spark\/connector\/japi\/CassandraRow.html#getSet[T](name:String)(implicitconverter:com.khulnasoft.spark.connector.types.TypeConverter[T]):java.util.Set[T]", "kind" : "def"}, {"label" : "getSet", "tail" : "(name: String): Set[AnyRef]", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableData.getSet", "link" : "com\/khulnasoft\/spark\/connector\/japi\/CassandraRow.html#getSet(name:String):java.util.Set[AnyRef]", "kind" : "def"}, {"label" : "getList", "tail" : "(name: String)(converter: TypeConverter[T]): List[T]", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableData.getList", "link" : "com\/khulnasoft\/spark\/connector\/japi\/CassandraRow.html#getList[T](name:String)(implicitconverter:com.khulnasoft.spark.connector.types.TypeConverter[T]):java.util.List[T]", "kind" : "def"}, {"label" : "getList", "tail" : "(name: String): List[AnyRef]", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableData.getList", "link" : "com\/khulnasoft\/spark\/connector\/japi\/CassandraRow.html#getList(name:String):java.util.List[AnyRef]", "kind" : "def"}, {"label" : "getTupleValue", "tail" : "(name: String): TupleValue", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableData.getTupleValue", "link" : "com\/khulnasoft\/spark\/connector\/japi\/CassandraRow.html#getTupleValue(name:String):com.khulnasoft.spark.connector.japi.TupleValue", "kind" : "def"}, {"label" : "getUDTValue", "tail" : "(name: String): UDTValue", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableData.getUDTValue", "link" : "com\/khulnasoft\/spark\/connector\/japi\/CassandraRow.html#getUDTValue(name:String):com.khulnasoft.spark.connector.japi.UDTValue", "kind" : "def"}, {"label" : "getInet", "tail" : "(name: String): InetAddress", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableData.getInet", "link" : "com\/khulnasoft\/spark\/connector\/japi\/CassandraRow.html#getInet(name:String):java.net.InetAddress", "kind" : "def"}, {"label" : "getUUID", "tail" : "(name: String): UUID", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableData.getUUID", "link" : "com\/khulnasoft\/spark\/connector\/japi\/CassandraRow.html#getUUID(name:String):java.util.UUID", "kind" : "def"}, {"label" : "getDecimal", "tail" : "(name: String): BigDecimal", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableData.getDecimal", "link" : "com\/khulnasoft\/spark\/connector\/japi\/CassandraRow.html#getDecimal(name:String):java.math.BigDecimal", "kind" : "def"}, {"label" : "getVarInt", "tail" : "(name: String): BigInteger", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableData.getVarInt", "link" : "com\/khulnasoft\/spark\/connector\/japi\/CassandraRow.html#getVarInt(name:String):java.math.BigInteger", "kind" : "def"}, {"label" : "getDate", "tail" : "(name: String): Date", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableData.getDate", "link" : "com\/khulnasoft\/spark\/connector\/japi\/CassandraRow.html#getDate(name:String):java.util.Date", "kind" : "def"}, {"label" : "getBytes", "tail" : "(name: String): ByteBuffer", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableData.getBytes", "link" : "com\/khulnasoft\/spark\/connector\/japi\/CassandraRow.html#getBytes(name:String):java.nio.ByteBuffer", "kind" : "def"}, {"label" : "getString", "tail" : "(name: String): String", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableData.getString", "link" : "com\/khulnasoft\/spark\/connector\/japi\/CassandraRow.html#getString(name:String):String", "kind" : "def"}, {"label" : "getDouble", "tail" : "(name: String): Double", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableData.getDouble", "link" : "com\/khulnasoft\/spark\/connector\/japi\/CassandraRow.html#getDouble(name:String):Double", "kind" : "def"}, {"label" : "getFloat", "tail" : "(name: String): Float", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableData.getFloat", "link" : "com\/khulnasoft\/spark\/connector\/japi\/CassandraRow.html#getFloat(name:String):Float", "kind" : "def"}, {"label" : "getLong", "tail" : "(name: String): Long", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableData.getLong", "link" : "com\/khulnasoft\/spark\/connector\/japi\/CassandraRow.html#getLong(name:String):Long", "kind" : "def"}, {"label" : "getInt", "tail" : "(name: String): Integer", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableData.getInt", "link" : "com\/khulnasoft\/spark\/connector\/japi\/CassandraRow.html#getInt(name:String):Integer", "kind" : "def"}, {"label" : "getShort", "tail" : "(name: String): Short", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableData.getShort", "link" : "com\/khulnasoft\/spark\/connector\/japi\/CassandraRow.html#getShort(name:String):Short", "kind" : "def"}, {"label" : "getByte", "tail" : "(name: String): Byte", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableData.getByte", "link" : "com\/khulnasoft\/spark\/connector\/japi\/CassandraRow.html#getByte(name:String):Byte", "kind" : "def"}, {"label" : "getBoolean", "tail" : "(name: String): Boolean", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableData.getBoolean", "link" : "com\/khulnasoft\/spark\/connector\/japi\/CassandraRow.html#getBoolean(name:String):Boolean", "kind" : "def"}, {"label" : "getObject", "tail" : "(name: String): AnyRef", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableData.getObject", "link" : "com\/khulnasoft\/spark\/connector\/japi\/CassandraRow.html#getObject(name:String):Object", "kind" : "def"}, {"label" : "apply", "tail" : "(name: String): AnyRef", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableData.apply", "link" : "com\/khulnasoft\/spark\/connector\/japi\/CassandraRow.html#apply(name:String):AnyRef", "kind" : "def"}, {"label" : "get", "tail" : "(name: String, tc: TypeConverter[T]): T", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableData.get", "link" : "com\/khulnasoft\/spark\/connector\/japi\/CassandraRow.html#get[T<:AnyRef](name:String,tc:com.khulnasoft.spark.connector.types.TypeConverter[T]):T", "kind" : "def"}, {"label" : "toMap", "tail" : "(): Map[String, AnyRef]", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableData.toMap", "link" : "com\/khulnasoft\/spark\/connector\/japi\/CassandraRow.html#toMap:java.util.Map[String,AnyRef]", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "com.khulnasoft.spark.connector.GettableData.hashCode", "link" : "com\/khulnasoft\/spark\/connector\/japi\/CassandraRow.html#hashCode():Int", "kind" : "def"}, {"label" : "equals", "tail" : "(o: Any): Boolean", "member" : "com.khulnasoft.spark.connector.GettableData.equals", "link" : "com\/khulnasoft\/spark\/connector\/japi\/CassandraRow.html#equals(o:Any):Boolean", "kind" : "def"}, {"label" : "dataAsString", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.GettableData.dataAsString", "link" : "com\/khulnasoft\/spark\/connector\/japi\/CassandraRow.html#dataAsString:String", "kind" : "def"}, {"label" : "contains", "tail" : "(name: String): Boolean", "member" : "com.khulnasoft.spark.connector.GettableData.contains", "link" : "com\/khulnasoft\/spark\/connector\/japi\/CassandraRow.html#contains(name:String):Boolean", "kind" : "def"}, {"label" : "nameOf", "tail" : "(index: Int): String", "member" : "com.khulnasoft.spark.connector.GettableData.nameOf", "link" : "com\/khulnasoft\/spark\/connector\/japi\/CassandraRow.html#nameOf(index:Int):String", "kind" : "def"}, {"label" : "indexOf", "tail" : "(name: String): Int", "member" : "com.khulnasoft.spark.connector.GettableData.indexOf", "link" : "com\/khulnasoft\/spark\/connector\/japi\/CassandraRow.html#indexOf(name:String):Int", "kind" : "def"}, {"label" : "isNullAt", "tail" : "(name: String): Boolean", "member" : "com.khulnasoft.spark.connector.GettableData.isNullAt", "link" : "com\/khulnasoft\/spark\/connector\/japi\/CassandraRow.html#isNullAt(name:String):Boolean", "kind" : "def"}, {"label" : "getRawCql", "tail" : "(name: String): AnyRef", "member" : "com.khulnasoft.spark.connector.GettableData.getRawCql", "link" : "com\/khulnasoft\/spark\/connector\/japi\/CassandraRow.html#getRawCql(name:String):AnyRef", "kind" : "def"}, {"label" : "getRaw", "tail" : "(name: String): AnyRef", "member" : "com.khulnasoft.spark.connector.GettableData.getRaw", "link" : "com\/khulnasoft\/spark\/connector\/japi\/CassandraRow.html#getRaw(name:String):AnyRef", "kind" : "def"}, {"label" : "getMap", "tail" : "(index: Int)(keyConverter: TypeConverter[K], valueConverter: TypeConverter[V]): Map[K, V]", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.getMap", "link" : "com\/khulnasoft\/spark\/connector\/japi\/CassandraRow.html#getMap[K,V](index:Int)(implicitkeyConverter:com.khulnasoft.spark.connector.types.TypeConverter[K],implicitvalueConverter:com.khulnasoft.spark.connector.types.TypeConverter[V]):java.util.Map[K,V]", "kind" : "def"}, {"label" : "getMap", "tail" : "(index: Int): Map[AnyRef, AnyRef]", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.getMap", "link" : "com\/khulnasoft\/spark\/connector\/japi\/CassandraRow.html#getMap(index:Int):java.util.Map[AnyRef,AnyRef]", "kind" : "def"}, {"label" : "getSet", "tail" : "(index: Int)(converter: TypeConverter[T]): Set[T]", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.getSet", "link" : "com\/khulnasoft\/spark\/connector\/japi\/CassandraRow.html#getSet[T](index:Int)(implicitconverter:com.khulnasoft.spark.connector.types.TypeConverter[T]):java.util.Set[T]", "kind" : "def"}, {"label" : "getSet", "tail" : "(index: Int): Set[AnyRef]", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.getSet", "link" : "com\/khulnasoft\/spark\/connector\/japi\/CassandraRow.html#getSet(index:Int):java.util.Set[AnyRef]", "kind" : "def"}, {"label" : "getList", "tail" : "(index: Int)(converter: TypeConverter[T]): List[T]", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.getList", "link" : "com\/khulnasoft\/spark\/connector\/japi\/CassandraRow.html#getList[T](index:Int)(implicitconverter:com.khulnasoft.spark.connector.types.TypeConverter[T]):java.util.List[T]", "kind" : "def"}, {"label" : "getList", "tail" : "(index: Int): List[AnyRef]", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.getList", "link" : "com\/khulnasoft\/spark\/connector\/japi\/CassandraRow.html#getList(index:Int):java.util.List[AnyRef]", "kind" : "def"}, {"label" : "getTupleValue", "tail" : "(index: Int): TupleValue", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.getTupleValue", "link" : "com\/khulnasoft\/spark\/connector\/japi\/CassandraRow.html#getTupleValue(index:Int):com.khulnasoft.spark.connector.japi.TupleValue", "kind" : "def"}, {"label" : "getUDTValue", "tail" : "(index: Int): UDTValue", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.getUDTValue", "link" : "com\/khulnasoft\/spark\/connector\/japi\/CassandraRow.html#getUDTValue(index:Int):com.khulnasoft.spark.connector.japi.UDTValue", "kind" : "def"}, {"label" : "getInet", "tail" : "(index: Int): InetAddress", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.getInet", "link" : "com\/khulnasoft\/spark\/connector\/japi\/CassandraRow.html#getInet(index:Int):java.net.InetAddress", "kind" : "def"}, {"label" : "getUUID", "tail" : "(index: Int): UUID", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.getUUID", "link" : "com\/khulnasoft\/spark\/connector\/japi\/CassandraRow.html#getUUID(index:Int):java.util.UUID", "kind" : "def"}, {"label" : "getDecimal", "tail" : "(index: Int): BigDecimal", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.getDecimal", "link" : "com\/khulnasoft\/spark\/connector\/japi\/CassandraRow.html#getDecimal(index:Int):java.math.BigDecimal", "kind" : "def"}, {"label" : "getVarInt", "tail" : "(index: Int): BigInteger", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.getVarInt", "link" : "com\/khulnasoft\/spark\/connector\/japi\/CassandraRow.html#getVarInt(index:Int):java.math.BigInteger", "kind" : "def"}, {"label" : "getDate", "tail" : "(index: Int): Date", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.getDate", "link" : "com\/khulnasoft\/spark\/connector\/japi\/CassandraRow.html#getDate(index:Int):java.util.Date", "kind" : "def"}, {"label" : "getBytes", "tail" : "(index: Int): ByteBuffer", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.getBytes", "link" : "com\/khulnasoft\/spark\/connector\/japi\/CassandraRow.html#getBytes(index:Int):java.nio.ByteBuffer", "kind" : "def"}, {"label" : "getString", "tail" : "(index: Int): String", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.getString", "link" : "com\/khulnasoft\/spark\/connector\/japi\/CassandraRow.html#getString(index:Int):String", "kind" : "def"}, {"label" : "getDouble", "tail" : "(index: Int): Double", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.getDouble", "link" : "com\/khulnasoft\/spark\/connector\/japi\/CassandraRow.html#getDouble(index:Int):Double", "kind" : "def"}, {"label" : "getFloat", "tail" : "(index: Int): Float", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.getFloat", "link" : "com\/khulnasoft\/spark\/connector\/japi\/CassandraRow.html#getFloat(index:Int):Float", "kind" : "def"}, {"label" : "getLong", "tail" : "(index: Int): Long", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.getLong", "link" : "com\/khulnasoft\/spark\/connector\/japi\/CassandraRow.html#getLong(index:Int):Long", "kind" : "def"}, {"label" : "getInt", "tail" : "(index: Int): Integer", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.getInt", "link" : "com\/khulnasoft\/spark\/connector\/japi\/CassandraRow.html#getInt(index:Int):Integer", "kind" : "def"}, {"label" : "getShort", "tail" : "(index: Int): Short", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.getShort", "link" : "com\/khulnasoft\/spark\/connector\/japi\/CassandraRow.html#getShort(index:Int):Short", "kind" : "def"}, {"label" : "getByte", "tail" : "(index: Int): Byte", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.getByte", "link" : "com\/khulnasoft\/spark\/connector\/japi\/CassandraRow.html#getByte(index:Int):Byte", "kind" : "def"}, {"label" : "getBoolean", "tail" : "(index: Int): Boolean", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.getBoolean", "link" : "com\/khulnasoft\/spark\/connector\/japi\/CassandraRow.html#getBoolean(index:Int):Boolean", "kind" : "def"}, {"label" : "getObject", "tail" : "(index: Int): AnyRef", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.getObject", "link" : "com\/khulnasoft\/spark\/connector\/japi\/CassandraRow.html#getObject(index:Int):Object", "kind" : "def"}, {"label" : "apply", "tail" : "(index: Int): AnyRef", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.apply", "link" : "com\/khulnasoft\/spark\/connector\/japi\/CassandraRow.html#apply(index:Int):AnyRef", "kind" : "def"}, {"label" : "get", "tail" : "(index: Int, tc: TypeConverter[T]): T", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.get", "link" : "com\/khulnasoft\/spark\/connector\/japi\/CassandraRow.html#get[T<:AnyRef](index:Int,tc:com.khulnasoft.spark.connector.types.TypeConverter[T]):T", "kind" : "def"}, {"label" : "isNullAt", "tail" : "(index: Int): Boolean", "member" : "com.khulnasoft.spark.connector.GettableByIndexData.isNullAt", "link" : "com\/khulnasoft\/spark\/connector\/japi\/CassandraRow.html#isNullAt(index:Int):Boolean", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "com.khulnasoft.spark.connector.GettableByIndexData.size", "link" : "com\/khulnasoft\/spark\/connector\/japi\/CassandraRow.html#size:Int", "kind" : "def"}, {"label" : "length", "tail" : "(): Int", "member" : "com.khulnasoft.spark.connector.GettableByIndexData.length", "link" : "com\/khulnasoft\/spark\/connector\/japi\/CassandraRow.html#length:Int", "kind" : "def"}, {"label" : "getRaw", "tail" : "(index: Int): AnyRef", "member" : "com.khulnasoft.spark.connector.GettableByIndexData.getRaw", "link" : "com\/khulnasoft\/spark\/connector\/japi\/CassandraRow.html#getRaw(index:Int):AnyRef", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/japi\/CassandraRow.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/japi\/CassandraRow.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/japi\/CassandraRow.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/japi\/CassandraRow.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/japi\/CassandraRow.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/japi\/CassandraRow.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/japi\/CassandraRow.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/japi\/CassandraRow.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/japi\/CassandraRow.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/japi\/CassandraRow.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/japi\/CassandraRow.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/japi\/CassandraRow.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/japi\/CassandraRow.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/japi\/CassandraRow.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/japi\/CassandraRow.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/japi\/CassandraRow.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "fromMap", "tail" : "(map: Map[String, Any]): CassandraRow", "member" : "com.khulnasoft.spark.connector.japi.CassandraRow.fromMap", "link" : "com\/khulnasoft\/spark\/connector\/japi\/CassandraRow$.html#fromMap(map:Map[String,Any]):com.khulnasoft.spark.connector.japi.CassandraRow", "kind" : "def"}, {"label" : "fromJavaDriverRow", "tail" : "(row: Row, metaData: CassandraRowMetadata): CassandraRow", "member" : "com.khulnasoft.spark.connector.japi.CassandraRow.fromJavaDriverRow", "link" : "com\/khulnasoft\/spark\/connector\/japi\/CassandraRow$.html#fromJavaDriverRow(row:com.khulnasoft.oss.driver.api.core.cql.Row,metaData:com.khulnasoft.spark.connector.CassandraRowMetadata):com.khulnasoft.spark.connector.japi.CassandraRow", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/japi\/CassandraRow$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/japi\/CassandraRow$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/japi\/CassandraRow$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/japi\/CassandraRow$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/japi\/CassandraRow$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/japi\/CassandraRow$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/japi\/CassandraRow$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/japi\/CassandraRow$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/japi\/CassandraRow$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/japi\/CassandraRow$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/japi\/CassandraRow$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/japi\/CassandraRow$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/khulnasoft\/spark\/connector\/japi\/CassandraRow$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/japi\/CassandraRow$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/khulnasoft\/spark\/connector\/japi\/CassandraRow$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/khulnasoft\/spark\/connector\/japi\/CassandraRow$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/japi\/CassandraRow$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/japi\/CassandraRow$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/japi\/CassandraRow$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/khulnasoft\/spark\/connector\/japi\/CassandraRow.html", "kind" : "class"}, {"name" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData", "members_trait" : [{"label" : "getMap", "tail" : "(index: Int)(keyConverter: TypeConverter[K], valueConverter: TypeConverter[V]): Map[K, V]", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.getMap", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableByIndexData.html#getMap[K,V](index:Int)(implicitkeyConverter:com.khulnasoft.spark.connector.types.TypeConverter[K],implicitvalueConverter:com.khulnasoft.spark.connector.types.TypeConverter[V]):java.util.Map[K,V]", "kind" : "def"}, {"label" : "getMap", "tail" : "(index: Int): Map[AnyRef, AnyRef]", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.getMap", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableByIndexData.html#getMap(index:Int):java.util.Map[AnyRef,AnyRef]", "kind" : "def"}, {"label" : "getSet", "tail" : "(index: Int)(converter: TypeConverter[T]): Set[T]", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.getSet", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableByIndexData.html#getSet[T](index:Int)(implicitconverter:com.khulnasoft.spark.connector.types.TypeConverter[T]):java.util.Set[T]", "kind" : "def"}, {"label" : "getSet", "tail" : "(index: Int): Set[AnyRef]", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.getSet", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableByIndexData.html#getSet(index:Int):java.util.Set[AnyRef]", "kind" : "def"}, {"label" : "getList", "tail" : "(index: Int)(converter: TypeConverter[T]): List[T]", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.getList", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableByIndexData.html#getList[T](index:Int)(implicitconverter:com.khulnasoft.spark.connector.types.TypeConverter[T]):java.util.List[T]", "kind" : "def"}, {"label" : "getList", "tail" : "(index: Int): List[AnyRef]", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.getList", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableByIndexData.html#getList(index:Int):java.util.List[AnyRef]", "kind" : "def"}, {"label" : "getTupleValue", "tail" : "(index: Int): TupleValue", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.getTupleValue", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableByIndexData.html#getTupleValue(index:Int):com.khulnasoft.spark.connector.japi.TupleValue", "kind" : "def"}, {"label" : "getUDTValue", "tail" : "(index: Int): UDTValue", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.getUDTValue", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableByIndexData.html#getUDTValue(index:Int):com.khulnasoft.spark.connector.japi.UDTValue", "kind" : "def"}, {"label" : "getInet", "tail" : "(index: Int): InetAddress", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.getInet", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableByIndexData.html#getInet(index:Int):java.net.InetAddress", "kind" : "def"}, {"label" : "getUUID", "tail" : "(index: Int): UUID", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.getUUID", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableByIndexData.html#getUUID(index:Int):java.util.UUID", "kind" : "def"}, {"label" : "getDecimal", "tail" : "(index: Int): BigDecimal", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.getDecimal", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableByIndexData.html#getDecimal(index:Int):java.math.BigDecimal", "kind" : "def"}, {"label" : "getVarInt", "tail" : "(index: Int): BigInteger", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.getVarInt", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableByIndexData.html#getVarInt(index:Int):java.math.BigInteger", "kind" : "def"}, {"label" : "getDate", "tail" : "(index: Int): Date", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.getDate", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableByIndexData.html#getDate(index:Int):java.util.Date", "kind" : "def"}, {"label" : "getBytes", "tail" : "(index: Int): ByteBuffer", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.getBytes", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableByIndexData.html#getBytes(index:Int):java.nio.ByteBuffer", "kind" : "def"}, {"label" : "getString", "tail" : "(index: Int): String", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.getString", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableByIndexData.html#getString(index:Int):String", "kind" : "def"}, {"label" : "getDouble", "tail" : "(index: Int): Double", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.getDouble", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableByIndexData.html#getDouble(index:Int):Double", "kind" : "def"}, {"label" : "getFloat", "tail" : "(index: Int): Float", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.getFloat", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableByIndexData.html#getFloat(index:Int):Float", "kind" : "def"}, {"label" : "getLong", "tail" : "(index: Int): Long", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.getLong", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableByIndexData.html#getLong(index:Int):Long", "kind" : "def"}, {"label" : "getInt", "tail" : "(index: Int): Integer", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.getInt", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableByIndexData.html#getInt(index:Int):Integer", "kind" : "def"}, {"label" : "getShort", "tail" : "(index: Int): Short", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.getShort", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableByIndexData.html#getShort(index:Int):Short", "kind" : "def"}, {"label" : "getByte", "tail" : "(index: Int): Byte", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.getByte", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableByIndexData.html#getByte(index:Int):Byte", "kind" : "def"}, {"label" : "getBoolean", "tail" : "(index: Int): Boolean", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.getBoolean", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableByIndexData.html#getBoolean(index:Int):Boolean", "kind" : "def"}, {"label" : "getObject", "tail" : "(index: Int): AnyRef", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.getObject", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableByIndexData.html#getObject(index:Int):Object", "kind" : "def"}, {"label" : "apply", "tail" : "(index: Int): AnyRef", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.apply", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableByIndexData.html#apply(index:Int):AnyRef", "kind" : "def"}, {"label" : "get", "tail" : "(index: Int, tc: TypeConverter[T]): T", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.get", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableByIndexData.html#get[T<:AnyRef](index:Int,tc:com.khulnasoft.spark.connector.types.TypeConverter[T]):T", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "com.khulnasoft.spark.connector.GettableByIndexData.hashCode", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableByIndexData.html#hashCode():Int", "kind" : "def"}, {"label" : "equals", "tail" : "(o: Any): Boolean", "member" : "com.khulnasoft.spark.connector.GettableByIndexData.equals", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableByIndexData.html#equals(o:Any):Boolean", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.GettableByIndexData.toString", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableByIndexData.html#toString():String", "kind" : "def"}, {"label" : "dataAsString", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.GettableByIndexData.dataAsString", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableByIndexData.html#dataAsString:String", "kind" : "def"}, {"label" : "isNullAt", "tail" : "(index: Int): Boolean", "member" : "com.khulnasoft.spark.connector.GettableByIndexData.isNullAt", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableByIndexData.html#isNullAt(index:Int):Boolean", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "com.khulnasoft.spark.connector.GettableByIndexData.size", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableByIndexData.html#size:Int", "kind" : "def"}, {"label" : "length", "tail" : "(): Int", "member" : "com.khulnasoft.spark.connector.GettableByIndexData.length", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableByIndexData.html#length:Int", "kind" : "def"}, {"label" : "getRaw", "tail" : "(index: Int): AnyRef", "member" : "com.khulnasoft.spark.connector.GettableByIndexData.getRaw", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableByIndexData.html#getRaw(index:Int):AnyRef", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableByIndexData.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableByIndexData.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableByIndexData.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableByIndexData.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableByIndexData.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableByIndexData.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableByIndexData.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableByIndexData.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableByIndexData.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableByIndexData.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableByIndexData.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableByIndexData.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableByIndexData.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableByIndexData.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableByIndexData.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableByIndexData.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "columnValues", "tail" : "(): IndexedSeq[AnyRef]", "member" : "com.khulnasoft.spark.connector.GettableByIndexData.columnValues", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableByIndexData.html#columnValues:IndexedSeq[AnyRef]", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableByIndexData.html", "kind" : "trait"}, {"name" : "com.khulnasoft.spark.connector.japi.JavaGettableData", "members_trait" : [{"label" : "getMap", "tail" : "(name: String)(keyConverter: TypeConverter[K], valueConverter: TypeConverter[V]): Map[K, V]", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableData.getMap", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableData.html#getMap[K,V](name:String)(implicitkeyConverter:com.khulnasoft.spark.connector.types.TypeConverter[K],implicitvalueConverter:com.khulnasoft.spark.connector.types.TypeConverter[V]):java.util.Map[K,V]", "kind" : "def"}, {"label" : "getMap", "tail" : "(name: String): Map[AnyRef, AnyRef]", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableData.getMap", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableData.html#getMap(name:String):java.util.Map[AnyRef,AnyRef]", "kind" : "def"}, {"label" : "getSet", "tail" : "(name: String)(converter: TypeConverter[T]): Set[T]", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableData.getSet", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableData.html#getSet[T](name:String)(implicitconverter:com.khulnasoft.spark.connector.types.TypeConverter[T]):java.util.Set[T]", "kind" : "def"}, {"label" : "getSet", "tail" : "(name: String): Set[AnyRef]", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableData.getSet", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableData.html#getSet(name:String):java.util.Set[AnyRef]", "kind" : "def"}, {"label" : "getList", "tail" : "(name: String)(converter: TypeConverter[T]): List[T]", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableData.getList", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableData.html#getList[T](name:String)(implicitconverter:com.khulnasoft.spark.connector.types.TypeConverter[T]):java.util.List[T]", "kind" : "def"}, {"label" : "getList", "tail" : "(name: String): List[AnyRef]", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableData.getList", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableData.html#getList(name:String):java.util.List[AnyRef]", "kind" : "def"}, {"label" : "getTupleValue", "tail" : "(name: String): TupleValue", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableData.getTupleValue", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableData.html#getTupleValue(name:String):com.khulnasoft.spark.connector.japi.TupleValue", "kind" : "def"}, {"label" : "getUDTValue", "tail" : "(name: String): UDTValue", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableData.getUDTValue", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableData.html#getUDTValue(name:String):com.khulnasoft.spark.connector.japi.UDTValue", "kind" : "def"}, {"label" : "getInet", "tail" : "(name: String): InetAddress", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableData.getInet", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableData.html#getInet(name:String):java.net.InetAddress", "kind" : "def"}, {"label" : "getUUID", "tail" : "(name: String): UUID", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableData.getUUID", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableData.html#getUUID(name:String):java.util.UUID", "kind" : "def"}, {"label" : "getDecimal", "tail" : "(name: String): BigDecimal", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableData.getDecimal", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableData.html#getDecimal(name:String):java.math.BigDecimal", "kind" : "def"}, {"label" : "getVarInt", "tail" : "(name: String): BigInteger", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableData.getVarInt", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableData.html#getVarInt(name:String):java.math.BigInteger", "kind" : "def"}, {"label" : "getDate", "tail" : "(name: String): Date", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableData.getDate", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableData.html#getDate(name:String):java.util.Date", "kind" : "def"}, {"label" : "getBytes", "tail" : "(name: String): ByteBuffer", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableData.getBytes", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableData.html#getBytes(name:String):java.nio.ByteBuffer", "kind" : "def"}, {"label" : "getString", "tail" : "(name: String): String", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableData.getString", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableData.html#getString(name:String):String", "kind" : "def"}, {"label" : "getDouble", "tail" : "(name: String): Double", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableData.getDouble", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableData.html#getDouble(name:String):Double", "kind" : "def"}, {"label" : "getFloat", "tail" : "(name: String): Float", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableData.getFloat", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableData.html#getFloat(name:String):Float", "kind" : "def"}, {"label" : "getLong", "tail" : "(name: String): Long", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableData.getLong", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableData.html#getLong(name:String):Long", "kind" : "def"}, {"label" : "getInt", "tail" : "(name: String): Integer", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableData.getInt", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableData.html#getInt(name:String):Integer", "kind" : "def"}, {"label" : "getShort", "tail" : "(name: String): Short", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableData.getShort", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableData.html#getShort(name:String):Short", "kind" : "def"}, {"label" : "getByte", "tail" : "(name: String): Byte", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableData.getByte", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableData.html#getByte(name:String):Byte", "kind" : "def"}, {"label" : "getBoolean", "tail" : "(name: String): Boolean", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableData.getBoolean", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableData.html#getBoolean(name:String):Boolean", "kind" : "def"}, {"label" : "getObject", "tail" : "(name: String): AnyRef", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableData.getObject", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableData.html#getObject(name:String):Object", "kind" : "def"}, {"label" : "apply", "tail" : "(name: String): AnyRef", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableData.apply", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableData.html#apply(name:String):AnyRef", "kind" : "def"}, {"label" : "get", "tail" : "(name: String, tc: TypeConverter[T]): T", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableData.get", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableData.html#get[T<:AnyRef](name:String,tc:com.khulnasoft.spark.connector.types.TypeConverter[T]):T", "kind" : "def"}, {"label" : "toMap", "tail" : "(): Map[String, AnyRef]", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableData.toMap", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableData.html#toMap:java.util.Map[String,AnyRef]", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "com.khulnasoft.spark.connector.GettableData.hashCode", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableData.html#hashCode():Int", "kind" : "def"}, {"label" : "equals", "tail" : "(o: Any): Boolean", "member" : "com.khulnasoft.spark.connector.GettableData.equals", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableData.html#equals(o:Any):Boolean", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.GettableData.toString", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableData.html#toString():String", "kind" : "def"}, {"label" : "dataAsString", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.GettableData.dataAsString", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableData.html#dataAsString:String", "kind" : "def"}, {"label" : "contains", "tail" : "(name: String): Boolean", "member" : "com.khulnasoft.spark.connector.GettableData.contains", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableData.html#contains(name:String):Boolean", "kind" : "def"}, {"label" : "nameOf", "tail" : "(index: Int): String", "member" : "com.khulnasoft.spark.connector.GettableData.nameOf", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableData.html#nameOf(index:Int):String", "kind" : "def"}, {"label" : "indexOf", "tail" : "(name: String): Int", "member" : "com.khulnasoft.spark.connector.GettableData.indexOf", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableData.html#indexOf(name:String):Int", "kind" : "def"}, {"label" : "isNullAt", "tail" : "(name: String): Boolean", "member" : "com.khulnasoft.spark.connector.GettableData.isNullAt", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableData.html#isNullAt(name:String):Boolean", "kind" : "def"}, {"label" : "getRawCql", "tail" : "(name: String): AnyRef", "member" : "com.khulnasoft.spark.connector.GettableData.getRawCql", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableData.html#getRawCql(name:String):AnyRef", "kind" : "def"}, {"label" : "getRaw", "tail" : "(name: String): AnyRef", "member" : "com.khulnasoft.spark.connector.GettableData.getRaw", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableData.html#getRaw(name:String):AnyRef", "kind" : "def"}, {"label" : "getMap", "tail" : "(index: Int)(keyConverter: TypeConverter[K], valueConverter: TypeConverter[V]): Map[K, V]", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.getMap", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableData.html#getMap[K,V](index:Int)(implicitkeyConverter:com.khulnasoft.spark.connector.types.TypeConverter[K],implicitvalueConverter:com.khulnasoft.spark.connector.types.TypeConverter[V]):java.util.Map[K,V]", "kind" : "def"}, {"label" : "getMap", "tail" : "(index: Int): Map[AnyRef, AnyRef]", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.getMap", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableData.html#getMap(index:Int):java.util.Map[AnyRef,AnyRef]", "kind" : "def"}, {"label" : "getSet", "tail" : "(index: Int)(converter: TypeConverter[T]): Set[T]", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.getSet", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableData.html#getSet[T](index:Int)(implicitconverter:com.khulnasoft.spark.connector.types.TypeConverter[T]):java.util.Set[T]", "kind" : "def"}, {"label" : "getSet", "tail" : "(index: Int): Set[AnyRef]", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.getSet", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableData.html#getSet(index:Int):java.util.Set[AnyRef]", "kind" : "def"}, {"label" : "getList", "tail" : "(index: Int)(converter: TypeConverter[T]): List[T]", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.getList", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableData.html#getList[T](index:Int)(implicitconverter:com.khulnasoft.spark.connector.types.TypeConverter[T]):java.util.List[T]", "kind" : "def"}, {"label" : "getList", "tail" : "(index: Int): List[AnyRef]", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.getList", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableData.html#getList(index:Int):java.util.List[AnyRef]", "kind" : "def"}, {"label" : "getTupleValue", "tail" : "(index: Int): TupleValue", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.getTupleValue", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableData.html#getTupleValue(index:Int):com.khulnasoft.spark.connector.japi.TupleValue", "kind" : "def"}, {"label" : "getUDTValue", "tail" : "(index: Int): UDTValue", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.getUDTValue", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableData.html#getUDTValue(index:Int):com.khulnasoft.spark.connector.japi.UDTValue", "kind" : "def"}, {"label" : "getInet", "tail" : "(index: Int): InetAddress", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.getInet", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableData.html#getInet(index:Int):java.net.InetAddress", "kind" : "def"}, {"label" : "getUUID", "tail" : "(index: Int): UUID", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.getUUID", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableData.html#getUUID(index:Int):java.util.UUID", "kind" : "def"}, {"label" : "getDecimal", "tail" : "(index: Int): BigDecimal", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.getDecimal", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableData.html#getDecimal(index:Int):java.math.BigDecimal", "kind" : "def"}, {"label" : "getVarInt", "tail" : "(index: Int): BigInteger", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.getVarInt", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableData.html#getVarInt(index:Int):java.math.BigInteger", "kind" : "def"}, {"label" : "getDate", "tail" : "(index: Int): Date", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.getDate", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableData.html#getDate(index:Int):java.util.Date", "kind" : "def"}, {"label" : "getBytes", "tail" : "(index: Int): ByteBuffer", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.getBytes", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableData.html#getBytes(index:Int):java.nio.ByteBuffer", "kind" : "def"}, {"label" : "getString", "tail" : "(index: Int): String", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.getString", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableData.html#getString(index:Int):String", "kind" : "def"}, {"label" : "getDouble", "tail" : "(index: Int): Double", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.getDouble", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableData.html#getDouble(index:Int):Double", "kind" : "def"}, {"label" : "getFloat", "tail" : "(index: Int): Float", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.getFloat", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableData.html#getFloat(index:Int):Float", "kind" : "def"}, {"label" : "getLong", "tail" : "(index: Int): Long", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.getLong", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableData.html#getLong(index:Int):Long", "kind" : "def"}, {"label" : "getInt", "tail" : "(index: Int): Integer", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.getInt", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableData.html#getInt(index:Int):Integer", "kind" : "def"}, {"label" : "getShort", "tail" : "(index: Int): Short", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.getShort", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableData.html#getShort(index:Int):Short", "kind" : "def"}, {"label" : "getByte", "tail" : "(index: Int): Byte", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.getByte", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableData.html#getByte(index:Int):Byte", "kind" : "def"}, {"label" : "getBoolean", "tail" : "(index: Int): Boolean", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.getBoolean", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableData.html#getBoolean(index:Int):Boolean", "kind" : "def"}, {"label" : "getObject", "tail" : "(index: Int): AnyRef", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.getObject", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableData.html#getObject(index:Int):Object", "kind" : "def"}, {"label" : "apply", "tail" : "(index: Int): AnyRef", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.apply", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableData.html#apply(index:Int):AnyRef", "kind" : "def"}, {"label" : "get", "tail" : "(index: Int, tc: TypeConverter[T]): T", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.get", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableData.html#get[T<:AnyRef](index:Int,tc:com.khulnasoft.spark.connector.types.TypeConverter[T]):T", "kind" : "def"}, {"label" : "isNullAt", "tail" : "(index: Int): Boolean", "member" : "com.khulnasoft.spark.connector.GettableByIndexData.isNullAt", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableData.html#isNullAt(index:Int):Boolean", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "com.khulnasoft.spark.connector.GettableByIndexData.size", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableData.html#size:Int", "kind" : "def"}, {"label" : "length", "tail" : "(): Int", "member" : "com.khulnasoft.spark.connector.GettableByIndexData.length", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableData.html#length:Int", "kind" : "def"}, {"label" : "getRaw", "tail" : "(index: Int): AnyRef", "member" : "com.khulnasoft.spark.connector.GettableByIndexData.getRaw", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableData.html#getRaw(index:Int):AnyRef", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableData.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableData.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableData.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableData.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableData.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableData.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableData.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableData.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableData.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableData.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableData.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableData.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableData.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableData.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableData.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableData.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "metaData", "tail" : "(): CassandraRowMetadata", "member" : "com.khulnasoft.spark.connector.GettableData.metaData", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableData.html#metaData:com.khulnasoft.spark.connector.CassandraRowMetadata", "kind" : "abstract def"}, {"label" : "columnValues", "tail" : "(): IndexedSeq[AnyRef]", "member" : "com.khulnasoft.spark.connector.GettableByIndexData.columnValues", "link" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableData.html#columnValues:IndexedSeq[AnyRef]", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "com\/khulnasoft\/spark\/connector\/japi\/JavaGettableData.html", "kind" : "trait"}, {"name" : "com.khulnasoft.spark.connector.japi.TupleValue", "shortDescription" : "", "object" : "com\/khulnasoft\/spark\/connector\/japi\/TupleValue$.html", "members_class" : [{"label" : "columnValues", "tail" : ": IndexedSeq[AnyRef]", "member" : "com.khulnasoft.spark.connector.japi.TupleValue.columnValues", "link" : "com\/khulnasoft\/spark\/connector\/japi\/TupleValue.html#columnValues:IndexedSeq[AnyRef]", "kind" : "val"}, {"label" : "getMap", "tail" : "(index: Int)(keyConverter: TypeConverter[K], valueConverter: TypeConverter[V]): Map[K, V]", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.getMap", "link" : "com\/khulnasoft\/spark\/connector\/japi\/TupleValue.html#getMap[K,V](index:Int)(implicitkeyConverter:com.khulnasoft.spark.connector.types.TypeConverter[K],implicitvalueConverter:com.khulnasoft.spark.connector.types.TypeConverter[V]):java.util.Map[K,V]", "kind" : "def"}, {"label" : "getMap", "tail" : "(index: Int): Map[AnyRef, AnyRef]", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.getMap", "link" : "com\/khulnasoft\/spark\/connector\/japi\/TupleValue.html#getMap(index:Int):java.util.Map[AnyRef,AnyRef]", "kind" : "def"}, {"label" : "getSet", "tail" : "(index: Int)(converter: TypeConverter[T]): Set[T]", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.getSet", "link" : "com\/khulnasoft\/spark\/connector\/japi\/TupleValue.html#getSet[T](index:Int)(implicitconverter:com.khulnasoft.spark.connector.types.TypeConverter[T]):java.util.Set[T]", "kind" : "def"}, {"label" : "getSet", "tail" : "(index: Int): Set[AnyRef]", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.getSet", "link" : "com\/khulnasoft\/spark\/connector\/japi\/TupleValue.html#getSet(index:Int):java.util.Set[AnyRef]", "kind" : "def"}, {"label" : "getList", "tail" : "(index: Int)(converter: TypeConverter[T]): List[T]", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.getList", "link" : "com\/khulnasoft\/spark\/connector\/japi\/TupleValue.html#getList[T](index:Int)(implicitconverter:com.khulnasoft.spark.connector.types.TypeConverter[T]):java.util.List[T]", "kind" : "def"}, {"label" : "getList", "tail" : "(index: Int): List[AnyRef]", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.getList", "link" : "com\/khulnasoft\/spark\/connector\/japi\/TupleValue.html#getList(index:Int):java.util.List[AnyRef]", "kind" : "def"}, {"label" : "getTupleValue", "tail" : "(index: Int): TupleValue", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.getTupleValue", "link" : "com\/khulnasoft\/spark\/connector\/japi\/TupleValue.html#getTupleValue(index:Int):com.khulnasoft.spark.connector.japi.TupleValue", "kind" : "def"}, {"label" : "getUDTValue", "tail" : "(index: Int): UDTValue", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.getUDTValue", "link" : "com\/khulnasoft\/spark\/connector\/japi\/TupleValue.html#getUDTValue(index:Int):com.khulnasoft.spark.connector.japi.UDTValue", "kind" : "def"}, {"label" : "getInet", "tail" : "(index: Int): InetAddress", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.getInet", "link" : "com\/khulnasoft\/spark\/connector\/japi\/TupleValue.html#getInet(index:Int):java.net.InetAddress", "kind" : "def"}, {"label" : "getUUID", "tail" : "(index: Int): UUID", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.getUUID", "link" : "com\/khulnasoft\/spark\/connector\/japi\/TupleValue.html#getUUID(index:Int):java.util.UUID", "kind" : "def"}, {"label" : "getDecimal", "tail" : "(index: Int): BigDecimal", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.getDecimal", "link" : "com\/khulnasoft\/spark\/connector\/japi\/TupleValue.html#getDecimal(index:Int):java.math.BigDecimal", "kind" : "def"}, {"label" : "getVarInt", "tail" : "(index: Int): BigInteger", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.getVarInt", "link" : "com\/khulnasoft\/spark\/connector\/japi\/TupleValue.html#getVarInt(index:Int):java.math.BigInteger", "kind" : "def"}, {"label" : "getDate", "tail" : "(index: Int): Date", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.getDate", "link" : "com\/khulnasoft\/spark\/connector\/japi\/TupleValue.html#getDate(index:Int):java.util.Date", "kind" : "def"}, {"label" : "getBytes", "tail" : "(index: Int): ByteBuffer", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.getBytes", "link" : "com\/khulnasoft\/spark\/connector\/japi\/TupleValue.html#getBytes(index:Int):java.nio.ByteBuffer", "kind" : "def"}, {"label" : "getString", "tail" : "(index: Int): String", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.getString", "link" : "com\/khulnasoft\/spark\/connector\/japi\/TupleValue.html#getString(index:Int):String", "kind" : "def"}, {"label" : "getDouble", "tail" : "(index: Int): Double", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.getDouble", "link" : "com\/khulnasoft\/spark\/connector\/japi\/TupleValue.html#getDouble(index:Int):Double", "kind" : "def"}, {"label" : "getFloat", "tail" : "(index: Int): Float", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.getFloat", "link" : "com\/khulnasoft\/spark\/connector\/japi\/TupleValue.html#getFloat(index:Int):Float", "kind" : "def"}, {"label" : "getLong", "tail" : "(index: Int): Long", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.getLong", "link" : "com\/khulnasoft\/spark\/connector\/japi\/TupleValue.html#getLong(index:Int):Long", "kind" : "def"}, {"label" : "getInt", "tail" : "(index: Int): Integer", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.getInt", "link" : "com\/khulnasoft\/spark\/connector\/japi\/TupleValue.html#getInt(index:Int):Integer", "kind" : "def"}, {"label" : "getShort", "tail" : "(index: Int): Short", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.getShort", "link" : "com\/khulnasoft\/spark\/connector\/japi\/TupleValue.html#getShort(index:Int):Short", "kind" : "def"}, {"label" : "getByte", "tail" : "(index: Int): Byte", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.getByte", "link" : "com\/khulnasoft\/spark\/connector\/japi\/TupleValue.html#getByte(index:Int):Byte", "kind" : "def"}, {"label" : "getBoolean", "tail" : "(index: Int): Boolean", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.getBoolean", "link" : "com\/khulnasoft\/spark\/connector\/japi\/TupleValue.html#getBoolean(index:Int):Boolean", "kind" : "def"}, {"label" : "getObject", "tail" : "(index: Int): AnyRef", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.getObject", "link" : "com\/khulnasoft\/spark\/connector\/japi\/TupleValue.html#getObject(index:Int):Object", "kind" : "def"}, {"label" : "apply", "tail" : "(index: Int): AnyRef", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.apply", "link" : "com\/khulnasoft\/spark\/connector\/japi\/TupleValue.html#apply(index:Int):AnyRef", "kind" : "def"}, {"label" : "get", "tail" : "(index: Int, tc: TypeConverter[T]): T", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.get", "link" : "com\/khulnasoft\/spark\/connector\/japi\/TupleValue.html#get[T<:AnyRef](index:Int,tc:com.khulnasoft.spark.connector.types.TypeConverter[T]):T", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "com.khulnasoft.spark.connector.GettableByIndexData.hashCode", "link" : "com\/khulnasoft\/spark\/connector\/japi\/TupleValue.html#hashCode():Int", "kind" : "def"}, {"label" : "equals", "tail" : "(o: Any): Boolean", "member" : "com.khulnasoft.spark.connector.GettableByIndexData.equals", "link" : "com\/khulnasoft\/spark\/connector\/japi\/TupleValue.html#equals(o:Any):Boolean", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.GettableByIndexData.toString", "link" : "com\/khulnasoft\/spark\/connector\/japi\/TupleValue.html#toString():String", "kind" : "def"}, {"label" : "dataAsString", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.GettableByIndexData.dataAsString", "link" : "com\/khulnasoft\/spark\/connector\/japi\/TupleValue.html#dataAsString:String", "kind" : "def"}, {"label" : "isNullAt", "tail" : "(index: Int): Boolean", "member" : "com.khulnasoft.spark.connector.GettableByIndexData.isNullAt", "link" : "com\/khulnasoft\/spark\/connector\/japi\/TupleValue.html#isNullAt(index:Int):Boolean", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "com.khulnasoft.spark.connector.GettableByIndexData.size", "link" : "com\/khulnasoft\/spark\/connector\/japi\/TupleValue.html#size:Int", "kind" : "def"}, {"label" : "length", "tail" : "(): Int", "member" : "com.khulnasoft.spark.connector.GettableByIndexData.length", "link" : "com\/khulnasoft\/spark\/connector\/japi\/TupleValue.html#length:Int", "kind" : "def"}, {"label" : "getRaw", "tail" : "(index: Int): AnyRef", "member" : "com.khulnasoft.spark.connector.GettableByIndexData.getRaw", "link" : "com\/khulnasoft\/spark\/connector\/japi\/TupleValue.html#getRaw(index:Int):AnyRef", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/japi\/TupleValue.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/japi\/TupleValue.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/japi\/TupleValue.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/japi\/TupleValue.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/japi\/TupleValue.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/japi\/TupleValue.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/japi\/TupleValue.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/japi\/TupleValue.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/japi\/TupleValue.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/japi\/TupleValue.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/japi\/TupleValue.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/japi\/TupleValue.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/japi\/TupleValue.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/japi\/TupleValue.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/japi\/TupleValue.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/japi\/TupleValue.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "newTuple", "tail" : "(values: AnyRef*): TupleValue", "member" : "com.khulnasoft.spark.connector.japi.TupleValue.newTuple", "link" : "com\/khulnasoft\/spark\/connector\/japi\/TupleValue$.html#newTuple(values:Object*):com.khulnasoft.spark.connector.japi.TupleValue", "kind" : "def"}, {"label" : "UDTValueConverter", "tail" : "", "member" : "com.khulnasoft.spark.connector.japi.TupleValue.UDTValueConverter", "link" : "com\/khulnasoft\/spark\/connector\/japi\/TupleValue$.html#UDTValueConverter", "kind" : "implicit object"}, {"label" : "TypeTag", "tail" : ": scala.reflect.api.JavaUniverse.TypeTag[TupleValue]", "member" : "com.khulnasoft.spark.connector.japi.TupleValue.TypeTag", "link" : "com\/khulnasoft\/spark\/connector\/japi\/TupleValue$.html#TypeTag:reflect.runtime.universe.TypeTag[com.khulnasoft.spark.connector.japi.TupleValue]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/japi\/TupleValue$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/japi\/TupleValue$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/japi\/TupleValue$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/japi\/TupleValue$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/japi\/TupleValue$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/japi\/TupleValue$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/japi\/TupleValue$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/japi\/TupleValue$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/japi\/TupleValue$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/japi\/TupleValue$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/japi\/TupleValue$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/japi\/TupleValue$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/khulnasoft\/spark\/connector\/japi\/TupleValue$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/japi\/TupleValue$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/khulnasoft\/spark\/connector\/japi\/TupleValue$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/khulnasoft\/spark\/connector\/japi\/TupleValue$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/japi\/TupleValue$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/japi\/TupleValue$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/japi\/TupleValue$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/khulnasoft\/spark\/connector\/japi\/TupleValue.html", "kind" : "class"}, {"name" : "com.khulnasoft.spark.connector.japi.UDTValue", "shortDescription" : "", "object" : "com\/khulnasoft\/spark\/connector\/japi\/UDTValue$.html", "members_class" : [{"member" : "com.khulnasoft.spark.connector.japi.UDTValue#<init>", "error" : "unsupported entity"}, {"label" : "columnValues", "tail" : ": IndexedSeq[AnyRef]", "member" : "com.khulnasoft.spark.connector.japi.UDTValue.columnValues", "link" : "com\/khulnasoft\/spark\/connector\/japi\/UDTValue.html#columnValues:IndexedSeq[AnyRef]", "kind" : "val"}, {"label" : "metaData", "tail" : ": CassandraRowMetadata", "member" : "com.khulnasoft.spark.connector.japi.UDTValue.metaData", "link" : "com\/khulnasoft\/spark\/connector\/japi\/UDTValue.html#metaData:com.khulnasoft.spark.connector.CassandraRowMetadata", "kind" : "val"}, {"label" : "getMap", "tail" : "(name: String)(keyConverter: TypeConverter[K], valueConverter: TypeConverter[V]): Map[K, V]", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableData.getMap", "link" : "com\/khulnasoft\/spark\/connector\/japi\/UDTValue.html#getMap[K,V](name:String)(implicitkeyConverter:com.khulnasoft.spark.connector.types.TypeConverter[K],implicitvalueConverter:com.khulnasoft.spark.connector.types.TypeConverter[V]):java.util.Map[K,V]", "kind" : "def"}, {"label" : "getMap", "tail" : "(name: String): Map[AnyRef, AnyRef]", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableData.getMap", "link" : "com\/khulnasoft\/spark\/connector\/japi\/UDTValue.html#getMap(name:String):java.util.Map[AnyRef,AnyRef]", "kind" : "def"}, {"label" : "getSet", "tail" : "(name: String)(converter: TypeConverter[T]): Set[T]", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableData.getSet", "link" : "com\/khulnasoft\/spark\/connector\/japi\/UDTValue.html#getSet[T](name:String)(implicitconverter:com.khulnasoft.spark.connector.types.TypeConverter[T]):java.util.Set[T]", "kind" : "def"}, {"label" : "getSet", "tail" : "(name: String): Set[AnyRef]", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableData.getSet", "link" : "com\/khulnasoft\/spark\/connector\/japi\/UDTValue.html#getSet(name:String):java.util.Set[AnyRef]", "kind" : "def"}, {"label" : "getList", "tail" : "(name: String)(converter: TypeConverter[T]): List[T]", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableData.getList", "link" : "com\/khulnasoft\/spark\/connector\/japi\/UDTValue.html#getList[T](name:String)(implicitconverter:com.khulnasoft.spark.connector.types.TypeConverter[T]):java.util.List[T]", "kind" : "def"}, {"label" : "getList", "tail" : "(name: String): List[AnyRef]", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableData.getList", "link" : "com\/khulnasoft\/spark\/connector\/japi\/UDTValue.html#getList(name:String):java.util.List[AnyRef]", "kind" : "def"}, {"label" : "getTupleValue", "tail" : "(name: String): TupleValue", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableData.getTupleValue", "link" : "com\/khulnasoft\/spark\/connector\/japi\/UDTValue.html#getTupleValue(name:String):com.khulnasoft.spark.connector.japi.TupleValue", "kind" : "def"}, {"label" : "getUDTValue", "tail" : "(name: String): UDTValue", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableData.getUDTValue", "link" : "com\/khulnasoft\/spark\/connector\/japi\/UDTValue.html#getUDTValue(name:String):com.khulnasoft.spark.connector.japi.UDTValue", "kind" : "def"}, {"label" : "getInet", "tail" : "(name: String): InetAddress", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableData.getInet", "link" : "com\/khulnasoft\/spark\/connector\/japi\/UDTValue.html#getInet(name:String):java.net.InetAddress", "kind" : "def"}, {"label" : "getUUID", "tail" : "(name: String): UUID", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableData.getUUID", "link" : "com\/khulnasoft\/spark\/connector\/japi\/UDTValue.html#getUUID(name:String):java.util.UUID", "kind" : "def"}, {"label" : "getDecimal", "tail" : "(name: String): BigDecimal", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableData.getDecimal", "link" : "com\/khulnasoft\/spark\/connector\/japi\/UDTValue.html#getDecimal(name:String):java.math.BigDecimal", "kind" : "def"}, {"label" : "getVarInt", "tail" : "(name: String): BigInteger", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableData.getVarInt", "link" : "com\/khulnasoft\/spark\/connector\/japi\/UDTValue.html#getVarInt(name:String):java.math.BigInteger", "kind" : "def"}, {"label" : "getDate", "tail" : "(name: String): Date", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableData.getDate", "link" : "com\/khulnasoft\/spark\/connector\/japi\/UDTValue.html#getDate(name:String):java.util.Date", "kind" : "def"}, {"label" : "getBytes", "tail" : "(name: String): ByteBuffer", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableData.getBytes", "link" : "com\/khulnasoft\/spark\/connector\/japi\/UDTValue.html#getBytes(name:String):java.nio.ByteBuffer", "kind" : "def"}, {"label" : "getString", "tail" : "(name: String): String", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableData.getString", "link" : "com\/khulnasoft\/spark\/connector\/japi\/UDTValue.html#getString(name:String):String", "kind" : "def"}, {"label" : "getDouble", "tail" : "(name: String): Double", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableData.getDouble", "link" : "com\/khulnasoft\/spark\/connector\/japi\/UDTValue.html#getDouble(name:String):Double", "kind" : "def"}, {"label" : "getFloat", "tail" : "(name: String): Float", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableData.getFloat", "link" : "com\/khulnasoft\/spark\/connector\/japi\/UDTValue.html#getFloat(name:String):Float", "kind" : "def"}, {"label" : "getLong", "tail" : "(name: String): Long", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableData.getLong", "link" : "com\/khulnasoft\/spark\/connector\/japi\/UDTValue.html#getLong(name:String):Long", "kind" : "def"}, {"label" : "getInt", "tail" : "(name: String): Integer", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableData.getInt", "link" : "com\/khulnasoft\/spark\/connector\/japi\/UDTValue.html#getInt(name:String):Integer", "kind" : "def"}, {"label" : "getShort", "tail" : "(name: String): Short", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableData.getShort", "link" : "com\/khulnasoft\/spark\/connector\/japi\/UDTValue.html#getShort(name:String):Short", "kind" : "def"}, {"label" : "getByte", "tail" : "(name: String): Byte", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableData.getByte", "link" : "com\/khulnasoft\/spark\/connector\/japi\/UDTValue.html#getByte(name:String):Byte", "kind" : "def"}, {"label" : "getBoolean", "tail" : "(name: String): Boolean", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableData.getBoolean", "link" : "com\/khulnasoft\/spark\/connector\/japi\/UDTValue.html#getBoolean(name:String):Boolean", "kind" : "def"}, {"label" : "getObject", "tail" : "(name: String): AnyRef", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableData.getObject", "link" : "com\/khulnasoft\/spark\/connector\/japi\/UDTValue.html#getObject(name:String):Object", "kind" : "def"}, {"label" : "apply", "tail" : "(name: String): AnyRef", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableData.apply", "link" : "com\/khulnasoft\/spark\/connector\/japi\/UDTValue.html#apply(name:String):AnyRef", "kind" : "def"}, {"label" : "get", "tail" : "(name: String, tc: TypeConverter[T]): T", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableData.get", "link" : "com\/khulnasoft\/spark\/connector\/japi\/UDTValue.html#get[T<:AnyRef](name:String,tc:com.khulnasoft.spark.connector.types.TypeConverter[T]):T", "kind" : "def"}, {"label" : "toMap", "tail" : "(): Map[String, AnyRef]", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableData.toMap", "link" : "com\/khulnasoft\/spark\/connector\/japi\/UDTValue.html#toMap:java.util.Map[String,AnyRef]", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "com.khulnasoft.spark.connector.GettableData.hashCode", "link" : "com\/khulnasoft\/spark\/connector\/japi\/UDTValue.html#hashCode():Int", "kind" : "def"}, {"label" : "equals", "tail" : "(o: Any): Boolean", "member" : "com.khulnasoft.spark.connector.GettableData.equals", "link" : "com\/khulnasoft\/spark\/connector\/japi\/UDTValue.html#equals(o:Any):Boolean", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.GettableData.toString", "link" : "com\/khulnasoft\/spark\/connector\/japi\/UDTValue.html#toString():String", "kind" : "def"}, {"label" : "dataAsString", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.GettableData.dataAsString", "link" : "com\/khulnasoft\/spark\/connector\/japi\/UDTValue.html#dataAsString:String", "kind" : "def"}, {"label" : "contains", "tail" : "(name: String): Boolean", "member" : "com.khulnasoft.spark.connector.GettableData.contains", "link" : "com\/khulnasoft\/spark\/connector\/japi\/UDTValue.html#contains(name:String):Boolean", "kind" : "def"}, {"label" : "nameOf", "tail" : "(index: Int): String", "member" : "com.khulnasoft.spark.connector.GettableData.nameOf", "link" : "com\/khulnasoft\/spark\/connector\/japi\/UDTValue.html#nameOf(index:Int):String", "kind" : "def"}, {"label" : "indexOf", "tail" : "(name: String): Int", "member" : "com.khulnasoft.spark.connector.GettableData.indexOf", "link" : "com\/khulnasoft\/spark\/connector\/japi\/UDTValue.html#indexOf(name:String):Int", "kind" : "def"}, {"label" : "isNullAt", "tail" : "(name: String): Boolean", "member" : "com.khulnasoft.spark.connector.GettableData.isNullAt", "link" : "com\/khulnasoft\/spark\/connector\/japi\/UDTValue.html#isNullAt(name:String):Boolean", "kind" : "def"}, {"label" : "getRawCql", "tail" : "(name: String): AnyRef", "member" : "com.khulnasoft.spark.connector.GettableData.getRawCql", "link" : "com\/khulnasoft\/spark\/connector\/japi\/UDTValue.html#getRawCql(name:String):AnyRef", "kind" : "def"}, {"label" : "getRaw", "tail" : "(name: String): AnyRef", "member" : "com.khulnasoft.spark.connector.GettableData.getRaw", "link" : "com\/khulnasoft\/spark\/connector\/japi\/UDTValue.html#getRaw(name:String):AnyRef", "kind" : "def"}, {"label" : "getMap", "tail" : "(index: Int)(keyConverter: TypeConverter[K], valueConverter: TypeConverter[V]): Map[K, V]", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.getMap", "link" : "com\/khulnasoft\/spark\/connector\/japi\/UDTValue.html#getMap[K,V](index:Int)(implicitkeyConverter:com.khulnasoft.spark.connector.types.TypeConverter[K],implicitvalueConverter:com.khulnasoft.spark.connector.types.TypeConverter[V]):java.util.Map[K,V]", "kind" : "def"}, {"label" : "getMap", "tail" : "(index: Int): Map[AnyRef, AnyRef]", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.getMap", "link" : "com\/khulnasoft\/spark\/connector\/japi\/UDTValue.html#getMap(index:Int):java.util.Map[AnyRef,AnyRef]", "kind" : "def"}, {"label" : "getSet", "tail" : "(index: Int)(converter: TypeConverter[T]): Set[T]", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.getSet", "link" : "com\/khulnasoft\/spark\/connector\/japi\/UDTValue.html#getSet[T](index:Int)(implicitconverter:com.khulnasoft.spark.connector.types.TypeConverter[T]):java.util.Set[T]", "kind" : "def"}, {"label" : "getSet", "tail" : "(index: Int): Set[AnyRef]", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.getSet", "link" : "com\/khulnasoft\/spark\/connector\/japi\/UDTValue.html#getSet(index:Int):java.util.Set[AnyRef]", "kind" : "def"}, {"label" : "getList", "tail" : "(index: Int)(converter: TypeConverter[T]): List[T]", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.getList", "link" : "com\/khulnasoft\/spark\/connector\/japi\/UDTValue.html#getList[T](index:Int)(implicitconverter:com.khulnasoft.spark.connector.types.TypeConverter[T]):java.util.List[T]", "kind" : "def"}, {"label" : "getList", "tail" : "(index: Int): List[AnyRef]", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.getList", "link" : "com\/khulnasoft\/spark\/connector\/japi\/UDTValue.html#getList(index:Int):java.util.List[AnyRef]", "kind" : "def"}, {"label" : "getTupleValue", "tail" : "(index: Int): TupleValue", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.getTupleValue", "link" : "com\/khulnasoft\/spark\/connector\/japi\/UDTValue.html#getTupleValue(index:Int):com.khulnasoft.spark.connector.japi.TupleValue", "kind" : "def"}, {"label" : "getUDTValue", "tail" : "(index: Int): UDTValue", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.getUDTValue", "link" : "com\/khulnasoft\/spark\/connector\/japi\/UDTValue.html#getUDTValue(index:Int):com.khulnasoft.spark.connector.japi.UDTValue", "kind" : "def"}, {"label" : "getInet", "tail" : "(index: Int): InetAddress", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.getInet", "link" : "com\/khulnasoft\/spark\/connector\/japi\/UDTValue.html#getInet(index:Int):java.net.InetAddress", "kind" : "def"}, {"label" : "getUUID", "tail" : "(index: Int): UUID", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.getUUID", "link" : "com\/khulnasoft\/spark\/connector\/japi\/UDTValue.html#getUUID(index:Int):java.util.UUID", "kind" : "def"}, {"label" : "getDecimal", "tail" : "(index: Int): BigDecimal", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.getDecimal", "link" : "com\/khulnasoft\/spark\/connector\/japi\/UDTValue.html#getDecimal(index:Int):java.math.BigDecimal", "kind" : "def"}, {"label" : "getVarInt", "tail" : "(index: Int): BigInteger", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.getVarInt", "link" : "com\/khulnasoft\/spark\/connector\/japi\/UDTValue.html#getVarInt(index:Int):java.math.BigInteger", "kind" : "def"}, {"label" : "getDate", "tail" : "(index: Int): Date", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.getDate", "link" : "com\/khulnasoft\/spark\/connector\/japi\/UDTValue.html#getDate(index:Int):java.util.Date", "kind" : "def"}, {"label" : "getBytes", "tail" : "(index: Int): ByteBuffer", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.getBytes", "link" : "com\/khulnasoft\/spark\/connector\/japi\/UDTValue.html#getBytes(index:Int):java.nio.ByteBuffer", "kind" : "def"}, {"label" : "getString", "tail" : "(index: Int): String", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.getString", "link" : "com\/khulnasoft\/spark\/connector\/japi\/UDTValue.html#getString(index:Int):String", "kind" : "def"}, {"label" : "getDouble", "tail" : "(index: Int): Double", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.getDouble", "link" : "com\/khulnasoft\/spark\/connector\/japi\/UDTValue.html#getDouble(index:Int):Double", "kind" : "def"}, {"label" : "getFloat", "tail" : "(index: Int): Float", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.getFloat", "link" : "com\/khulnasoft\/spark\/connector\/japi\/UDTValue.html#getFloat(index:Int):Float", "kind" : "def"}, {"label" : "getLong", "tail" : "(index: Int): Long", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.getLong", "link" : "com\/khulnasoft\/spark\/connector\/japi\/UDTValue.html#getLong(index:Int):Long", "kind" : "def"}, {"label" : "getInt", "tail" : "(index: Int): Integer", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.getInt", "link" : "com\/khulnasoft\/spark\/connector\/japi\/UDTValue.html#getInt(index:Int):Integer", "kind" : "def"}, {"label" : "getShort", "tail" : "(index: Int): Short", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.getShort", "link" : "com\/khulnasoft\/spark\/connector\/japi\/UDTValue.html#getShort(index:Int):Short", "kind" : "def"}, {"label" : "getByte", "tail" : "(index: Int): Byte", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.getByte", "link" : "com\/khulnasoft\/spark\/connector\/japi\/UDTValue.html#getByte(index:Int):Byte", "kind" : "def"}, {"label" : "getBoolean", "tail" : "(index: Int): Boolean", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.getBoolean", "link" : "com\/khulnasoft\/spark\/connector\/japi\/UDTValue.html#getBoolean(index:Int):Boolean", "kind" : "def"}, {"label" : "getObject", "tail" : "(index: Int): AnyRef", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.getObject", "link" : "com\/khulnasoft\/spark\/connector\/japi\/UDTValue.html#getObject(index:Int):Object", "kind" : "def"}, {"label" : "apply", "tail" : "(index: Int): AnyRef", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.apply", "link" : "com\/khulnasoft\/spark\/connector\/japi\/UDTValue.html#apply(index:Int):AnyRef", "kind" : "def"}, {"label" : "get", "tail" : "(index: Int, tc: TypeConverter[T]): T", "member" : "com.khulnasoft.spark.connector.japi.JavaGettableByIndexData.get", "link" : "com\/khulnasoft\/spark\/connector\/japi\/UDTValue.html#get[T<:AnyRef](index:Int,tc:com.khulnasoft.spark.connector.types.TypeConverter[T]):T", "kind" : "def"}, {"label" : "isNullAt", "tail" : "(index: Int): Boolean", "member" : "com.khulnasoft.spark.connector.GettableByIndexData.isNullAt", "link" : "com\/khulnasoft\/spark\/connector\/japi\/UDTValue.html#isNullAt(index:Int):Boolean", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "com.khulnasoft.spark.connector.GettableByIndexData.size", "link" : "com\/khulnasoft\/spark\/connector\/japi\/UDTValue.html#size:Int", "kind" : "def"}, {"label" : "length", "tail" : "(): Int", "member" : "com.khulnasoft.spark.connector.GettableByIndexData.length", "link" : "com\/khulnasoft\/spark\/connector\/japi\/UDTValue.html#length:Int", "kind" : "def"}, {"label" : "getRaw", "tail" : "(index: Int): AnyRef", "member" : "com.khulnasoft.spark.connector.GettableByIndexData.getRaw", "link" : "com\/khulnasoft\/spark\/connector\/japi\/UDTValue.html#getRaw(index:Int):AnyRef", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/japi\/UDTValue.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/japi\/UDTValue.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/japi\/UDTValue.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/japi\/UDTValue.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/japi\/UDTValue.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/japi\/UDTValue.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/japi\/UDTValue.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/japi\/UDTValue.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/japi\/UDTValue.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/japi\/UDTValue.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/japi\/UDTValue.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/japi\/UDTValue.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/japi\/UDTValue.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/japi\/UDTValue.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/japi\/UDTValue.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/japi\/UDTValue.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "UDTValueConverter", "tail" : "", "member" : "com.khulnasoft.spark.connector.japi.UDTValue.UDTValueConverter", "link" : "com\/khulnasoft\/spark\/connector\/japi\/UDTValue$.html#UDTValueConverter", "kind" : "implicit object"}, {"label" : "UDTValueTypeTag", "tail" : ": scala.reflect.api.JavaUniverse.TypeTag[UDTValue]", "member" : "com.khulnasoft.spark.connector.japi.UDTValue.UDTValueTypeTag", "link" : "com\/khulnasoft\/spark\/connector\/japi\/UDTValue$.html#UDTValueTypeTag:reflect.runtime.universe.TypeTag[com.khulnasoft.spark.connector.japi.UDTValue]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/japi\/UDTValue$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/japi\/UDTValue$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/japi\/UDTValue$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/japi\/UDTValue$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/japi\/UDTValue$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/japi\/UDTValue$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/japi\/UDTValue$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/japi\/UDTValue$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/japi\/UDTValue$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/japi\/UDTValue$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/japi\/UDTValue$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/japi\/UDTValue$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/khulnasoft\/spark\/connector\/japi\/UDTValue$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/japi\/UDTValue$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/khulnasoft\/spark\/connector\/japi\/UDTValue$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/khulnasoft\/spark\/connector\/japi\/UDTValue$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/japi\/UDTValue$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/japi\/UDTValue$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/japi\/UDTValue$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/khulnasoft\/spark\/connector\/japi\/UDTValue.html", "kind" : "class"}], "com.khulnasoft.spark.connector.types" : [{"name" : "com.khulnasoft.spark.connector.types.AsciiType", "shortDescription" : "", "object" : "com\/khulnasoft\/spark\/connector\/types\/AsciiType$.html", "members_object" : [{"label" : "converterToCassandra", "tail" : "(): OptionToNullConverter", "member" : "com.khulnasoft.spark.connector.types.AsciiType.converterToCassandra", "link" : "com\/khulnasoft\/spark\/connector\/types\/AsciiType$.html#converterToCassandra:com.khulnasoft.spark.connector.types.TypeConverter.OptionToNullConverter", "kind" : "def"}, {"label" : "cqlTypeName", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.types.AsciiType.cqlTypeName", "link" : "com\/khulnasoft\/spark\/connector\/types\/AsciiType$.html#cqlTypeName:String", "kind" : "def"}, {"label" : "scalaTypeTag", "tail" : "(): scala.reflect.api.JavaUniverse.TypeTag[String]", "member" : "com.khulnasoft.spark.connector.types.AsciiType.scalaTypeTag", "link" : "com\/khulnasoft\/spark\/connector\/types\/AsciiType$.html#scalaTypeTag:reflect.runtime.universe.TypeTag[String]", "kind" : "def"}, {"label" : "isCollection", "tail" : "(): Boolean", "member" : "com.khulnasoft.spark.connector.types.PrimitiveColumnType.isCollection", "link" : "com\/khulnasoft\/spark\/connector\/types\/AsciiType$.html#isCollection:Boolean", "kind" : "def"}, {"label" : "isMultiCell", "tail" : "(): Boolean", "member" : "com.khulnasoft.spark.connector.types.ColumnType.isMultiCell", "link" : "com\/khulnasoft\/spark\/connector\/types\/AsciiType$.html#isMultiCell:Boolean", "kind" : "def"}, {"label" : "isFrozen", "tail" : "(): Boolean", "member" : "com.khulnasoft.spark.connector.types.ColumnType.isFrozen", "link" : "com\/khulnasoft\/spark\/connector\/types\/AsciiType$.html#isFrozen:Boolean", "kind" : "def"}, {"label" : "scalaTypeName", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.types.ColumnType.scalaTypeName", "link" : "com\/khulnasoft\/spark\/connector\/types\/AsciiType$.html#scalaTypeName:String", "kind" : "def"}, {"label" : "converterToScala", "tail" : ": TypeConverter[String]", "member" : "com.khulnasoft.spark.connector.types.ColumnType.converterToScala", "link" : "com\/khulnasoft\/spark\/connector\/types\/AsciiType$.html#converterToScala:com.khulnasoft.spark.connector.types.TypeConverter[T]", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/types\/AsciiType$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/types\/AsciiType$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/types\/AsciiType$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/types\/AsciiType$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/types\/AsciiType$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/types\/AsciiType$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/types\/AsciiType$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/AsciiType$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/AsciiType$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/AsciiType$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/types\/AsciiType$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/types\/AsciiType$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/types\/AsciiType$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/khulnasoft\/spark\/connector\/types\/AsciiType$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/types\/AsciiType$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/types\/AsciiType$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/types\/AsciiType$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.khulnasoft.spark.connector.types.BigIntType", "shortDescription" : "", "object" : "com\/khulnasoft\/spark\/connector\/types\/BigIntType$.html", "members_object" : [{"label" : "converterToCassandra", "tail" : "(): OptionToNullConverter", "member" : "com.khulnasoft.spark.connector.types.BigIntType.converterToCassandra", "link" : "com\/khulnasoft\/spark\/connector\/types\/BigIntType$.html#converterToCassandra:com.khulnasoft.spark.connector.types.TypeConverter.OptionToNullConverter", "kind" : "def"}, {"label" : "cqlTypeName", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.types.BigIntType.cqlTypeName", "link" : "com\/khulnasoft\/spark\/connector\/types\/BigIntType$.html#cqlTypeName:String", "kind" : "def"}, {"label" : "scalaTypeTag", "tail" : "(): scala.reflect.api.JavaUniverse.TypeTag[Long]", "member" : "com.khulnasoft.spark.connector.types.BigIntType.scalaTypeTag", "link" : "com\/khulnasoft\/spark\/connector\/types\/BigIntType$.html#scalaTypeTag:reflect.runtime.universe.TypeTag[Long]", "kind" : "def"}, {"label" : "isCollection", "tail" : "(): Boolean", "member" : "com.khulnasoft.spark.connector.types.PrimitiveColumnType.isCollection", "link" : "com\/khulnasoft\/spark\/connector\/types\/BigIntType$.html#isCollection:Boolean", "kind" : "def"}, {"label" : "isMultiCell", "tail" : "(): Boolean", "member" : "com.khulnasoft.spark.connector.types.ColumnType.isMultiCell", "link" : "com\/khulnasoft\/spark\/connector\/types\/BigIntType$.html#isMultiCell:Boolean", "kind" : "def"}, {"label" : "isFrozen", "tail" : "(): Boolean", "member" : "com.khulnasoft.spark.connector.types.ColumnType.isFrozen", "link" : "com\/khulnasoft\/spark\/connector\/types\/BigIntType$.html#isFrozen:Boolean", "kind" : "def"}, {"label" : "scalaTypeName", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.types.ColumnType.scalaTypeName", "link" : "com\/khulnasoft\/spark\/connector\/types\/BigIntType$.html#scalaTypeName:String", "kind" : "def"}, {"label" : "converterToScala", "tail" : ": TypeConverter[Long]", "member" : "com.khulnasoft.spark.connector.types.ColumnType.converterToScala", "link" : "com\/khulnasoft\/spark\/connector\/types\/BigIntType$.html#converterToScala:com.khulnasoft.spark.connector.types.TypeConverter[T]", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/types\/BigIntType$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/types\/BigIntType$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/types\/BigIntType$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/types\/BigIntType$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/types\/BigIntType$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/types\/BigIntType$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/types\/BigIntType$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/BigIntType$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/BigIntType$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/BigIntType$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/types\/BigIntType$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/types\/BigIntType$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/types\/BigIntType$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/khulnasoft\/spark\/connector\/types\/BigIntType$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/types\/BigIntType$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/types\/BigIntType$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/types\/BigIntType$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.khulnasoft.spark.connector.types.BlobType", "shortDescription" : "", "object" : "com\/khulnasoft\/spark\/connector\/types\/BlobType$.html", "members_object" : [{"label" : "converterToCassandra", "tail" : "(): OptionToNullConverter", "member" : "com.khulnasoft.spark.connector.types.BlobType.converterToCassandra", "link" : "com\/khulnasoft\/spark\/connector\/types\/BlobType$.html#converterToCassandra:com.khulnasoft.spark.connector.types.TypeConverter.OptionToNullConverter", "kind" : "def"}, {"label" : "cqlTypeName", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.types.BlobType.cqlTypeName", "link" : "com\/khulnasoft\/spark\/connector\/types\/BlobType$.html#cqlTypeName:String", "kind" : "def"}, {"label" : "scalaTypeTag", "tail" : "(): scala.reflect.api.JavaUniverse.TypeTag[ByteBuffer]", "member" : "com.khulnasoft.spark.connector.types.BlobType.scalaTypeTag", "link" : "com\/khulnasoft\/spark\/connector\/types\/BlobType$.html#scalaTypeTag:reflect.runtime.universe.TypeTag[java.nio.ByteBuffer]", "kind" : "def"}, {"label" : "isCollection", "tail" : "(): Boolean", "member" : "com.khulnasoft.spark.connector.types.PrimitiveColumnType.isCollection", "link" : "com\/khulnasoft\/spark\/connector\/types\/BlobType$.html#isCollection:Boolean", "kind" : "def"}, {"label" : "isMultiCell", "tail" : "(): Boolean", "member" : "com.khulnasoft.spark.connector.types.ColumnType.isMultiCell", "link" : "com\/khulnasoft\/spark\/connector\/types\/BlobType$.html#isMultiCell:Boolean", "kind" : "def"}, {"label" : "isFrozen", "tail" : "(): Boolean", "member" : "com.khulnasoft.spark.connector.types.ColumnType.isFrozen", "link" : "com\/khulnasoft\/spark\/connector\/types\/BlobType$.html#isFrozen:Boolean", "kind" : "def"}, {"label" : "scalaTypeName", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.types.ColumnType.scalaTypeName", "link" : "com\/khulnasoft\/spark\/connector\/types\/BlobType$.html#scalaTypeName:String", "kind" : "def"}, {"label" : "converterToScala", "tail" : ": TypeConverter[ByteBuffer]", "member" : "com.khulnasoft.spark.connector.types.ColumnType.converterToScala", "link" : "com\/khulnasoft\/spark\/connector\/types\/BlobType$.html#converterToScala:com.khulnasoft.spark.connector.types.TypeConverter[T]", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/types\/BlobType$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/types\/BlobType$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/types\/BlobType$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/types\/BlobType$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/types\/BlobType$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/types\/BlobType$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/types\/BlobType$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/BlobType$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/BlobType$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/BlobType$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/types\/BlobType$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/types\/BlobType$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/types\/BlobType$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/khulnasoft\/spark\/connector\/types\/BlobType$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/types\/BlobType$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/types\/BlobType$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/types\/BlobType$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.khulnasoft.spark.connector.types.BooleanType", "shortDescription" : "", "object" : "com\/khulnasoft\/spark\/connector\/types\/BooleanType$.html", "members_object" : [{"label" : "converterToCassandra", "tail" : "(): OptionToNullConverter", "member" : "com.khulnasoft.spark.connector.types.BooleanType.converterToCassandra", "link" : "com\/khulnasoft\/spark\/connector\/types\/BooleanType$.html#converterToCassandra:com.khulnasoft.spark.connector.types.TypeConverter.OptionToNullConverter", "kind" : "def"}, {"label" : "cqlTypeName", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.types.BooleanType.cqlTypeName", "link" : "com\/khulnasoft\/spark\/connector\/types\/BooleanType$.html#cqlTypeName:String", "kind" : "def"}, {"label" : "scalaTypeTag", "tail" : "(): scala.reflect.api.JavaUniverse.TypeTag[Boolean]", "member" : "com.khulnasoft.spark.connector.types.BooleanType.scalaTypeTag", "link" : "com\/khulnasoft\/spark\/connector\/types\/BooleanType$.html#scalaTypeTag:reflect.runtime.universe.TypeTag[Boolean]", "kind" : "def"}, {"label" : "isCollection", "tail" : "(): Boolean", "member" : "com.khulnasoft.spark.connector.types.PrimitiveColumnType.isCollection", "link" : "com\/khulnasoft\/spark\/connector\/types\/BooleanType$.html#isCollection:Boolean", "kind" : "def"}, {"label" : "isMultiCell", "tail" : "(): Boolean", "member" : "com.khulnasoft.spark.connector.types.ColumnType.isMultiCell", "link" : "com\/khulnasoft\/spark\/connector\/types\/BooleanType$.html#isMultiCell:Boolean", "kind" : "def"}, {"label" : "isFrozen", "tail" : "(): Boolean", "member" : "com.khulnasoft.spark.connector.types.ColumnType.isFrozen", "link" : "com\/khulnasoft\/spark\/connector\/types\/BooleanType$.html#isFrozen:Boolean", "kind" : "def"}, {"label" : "scalaTypeName", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.types.ColumnType.scalaTypeName", "link" : "com\/khulnasoft\/spark\/connector\/types\/BooleanType$.html#scalaTypeName:String", "kind" : "def"}, {"label" : "converterToScala", "tail" : ": TypeConverter[Boolean]", "member" : "com.khulnasoft.spark.connector.types.ColumnType.converterToScala", "link" : "com\/khulnasoft\/spark\/connector\/types\/BooleanType$.html#converterToScala:com.khulnasoft.spark.connector.types.TypeConverter[T]", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/types\/BooleanType$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/types\/BooleanType$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/types\/BooleanType$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/types\/BooleanType$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/types\/BooleanType$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/types\/BooleanType$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/types\/BooleanType$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/BooleanType$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/BooleanType$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/BooleanType$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/types\/BooleanType$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/types\/BooleanType$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/types\/BooleanType$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/khulnasoft\/spark\/connector\/types\/BooleanType$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/types\/BooleanType$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/types\/BooleanType$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/types\/BooleanType$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.khulnasoft.spark.connector.types.CanBuildFrom", "members_trait" : [{"label" : "upcast", "tail" : "(): CanBuildFrom[Elem, T]", "member" : "com.khulnasoft.spark.connector.types.CanBuildFrom.upcast", "link" : "com\/khulnasoft\/spark\/connector\/types\/CanBuildFrom.html#upcast[T>:To]:com.khulnasoft.spark.connector.types.CanBuildFrom[Elem,T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/types\/CanBuildFrom.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/types\/CanBuildFrom.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/types\/CanBuildFrom.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/types\/CanBuildFrom.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/types\/CanBuildFrom.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/types\/CanBuildFrom.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/types\/CanBuildFrom.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/CanBuildFrom.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/CanBuildFrom.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/CanBuildFrom.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/types\/CanBuildFrom.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/types\/CanBuildFrom.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/khulnasoft\/spark\/connector\/types\/CanBuildFrom.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/types\/CanBuildFrom.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/khulnasoft\/spark\/connector\/types\/CanBuildFrom.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/khulnasoft\/spark\/connector\/types\/CanBuildFrom.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/types\/CanBuildFrom.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/types\/CanBuildFrom.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/types\/CanBuildFrom.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "apply", "tail" : "(): Builder[Elem, To]", "member" : "com.khulnasoft.spark.connector.types.CanBuildFrom.apply", "link" : "com\/khulnasoft\/spark\/connector\/types\/CanBuildFrom.html#apply():scala.collection.mutable.Builder[Elem,To]", "kind" : "abstract def"}], "shortDescription" : "Serves the same purpose as standard Scala CanBuildFrom, however this one is Serializable.", "object" : "com\/khulnasoft\/spark\/connector\/types\/CanBuildFrom$.html", "members_object" : [{"label" : "javaMapCanBuildFrom", "tail" : "(): CanBuildFrom[(K, V), Map[K, V]]", "member" : "com.khulnasoft.spark.connector.types.CanBuildFrom.javaMapCanBuildFrom", "link" : "com\/khulnasoft\/spark\/connector\/types\/CanBuildFrom$.html#javaMapCanBuildFrom[K,V]:com.khulnasoft.spark.connector.types.CanBuildFrom[(K,V),java.util.Map[K,V]]", "kind" : "implicit def"}, {"label" : "javaHashMapCanBuildFrom", "tail" : "(): CanBuildFrom[(K, V), HashMap[K, V]]", "member" : "com.khulnasoft.spark.connector.types.CanBuildFrom.javaHashMapCanBuildFrom", "link" : "com\/khulnasoft\/spark\/connector\/types\/CanBuildFrom$.html#javaHashMapCanBuildFrom[K,V]:com.khulnasoft.spark.connector.types.CanBuildFrom[(K,V),java.util.HashMap[K,V]]", "kind" : "implicit def"}, {"label" : "javaSetCanBuildFrom", "tail" : "(): CanBuildFrom[T, Set[T]]", "member" : "com.khulnasoft.spark.connector.types.CanBuildFrom.javaSetCanBuildFrom", "link" : "com\/khulnasoft\/spark\/connector\/types\/CanBuildFrom$.html#javaSetCanBuildFrom[T]:com.khulnasoft.spark.connector.types.CanBuildFrom[T,java.util.Set[T]]", "kind" : "implicit def"}, {"label" : "javaHashSetCanBuildFrom", "tail" : "(): CanBuildFrom[T, HashSet[T]]", "member" : "com.khulnasoft.spark.connector.types.CanBuildFrom.javaHashSetCanBuildFrom", "link" : "com\/khulnasoft\/spark\/connector\/types\/CanBuildFrom$.html#javaHashSetCanBuildFrom[T]:com.khulnasoft.spark.connector.types.CanBuildFrom[T,java.util.HashSet[T]]", "kind" : "implicit def"}, {"label" : "javaListCanBuildFrom", "tail" : "(): CanBuildFrom[T, List[T]]", "member" : "com.khulnasoft.spark.connector.types.CanBuildFrom.javaListCanBuildFrom", "link" : "com\/khulnasoft\/spark\/connector\/types\/CanBuildFrom$.html#javaListCanBuildFrom[T]:com.khulnasoft.spark.connector.types.CanBuildFrom[T,java.util.List[T]]", "kind" : "implicit def"}, {"label" : "javaArrayListCanBuildFrom", "tail" : "(): CanBuildFrom[T, ArrayList[T]]", "member" : "com.khulnasoft.spark.connector.types.CanBuildFrom.javaArrayListCanBuildFrom", "link" : "com\/khulnasoft\/spark\/connector\/types\/CanBuildFrom$.html#javaArrayListCanBuildFrom[T]:com.khulnasoft.spark.connector.types.CanBuildFrom[T,java.util.ArrayList[T]]", "kind" : "implicit def"}, {"label" : "treeMapCanBuildFrom", "tail" : "(arg0: Ordering[K]): CanBuildFrom[(K, V), TreeMap[K, V]]", "member" : "com.khulnasoft.spark.connector.types.CanBuildFrom.treeMapCanBuildFrom", "link" : "com\/khulnasoft\/spark\/connector\/types\/CanBuildFrom$.html#treeMapCanBuildFrom[K,V](implicitevidence$2:Ordering[K]):com.khulnasoft.spark.connector.types.CanBuildFrom[(K,V),scala.collection.immutable.TreeMap[K,V]]", "kind" : "implicit def"}, {"label" : "mapCanBuildFrom", "tail" : "(): CanBuildFrom[(K, V), Map[K, V]]", "member" : "com.khulnasoft.spark.connector.types.CanBuildFrom.mapCanBuildFrom", "link" : "com\/khulnasoft\/spark\/connector\/types\/CanBuildFrom$.html#mapCanBuildFrom[K,V]:com.khulnasoft.spark.connector.types.CanBuildFrom[(K,V),Map[K,V]]", "kind" : "implicit def"}, {"label" : "treeSetCanBuildFrom", "tail" : "(arg0: Ordering[T]): CanBuildFrom[T, TreeSet[T]]", "member" : "com.khulnasoft.spark.connector.types.CanBuildFrom.treeSetCanBuildFrom", "link" : "com\/khulnasoft\/spark\/connector\/types\/CanBuildFrom$.html#treeSetCanBuildFrom[T](implicitevidence$1:Ordering[T]):com.khulnasoft.spark.connector.types.CanBuildFrom[T,scala.collection.immutable.TreeSet[T]]", "kind" : "implicit def"}, {"label" : "setCanBuildFrom", "tail" : "(): CanBuildFrom[T, Set[T]]", "member" : "com.khulnasoft.spark.connector.types.CanBuildFrom.setCanBuildFrom", "link" : "com\/khulnasoft\/spark\/connector\/types\/CanBuildFrom$.html#setCanBuildFrom[T]:com.khulnasoft.spark.connector.types.CanBuildFrom[T,Set[T]]", "kind" : "implicit def"}, {"label" : "listCanBuildFrom", "tail" : "(): CanBuildFrom[T, List[T]]", "member" : "com.khulnasoft.spark.connector.types.CanBuildFrom.listCanBuildFrom", "link" : "com\/khulnasoft\/spark\/connector\/types\/CanBuildFrom$.html#listCanBuildFrom[T]:com.khulnasoft.spark.connector.types.CanBuildFrom[T,List[T]]", "kind" : "implicit def"}, {"label" : "vectorCanBuildFrom", "tail" : "(): CanBuildFrom[T, Vector[T]]", "member" : "com.khulnasoft.spark.connector.types.CanBuildFrom.vectorCanBuildFrom", "link" : "com\/khulnasoft\/spark\/connector\/types\/CanBuildFrom$.html#vectorCanBuildFrom[T]:com.khulnasoft.spark.connector.types.CanBuildFrom[T,Vector[T]]", "kind" : "implicit def"}, {"label" : "indexedSeqCanBuildFrom", "tail" : "(): CanBuildFrom[T, IndexedSeq[T]]", "member" : "com.khulnasoft.spark.connector.types.CanBuildFrom.indexedSeqCanBuildFrom", "link" : "com\/khulnasoft\/spark\/connector\/types\/CanBuildFrom$.html#indexedSeqCanBuildFrom[T]:com.khulnasoft.spark.connector.types.CanBuildFrom[T,IndexedSeq[T]]", "kind" : "implicit def"}, {"label" : "seqCanBuildFrom", "tail" : "(): CanBuildFrom[T, Seq[T]]", "member" : "com.khulnasoft.spark.connector.types.CanBuildFrom.seqCanBuildFrom", "link" : "com\/khulnasoft\/spark\/connector\/types\/CanBuildFrom$.html#seqCanBuildFrom[T]:com.khulnasoft.spark.connector.types.CanBuildFrom[T,Seq[T]]", "kind" : "implicit def"}, {"label" : "iterableCanBuildFrom", "tail" : "(): CanBuildFrom[T, Iterable[T]]", "member" : "com.khulnasoft.spark.connector.types.CanBuildFrom.iterableCanBuildFrom", "link" : "com\/khulnasoft\/spark\/connector\/types\/CanBuildFrom$.html#iterableCanBuildFrom[T]:com.khulnasoft.spark.connector.types.CanBuildFrom[T,Iterable[T]]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/types\/CanBuildFrom$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/types\/CanBuildFrom$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/types\/CanBuildFrom$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/types\/CanBuildFrom$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/types\/CanBuildFrom$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/types\/CanBuildFrom$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/types\/CanBuildFrom$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/CanBuildFrom$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/CanBuildFrom$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/CanBuildFrom$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/types\/CanBuildFrom$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/types\/CanBuildFrom$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/khulnasoft\/spark\/connector\/types\/CanBuildFrom$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/types\/CanBuildFrom$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/khulnasoft\/spark\/connector\/types\/CanBuildFrom$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/khulnasoft\/spark\/connector\/types\/CanBuildFrom$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/types\/CanBuildFrom$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/types\/CanBuildFrom$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/types\/CanBuildFrom$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "com\/khulnasoft\/spark\/connector\/types\/CanBuildFrom.html", "kind" : "trait"}, {"name" : "com.khulnasoft.spark.connector.types.CassandraOption", "members_trait" : [{"label" : "productPrefix", "tail" : "(): String", "member" : "scala.Product.productPrefix", "link" : "com\/khulnasoft\/spark\/connector\/types\/CassandraOption.html#productPrefix:String", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "com\/khulnasoft\/spark\/connector\/types\/CassandraOption.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/types\/CassandraOption.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/types\/CassandraOption.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/types\/CassandraOption.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/types\/CassandraOption.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/types\/CassandraOption.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/types\/CassandraOption.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/types\/CassandraOption.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/CassandraOption.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/CassandraOption.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/CassandraOption.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/types\/CassandraOption.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/types\/CassandraOption.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/khulnasoft\/spark\/connector\/types\/CassandraOption.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/types\/CassandraOption.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/khulnasoft\/spark\/connector\/types\/CassandraOption.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/khulnasoft\/spark\/connector\/types\/CassandraOption.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/types\/CassandraOption.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/types\/CassandraOption.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/types\/CassandraOption.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "productArity", "tail" : "(): Int", "member" : "scala.Product.productArity", "link" : "com\/khulnasoft\/spark\/connector\/types\/CassandraOption.html#productArity:Int", "kind" : "abstract def"}, {"label" : "productElement", "tail" : "(n: Int): Any", "member" : "scala.Product.productElement", "link" : "com\/khulnasoft\/spark\/connector\/types\/CassandraOption.html#productElement(n:Int):Any", "kind" : "abstract def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.Equals.canEqual", "link" : "com\/khulnasoft\/spark\/connector\/types\/CassandraOption.html#canEqual(that:Any):Boolean", "kind" : "abstract def"}], "shortDescription" : "An Optional value with Cassandra in mind.", "object" : "com\/khulnasoft\/spark\/connector\/types\/CassandraOption$.html", "members_object" : [{"label" : "unsetIfNone", "tail" : "(op: Option[A]): CassandraOption[A]", "member" : "com.khulnasoft.spark.connector.types.CassandraOption.unsetIfNone", "link" : "com\/khulnasoft\/spark\/connector\/types\/CassandraOption$.html#unsetIfNone[A](op:Option[A]):com.khulnasoft.spark.connector.types.CassandraOption[A]", "kind" : "def"}, {"label" : "deleteIfNone", "tail" : "(op: Option[A]): CassandraOption[A]", "member" : "com.khulnasoft.spark.connector.types.CassandraOption.deleteIfNone", "link" : "com\/khulnasoft\/spark\/connector\/types\/CassandraOption$.html#deleteIfNone[A](op:Option[A]):com.khulnasoft.spark.connector.types.CassandraOption[A]", "kind" : "def"}, {"label" : "toScalaOption", "tail" : "(cOption: CassandraOption[A]): Option[A]", "member" : "com.khulnasoft.spark.connector.types.CassandraOption.toScalaOption", "link" : "com\/khulnasoft\/spark\/connector\/types\/CassandraOption$.html#toScalaOption[A](cOption:com.khulnasoft.spark.connector.types.CassandraOption[A]):Option[A]", "kind" : "implicit def"}, {"label" : "apply", "tail" : "(x: A): CassandraOption[A]", "member" : "com.khulnasoft.spark.connector.types.CassandraOption.apply", "link" : "com\/khulnasoft\/spark\/connector\/types\/CassandraOption$.html#apply[A](x:A):com.khulnasoft.spark.connector.types.CassandraOption[A]", "kind" : "def"}, {"label" : "Null", "tail" : "", "member" : "com.khulnasoft.spark.connector.types.CassandraOption.Null", "link" : "com\/khulnasoft\/spark\/connector\/types\/CassandraOption$.html#Null", "kind" : "object"}, {"label" : "Unset", "tail" : "", "member" : "com.khulnasoft.spark.connector.types.CassandraOption.Unset", "link" : "com\/khulnasoft\/spark\/connector\/types\/CassandraOption$.html#Unset", "kind" : "object"}, {"label" : "Value", "tail" : "", "member" : "com.khulnasoft.spark.connector.types.CassandraOption.Value", "link" : "com\/khulnasoft\/spark\/connector\/types\/CassandraOption$.html#Value[+A]extendsCassandraOption[A]withProductwithSerializable", "kind" : "case class"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/types\/CassandraOption$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/types\/CassandraOption$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/types\/CassandraOption$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/types\/CassandraOption$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/types\/CassandraOption$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/types\/CassandraOption$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/types\/CassandraOption$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/CassandraOption$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/CassandraOption$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/CassandraOption$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/types\/CassandraOption$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/types\/CassandraOption$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/khulnasoft\/spark\/connector\/types\/CassandraOption$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/types\/CassandraOption$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/khulnasoft\/spark\/connector\/types\/CassandraOption$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/khulnasoft\/spark\/connector\/types\/CassandraOption$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/types\/CassandraOption$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/types\/CassandraOption$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/types\/CassandraOption$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "com\/khulnasoft\/spark\/connector\/types\/CassandraOption.html", "kind" : "trait"}, {"name" : "com.khulnasoft.spark.connector.types.ChainedTypeConverter", "shortDescription" : "Chains together several converters converting to the same type.", "members_class" : [{"label" : "convertPF", "tail" : "(): PartialFunction[Any, T]", "member" : "com.khulnasoft.spark.connector.types.ChainedTypeConverter.convertPF", "link" : "com\/khulnasoft\/spark\/connector\/types\/ChainedTypeConverter.html#convertPF:PartialFunction[Any,T]", "kind" : "def"}, {"label" : "targetTypeTag", "tail" : "(): scala.reflect.api.JavaUniverse.TypeTag[T]", "member" : "com.khulnasoft.spark.connector.types.ChainedTypeConverter.targetTypeTag", "link" : "com\/khulnasoft\/spark\/connector\/types\/ChainedTypeConverter.html#targetTypeTag:reflect.runtime.universe.TypeTag[T]", "kind" : "def"}, {"member" : "com.khulnasoft.spark.connector.types.ChainedTypeConverter#<init>", "error" : "unsupported entity"}, {"label" : "convert", "tail" : "(obj: Any): T", "member" : "com.khulnasoft.spark.connector.types.NullableTypeConverter.convert", "link" : "com\/khulnasoft\/spark\/connector\/types\/ChainedTypeConverter.html#convert(obj:Any):T", "kind" : "def"}, {"label" : "targetTypeName", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.types.TypeConverter.targetTypeName", "link" : "com\/khulnasoft\/spark\/connector\/types\/ChainedTypeConverter.html#targetTypeName:String", "kind" : "def"}, {"label" : "targetType", "tail" : "", "member" : "com.khulnasoft.spark.connector.types.TypeConverter.targetType", "link" : "com\/khulnasoft\/spark\/connector\/types\/ChainedTypeConverter.html#targetType=T", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/types\/ChainedTypeConverter.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/types\/ChainedTypeConverter.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/types\/ChainedTypeConverter.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/types\/ChainedTypeConverter.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/types\/ChainedTypeConverter.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/types\/ChainedTypeConverter.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/types\/ChainedTypeConverter.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/ChainedTypeConverter.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/ChainedTypeConverter.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/ChainedTypeConverter.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/types\/ChainedTypeConverter.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/types\/ChainedTypeConverter.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/khulnasoft\/spark\/connector\/types\/ChainedTypeConverter.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/types\/ChainedTypeConverter.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/khulnasoft\/spark\/connector\/types\/ChainedTypeConverter.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/khulnasoft\/spark\/connector\/types\/ChainedTypeConverter.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/types\/ChainedTypeConverter.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/types\/ChainedTypeConverter.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/types\/ChainedTypeConverter.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/khulnasoft\/spark\/connector\/types\/ChainedTypeConverter.html", "kind" : "class"}, {"name" : "com.khulnasoft.spark.connector.types.CollectionColumnType", "members_trait" : [{"label" : "nestedElementTypeName", "tail" : "(elemType: ColumnType[_]): String", "member" : "com.khulnasoft.spark.connector.types.CollectionColumnType.nestedElementTypeName", "link" : "com\/khulnasoft\/spark\/connector\/types\/CollectionColumnType.html#nestedElementTypeName(elemType:com.khulnasoft.spark.connector.types.ColumnType[_]):String", "kind" : "def"}, {"label" : "isCollection", "tail" : "(): Boolean", "member" : "com.khulnasoft.spark.connector.types.CollectionColumnType.isCollection", "link" : "com\/khulnasoft\/spark\/connector\/types\/CollectionColumnType.html#isCollection:Boolean", "kind" : "def"}, {"label" : "isMultiCell", "tail" : "(): Boolean", "member" : "com.khulnasoft.spark.connector.types.ColumnType.isMultiCell", "link" : "com\/khulnasoft\/spark\/connector\/types\/CollectionColumnType.html#isMultiCell:Boolean", "kind" : "def"}, {"label" : "isFrozen", "tail" : "(): Boolean", "member" : "com.khulnasoft.spark.connector.types.ColumnType.isFrozen", "link" : "com\/khulnasoft\/spark\/connector\/types\/CollectionColumnType.html#isFrozen:Boolean", "kind" : "def"}, {"label" : "scalaTypeName", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.types.ColumnType.scalaTypeName", "link" : "com\/khulnasoft\/spark\/connector\/types\/CollectionColumnType.html#scalaTypeName:String", "kind" : "def"}, {"label" : "converterToScala", "tail" : ": TypeConverter[T]", "member" : "com.khulnasoft.spark.connector.types.ColumnType.converterToScala", "link" : "com\/khulnasoft\/spark\/connector\/types\/CollectionColumnType.html#converterToScala:com.khulnasoft.spark.connector.types.TypeConverter[T]", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/types\/CollectionColumnType.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/types\/CollectionColumnType.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/types\/CollectionColumnType.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/types\/CollectionColumnType.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/types\/CollectionColumnType.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/types\/CollectionColumnType.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/types\/CollectionColumnType.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/CollectionColumnType.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/CollectionColumnType.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/CollectionColumnType.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/types\/CollectionColumnType.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/types\/CollectionColumnType.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/khulnasoft\/spark\/connector\/types\/CollectionColumnType.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/types\/CollectionColumnType.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/khulnasoft\/spark\/connector\/types\/CollectionColumnType.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/khulnasoft\/spark\/connector\/types\/CollectionColumnType.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/types\/CollectionColumnType.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/types\/CollectionColumnType.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/types\/CollectionColumnType.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "cqlTypeName", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.types.ColumnType.cqlTypeName", "link" : "com\/khulnasoft\/spark\/connector\/types\/CollectionColumnType.html#cqlTypeName:String", "kind" : "abstract def"}, {"label" : "scalaTypeTag", "tail" : "(): scala.reflect.api.JavaUniverse.TypeTag[T]", "member" : "com.khulnasoft.spark.connector.types.ColumnType.scalaTypeTag", "link" : "com\/khulnasoft\/spark\/connector\/types\/CollectionColumnType.html#scalaTypeTag:reflect.runtime.universe.TypeTag[T]", "kind" : "abstract def"}, {"label" : "converterToCassandra", "tail" : "(): TypeConverter[_ <: AnyRef]", "member" : "com.khulnasoft.spark.connector.types.ColumnType.converterToCassandra", "link" : "com\/khulnasoft\/spark\/connector\/types\/CollectionColumnType.html#converterToCassandra:com.khulnasoft.spark.connector.types.TypeConverter[_<:AnyRef]", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "com\/khulnasoft\/spark\/connector\/types\/CollectionColumnType.html", "kind" : "trait"}, {"name" : "com.khulnasoft.spark.connector.types.ColumnType", "members_trait" : [{"label" : "isMultiCell", "tail" : "(): Boolean", "member" : "com.khulnasoft.spark.connector.types.ColumnType.isMultiCell", "link" : "com\/khulnasoft\/spark\/connector\/types\/ColumnType.html#isMultiCell:Boolean", "kind" : "def"}, {"label" : "isFrozen", "tail" : "(): Boolean", "member" : "com.khulnasoft.spark.connector.types.ColumnType.isFrozen", "link" : "com\/khulnasoft\/spark\/connector\/types\/ColumnType.html#isFrozen:Boolean", "kind" : "def"}, {"label" : "scalaTypeName", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.types.ColumnType.scalaTypeName", "link" : "com\/khulnasoft\/spark\/connector\/types\/ColumnType.html#scalaTypeName:String", "kind" : "def"}, {"label" : "converterToScala", "tail" : ": TypeConverter[T]", "member" : "com.khulnasoft.spark.connector.types.ColumnType.converterToScala", "link" : "com\/khulnasoft\/spark\/connector\/types\/ColumnType.html#converterToScala:com.khulnasoft.spark.connector.types.TypeConverter[T]", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/types\/ColumnType.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/types\/ColumnType.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/types\/ColumnType.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/types\/ColumnType.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/types\/ColumnType.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/types\/ColumnType.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/types\/ColumnType.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/ColumnType.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/ColumnType.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/ColumnType.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/types\/ColumnType.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/types\/ColumnType.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/khulnasoft\/spark\/connector\/types\/ColumnType.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/types\/ColumnType.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/khulnasoft\/spark\/connector\/types\/ColumnType.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/khulnasoft\/spark\/connector\/types\/ColumnType.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/types\/ColumnType.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/types\/ColumnType.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/types\/ColumnType.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "isCollection", "tail" : "(): Boolean", "member" : "com.khulnasoft.spark.connector.types.ColumnType.isCollection", "link" : "com\/khulnasoft\/spark\/connector\/types\/ColumnType.html#isCollection:Boolean", "kind" : "abstract def"}, {"label" : "cqlTypeName", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.types.ColumnType.cqlTypeName", "link" : "com\/khulnasoft\/spark\/connector\/types\/ColumnType.html#cqlTypeName:String", "kind" : "abstract def"}, {"label" : "scalaTypeTag", "tail" : "(): scala.reflect.api.JavaUniverse.TypeTag[T]", "member" : "com.khulnasoft.spark.connector.types.ColumnType.scalaTypeTag", "link" : "com\/khulnasoft\/spark\/connector\/types\/ColumnType.html#scalaTypeTag:reflect.runtime.universe.TypeTag[T]", "kind" : "abstract def"}, {"label" : "converterToCassandra", "tail" : "(): TypeConverter[_ <: AnyRef]", "member" : "com.khulnasoft.spark.connector.types.ColumnType.converterToCassandra", "link" : "com\/khulnasoft\/spark\/connector\/types\/ColumnType.html#converterToCassandra:com.khulnasoft.spark.connector.types.TypeConverter[_<:AnyRef]", "kind" : "abstract def"}], "shortDescription" : "Serializable representation of column data type.", "object" : "com\/khulnasoft\/spark\/connector\/types\/ColumnType$.html", "members_object" : [{"label" : "converterToCassandra", "tail" : "(dataType: DataType): TypeConverter[_ <: AnyRef]", "member" : "com.khulnasoft.spark.connector.types.ColumnType.converterToCassandra", "link" : "com\/khulnasoft\/spark\/connector\/types\/ColumnType$.html#converterToCassandra(dataType:com.khulnasoft.oss.driver.api.core.type.DataType):com.khulnasoft.spark.connector.types.TypeConverter[_<:AnyRef]", "kind" : "def"}, {"label" : "fromScalaType", "tail" : "(dataType: scala.reflect.api.JavaUniverse.Type, protocolVersion: ProtocolVersion): ColumnType[_]", "member" : "com.khulnasoft.spark.connector.types.ColumnType.fromScalaType", "link" : "com\/khulnasoft\/spark\/connector\/types\/ColumnType$.html#fromScalaType(dataType:reflect.runtime.universe.Type,protocolVersion:com.khulnasoft.oss.driver.api.core.ProtocolVersion):com.khulnasoft.spark.connector.types.ColumnType[_]", "kind" : "def"}, {"label" : "fromDriverType", "tail" : "(dataType: DataType): ColumnType[_]", "member" : "com.khulnasoft.spark.connector.types.ColumnType.fromDriverType", "link" : "com\/khulnasoft\/spark\/connector\/types\/ColumnType$.html#fromDriverType(dataType:com.khulnasoft.oss.driver.api.core.type.DataType):com.khulnasoft.spark.connector.types.ColumnType[_]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/types\/ColumnType$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/types\/ColumnType$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/types\/ColumnType$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/types\/ColumnType$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/types\/ColumnType$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/types\/ColumnType$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/types\/ColumnType$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/ColumnType$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/ColumnType$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/ColumnType$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/types\/ColumnType$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/types\/ColumnType$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/khulnasoft\/spark\/connector\/types\/ColumnType$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/types\/ColumnType$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/khulnasoft\/spark\/connector\/types\/ColumnType$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/khulnasoft\/spark\/connector\/types\/ColumnType$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/types\/ColumnType$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/types\/ColumnType$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/types\/ColumnType$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "com\/khulnasoft\/spark\/connector\/types\/ColumnType.html", "kind" : "trait"}, {"name" : "com.khulnasoft.spark.connector.types.CounterType", "shortDescription" : "", "object" : "com\/khulnasoft\/spark\/connector\/types\/CounterType$.html", "members_object" : [{"label" : "converterToCassandra", "tail" : "(): OptionToNullConverter", "member" : "com.khulnasoft.spark.connector.types.CounterType.converterToCassandra", "link" : "com\/khulnasoft\/spark\/connector\/types\/CounterType$.html#converterToCassandra:com.khulnasoft.spark.connector.types.TypeConverter.OptionToNullConverter", "kind" : "def"}, {"label" : "cqlTypeName", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.types.CounterType.cqlTypeName", "link" : "com\/khulnasoft\/spark\/connector\/types\/CounterType$.html#cqlTypeName:String", "kind" : "def"}, {"label" : "scalaTypeTag", "tail" : "(): scala.reflect.api.JavaUniverse.TypeTag[Long]", "member" : "com.khulnasoft.spark.connector.types.CounterType.scalaTypeTag", "link" : "com\/khulnasoft\/spark\/connector\/types\/CounterType$.html#scalaTypeTag:reflect.runtime.universe.TypeTag[Long]", "kind" : "def"}, {"label" : "isCollection", "tail" : "(): Boolean", "member" : "com.khulnasoft.spark.connector.types.PrimitiveColumnType.isCollection", "link" : "com\/khulnasoft\/spark\/connector\/types\/CounterType$.html#isCollection:Boolean", "kind" : "def"}, {"label" : "isMultiCell", "tail" : "(): Boolean", "member" : "com.khulnasoft.spark.connector.types.ColumnType.isMultiCell", "link" : "com\/khulnasoft\/spark\/connector\/types\/CounterType$.html#isMultiCell:Boolean", "kind" : "def"}, {"label" : "isFrozen", "tail" : "(): Boolean", "member" : "com.khulnasoft.spark.connector.types.ColumnType.isFrozen", "link" : "com\/khulnasoft\/spark\/connector\/types\/CounterType$.html#isFrozen:Boolean", "kind" : "def"}, {"label" : "scalaTypeName", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.types.ColumnType.scalaTypeName", "link" : "com\/khulnasoft\/spark\/connector\/types\/CounterType$.html#scalaTypeName:String", "kind" : "def"}, {"label" : "converterToScala", "tail" : ": TypeConverter[Long]", "member" : "com.khulnasoft.spark.connector.types.ColumnType.converterToScala", "link" : "com\/khulnasoft\/spark\/connector\/types\/CounterType$.html#converterToScala:com.khulnasoft.spark.connector.types.TypeConverter[T]", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/types\/CounterType$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/types\/CounterType$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/types\/CounterType$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/types\/CounterType$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/types\/CounterType$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/types\/CounterType$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/types\/CounterType$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/CounterType$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/CounterType$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/CounterType$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/types\/CounterType$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/types\/CounterType$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/types\/CounterType$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/khulnasoft\/spark\/connector\/types\/CounterType$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/types\/CounterType$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/types\/CounterType$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/types\/CounterType$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.khulnasoft.spark.connector.types.DateRangeType", "shortDescription" : "", "object" : "com\/khulnasoft\/spark\/connector\/types\/DateRangeType$.html", "members_object" : [{"label" : "converterToCassandra", "tail" : "(): OptionToNullConverter", "member" : "com.khulnasoft.spark.connector.types.DateRangeType.converterToCassandra", "link" : "com\/khulnasoft\/spark\/connector\/types\/DateRangeType$.html#converterToCassandra:com.khulnasoft.spark.connector.types.TypeConverter.OptionToNullConverter", "kind" : "def"}, {"label" : "cqlTypeName", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.types.DateRangeType.cqlTypeName", "link" : "com\/khulnasoft\/spark\/connector\/types\/DateRangeType$.html#cqlTypeName:String", "kind" : "def"}, {"label" : "scalaTypeTag", "tail" : "(): scala.reflect.api.JavaUniverse.TypeTag[DateRange]", "member" : "com.khulnasoft.spark.connector.types.DateRangeType.scalaTypeTag", "link" : "com\/khulnasoft\/spark\/connector\/types\/DateRangeType$.html#scalaTypeTag:reflect.runtime.universe.TypeTag[com.khulnasoft.dse.driver.api.core.data.time.DateRange]", "kind" : "def"}, {"label" : "isCollection", "tail" : "(): Boolean", "member" : "com.khulnasoft.spark.connector.types.PrimitiveColumnType.isCollection", "link" : "com\/khulnasoft\/spark\/connector\/types\/DateRangeType$.html#isCollection:Boolean", "kind" : "def"}, {"label" : "isMultiCell", "tail" : "(): Boolean", "member" : "com.khulnasoft.spark.connector.types.ColumnType.isMultiCell", "link" : "com\/khulnasoft\/spark\/connector\/types\/DateRangeType$.html#isMultiCell:Boolean", "kind" : "def"}, {"label" : "isFrozen", "tail" : "(): Boolean", "member" : "com.khulnasoft.spark.connector.types.ColumnType.isFrozen", "link" : "com\/khulnasoft\/spark\/connector\/types\/DateRangeType$.html#isFrozen:Boolean", "kind" : "def"}, {"label" : "scalaTypeName", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.types.ColumnType.scalaTypeName", "link" : "com\/khulnasoft\/spark\/connector\/types\/DateRangeType$.html#scalaTypeName:String", "kind" : "def"}, {"label" : "converterToScala", "tail" : ": TypeConverter[DateRange]", "member" : "com.khulnasoft.spark.connector.types.ColumnType.converterToScala", "link" : "com\/khulnasoft\/spark\/connector\/types\/DateRangeType$.html#converterToScala:com.khulnasoft.spark.connector.types.TypeConverter[T]", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/types\/DateRangeType$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/types\/DateRangeType$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/types\/DateRangeType$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/types\/DateRangeType$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/types\/DateRangeType$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/types\/DateRangeType$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/types\/DateRangeType$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/DateRangeType$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/DateRangeType$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/DateRangeType$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/types\/DateRangeType$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/types\/DateRangeType$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/types\/DateRangeType$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/khulnasoft\/spark\/connector\/types\/DateRangeType$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/types\/DateRangeType$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/types\/DateRangeType$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/types\/DateRangeType$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.khulnasoft.spark.connector.types.DateType", "shortDescription" : "", "object" : "com\/khulnasoft\/spark\/connector\/types\/DateType$.html", "members_object" : [{"label" : "converterToCassandra", "tail" : "(): OptionToNullConverter", "member" : "com.khulnasoft.spark.connector.types.DateType.converterToCassandra", "link" : "com\/khulnasoft\/spark\/connector\/types\/DateType$.html#converterToCassandra:com.khulnasoft.spark.connector.types.TypeConverter.OptionToNullConverter", "kind" : "def"}, {"label" : "cqlTypeName", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.types.DateType.cqlTypeName", "link" : "com\/khulnasoft\/spark\/connector\/types\/DateType$.html#cqlTypeName:String", "kind" : "def"}, {"label" : "scalaTypeTag", "tail" : "(): scala.reflect.api.JavaUniverse.TypeTag[LocalDate]", "member" : "com.khulnasoft.spark.connector.types.DateType.scalaTypeTag", "link" : "com\/khulnasoft\/spark\/connector\/types\/DateType$.html#scalaTypeTag:reflect.runtime.universe.TypeTag[java.time.LocalDate]", "kind" : "def"}, {"label" : "isCollection", "tail" : "(): Boolean", "member" : "com.khulnasoft.spark.connector.types.PrimitiveColumnType.isCollection", "link" : "com\/khulnasoft\/spark\/connector\/types\/DateType$.html#isCollection:Boolean", "kind" : "def"}, {"label" : "isMultiCell", "tail" : "(): Boolean", "member" : "com.khulnasoft.spark.connector.types.ColumnType.isMultiCell", "link" : "com\/khulnasoft\/spark\/connector\/types\/DateType$.html#isMultiCell:Boolean", "kind" : "def"}, {"label" : "isFrozen", "tail" : "(): Boolean", "member" : "com.khulnasoft.spark.connector.types.ColumnType.isFrozen", "link" : "com\/khulnasoft\/spark\/connector\/types\/DateType$.html#isFrozen:Boolean", "kind" : "def"}, {"label" : "scalaTypeName", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.types.ColumnType.scalaTypeName", "link" : "com\/khulnasoft\/spark\/connector\/types\/DateType$.html#scalaTypeName:String", "kind" : "def"}, {"label" : "converterToScala", "tail" : ": TypeConverter[LocalDate]", "member" : "com.khulnasoft.spark.connector.types.ColumnType.converterToScala", "link" : "com\/khulnasoft\/spark\/connector\/types\/DateType$.html#converterToScala:com.khulnasoft.spark.connector.types.TypeConverter[T]", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/types\/DateType$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/types\/DateType$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/types\/DateType$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/types\/DateType$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/types\/DateType$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/types\/DateType$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/types\/DateType$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/DateType$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/DateType$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/DateType$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/types\/DateType$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/types\/DateType$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/types\/DateType$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/khulnasoft\/spark\/connector\/types\/DateType$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/types\/DateType$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/types\/DateType$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/types\/DateType$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.khulnasoft.spark.connector.types.DecimalType", "shortDescription" : "", "object" : "com\/khulnasoft\/spark\/connector\/types\/DecimalType$.html", "members_object" : [{"label" : "converterToCassandra", "tail" : "(): OptionToNullConverter", "member" : "com.khulnasoft.spark.connector.types.DecimalType.converterToCassandra", "link" : "com\/khulnasoft\/spark\/connector\/types\/DecimalType$.html#converterToCassandra:com.khulnasoft.spark.connector.types.TypeConverter.OptionToNullConverter", "kind" : "def"}, {"label" : "cqlTypeName", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.types.DecimalType.cqlTypeName", "link" : "com\/khulnasoft\/spark\/connector\/types\/DecimalType$.html#cqlTypeName:String", "kind" : "def"}, {"label" : "scalaTypeTag", "tail" : "(): scala.reflect.api.JavaUniverse.TypeTag[BigDecimal]", "member" : "com.khulnasoft.spark.connector.types.DecimalType.scalaTypeTag", "link" : "com\/khulnasoft\/spark\/connector\/types\/DecimalType$.html#scalaTypeTag:reflect.runtime.universe.TypeTag[BigDecimal]", "kind" : "def"}, {"label" : "isCollection", "tail" : "(): Boolean", "member" : "com.khulnasoft.spark.connector.types.PrimitiveColumnType.isCollection", "link" : "com\/khulnasoft\/spark\/connector\/types\/DecimalType$.html#isCollection:Boolean", "kind" : "def"}, {"label" : "isMultiCell", "tail" : "(): Boolean", "member" : "com.khulnasoft.spark.connector.types.ColumnType.isMultiCell", "link" : "com\/khulnasoft\/spark\/connector\/types\/DecimalType$.html#isMultiCell:Boolean", "kind" : "def"}, {"label" : "isFrozen", "tail" : "(): Boolean", "member" : "com.khulnasoft.spark.connector.types.ColumnType.isFrozen", "link" : "com\/khulnasoft\/spark\/connector\/types\/DecimalType$.html#isFrozen:Boolean", "kind" : "def"}, {"label" : "scalaTypeName", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.types.ColumnType.scalaTypeName", "link" : "com\/khulnasoft\/spark\/connector\/types\/DecimalType$.html#scalaTypeName:String", "kind" : "def"}, {"label" : "converterToScala", "tail" : ": TypeConverter[BigDecimal]", "member" : "com.khulnasoft.spark.connector.types.ColumnType.converterToScala", "link" : "com\/khulnasoft\/spark\/connector\/types\/DecimalType$.html#converterToScala:com.khulnasoft.spark.connector.types.TypeConverter[T]", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/types\/DecimalType$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/types\/DecimalType$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/types\/DecimalType$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/types\/DecimalType$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/types\/DecimalType$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/types\/DecimalType$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/types\/DecimalType$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/DecimalType$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/DecimalType$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/DecimalType$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/types\/DecimalType$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/types\/DecimalType$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/types\/DecimalType$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/khulnasoft\/spark\/connector\/types\/DecimalType$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/types\/DecimalType$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/types\/DecimalType$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/types\/DecimalType$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.khulnasoft.spark.connector.types.DoubleType", "shortDescription" : "", "object" : "com\/khulnasoft\/spark\/connector\/types\/DoubleType$.html", "members_object" : [{"label" : "converterToCassandra", "tail" : "(): OptionToNullConverter", "member" : "com.khulnasoft.spark.connector.types.DoubleType.converterToCassandra", "link" : "com\/khulnasoft\/spark\/connector\/types\/DoubleType$.html#converterToCassandra:com.khulnasoft.spark.connector.types.TypeConverter.OptionToNullConverter", "kind" : "def"}, {"label" : "cqlTypeName", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.types.DoubleType.cqlTypeName", "link" : "com\/khulnasoft\/spark\/connector\/types\/DoubleType$.html#cqlTypeName:String", "kind" : "def"}, {"label" : "scalaTypeTag", "tail" : "(): scala.reflect.api.JavaUniverse.TypeTag[Double]", "member" : "com.khulnasoft.spark.connector.types.DoubleType.scalaTypeTag", "link" : "com\/khulnasoft\/spark\/connector\/types\/DoubleType$.html#scalaTypeTag:reflect.runtime.universe.TypeTag[Double]", "kind" : "def"}, {"label" : "isCollection", "tail" : "(): Boolean", "member" : "com.khulnasoft.spark.connector.types.PrimitiveColumnType.isCollection", "link" : "com\/khulnasoft\/spark\/connector\/types\/DoubleType$.html#isCollection:Boolean", "kind" : "def"}, {"label" : "isMultiCell", "tail" : "(): Boolean", "member" : "com.khulnasoft.spark.connector.types.ColumnType.isMultiCell", "link" : "com\/khulnasoft\/spark\/connector\/types\/DoubleType$.html#isMultiCell:Boolean", "kind" : "def"}, {"label" : "isFrozen", "tail" : "(): Boolean", "member" : "com.khulnasoft.spark.connector.types.ColumnType.isFrozen", "link" : "com\/khulnasoft\/spark\/connector\/types\/DoubleType$.html#isFrozen:Boolean", "kind" : "def"}, {"label" : "scalaTypeName", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.types.ColumnType.scalaTypeName", "link" : "com\/khulnasoft\/spark\/connector\/types\/DoubleType$.html#scalaTypeName:String", "kind" : "def"}, {"label" : "converterToScala", "tail" : ": TypeConverter[Double]", "member" : "com.khulnasoft.spark.connector.types.ColumnType.converterToScala", "link" : "com\/khulnasoft\/spark\/connector\/types\/DoubleType$.html#converterToScala:com.khulnasoft.spark.connector.types.TypeConverter[T]", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/types\/DoubleType$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/types\/DoubleType$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/types\/DoubleType$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/types\/DoubleType$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/types\/DoubleType$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/types\/DoubleType$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/types\/DoubleType$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/DoubleType$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/DoubleType$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/DoubleType$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/types\/DoubleType$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/types\/DoubleType$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/types\/DoubleType$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/khulnasoft\/spark\/connector\/types\/DoubleType$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/types\/DoubleType$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/types\/DoubleType$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/types\/DoubleType$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.khulnasoft.spark.connector.types.DurationType", "shortDescription" : "", "object" : "com\/khulnasoft\/spark\/connector\/types\/DurationType$.html", "members_object" : [{"label" : "converterToCassandra", "tail" : "(): OptionToNullConverter", "member" : "com.khulnasoft.spark.connector.types.DurationType.converterToCassandra", "link" : "com\/khulnasoft\/spark\/connector\/types\/DurationType$.html#converterToCassandra:com.khulnasoft.spark.connector.types.TypeConverter.OptionToNullConverter", "kind" : "def"}, {"label" : "cqlTypeName", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.types.DurationType.cqlTypeName", "link" : "com\/khulnasoft\/spark\/connector\/types\/DurationType$.html#cqlTypeName:String", "kind" : "def"}, {"label" : "scalaTypeTag", "tail" : "(): scala.reflect.api.JavaUniverse.TypeTag[CqlDuration]", "member" : "com.khulnasoft.spark.connector.types.DurationType.scalaTypeTag", "link" : "com\/khulnasoft\/spark\/connector\/types\/DurationType$.html#scalaTypeTag:reflect.runtime.universe.TypeTag[com.khulnasoft.oss.driver.api.core.data.CqlDuration]", "kind" : "def"}, {"label" : "isCollection", "tail" : "(): Boolean", "member" : "com.khulnasoft.spark.connector.types.PrimitiveColumnType.isCollection", "link" : "com\/khulnasoft\/spark\/connector\/types\/DurationType$.html#isCollection:Boolean", "kind" : "def"}, {"label" : "isMultiCell", "tail" : "(): Boolean", "member" : "com.khulnasoft.spark.connector.types.ColumnType.isMultiCell", "link" : "com\/khulnasoft\/spark\/connector\/types\/DurationType$.html#isMultiCell:Boolean", "kind" : "def"}, {"label" : "isFrozen", "tail" : "(): Boolean", "member" : "com.khulnasoft.spark.connector.types.ColumnType.isFrozen", "link" : "com\/khulnasoft\/spark\/connector\/types\/DurationType$.html#isFrozen:Boolean", "kind" : "def"}, {"label" : "scalaTypeName", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.types.ColumnType.scalaTypeName", "link" : "com\/khulnasoft\/spark\/connector\/types\/DurationType$.html#scalaTypeName:String", "kind" : "def"}, {"label" : "converterToScala", "tail" : ": TypeConverter[CqlDuration]", "member" : "com.khulnasoft.spark.connector.types.ColumnType.converterToScala", "link" : "com\/khulnasoft\/spark\/connector\/types\/DurationType$.html#converterToScala:com.khulnasoft.spark.connector.types.TypeConverter[T]", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/types\/DurationType$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/types\/DurationType$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/types\/DurationType$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/types\/DurationType$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/types\/DurationType$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/types\/DurationType$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/types\/DurationType$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/DurationType$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/DurationType$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/DurationType$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/types\/DurationType$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/types\/DurationType$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/types\/DurationType$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/khulnasoft\/spark\/connector\/types\/DurationType$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/types\/DurationType$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/types\/DurationType$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/types\/DurationType$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.khulnasoft.spark.connector.types.FloatType", "shortDescription" : "", "object" : "com\/khulnasoft\/spark\/connector\/types\/FloatType$.html", "members_object" : [{"label" : "converterToCassandra", "tail" : "(): OptionToNullConverter", "member" : "com.khulnasoft.spark.connector.types.FloatType.converterToCassandra", "link" : "com\/khulnasoft\/spark\/connector\/types\/FloatType$.html#converterToCassandra:com.khulnasoft.spark.connector.types.TypeConverter.OptionToNullConverter", "kind" : "def"}, {"label" : "cqlTypeName", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.types.FloatType.cqlTypeName", "link" : "com\/khulnasoft\/spark\/connector\/types\/FloatType$.html#cqlTypeName:String", "kind" : "def"}, {"label" : "scalaTypeTag", "tail" : "(): scala.reflect.api.JavaUniverse.TypeTag[Float]", "member" : "com.khulnasoft.spark.connector.types.FloatType.scalaTypeTag", "link" : "com\/khulnasoft\/spark\/connector\/types\/FloatType$.html#scalaTypeTag:reflect.runtime.universe.TypeTag[Float]", "kind" : "def"}, {"label" : "isCollection", "tail" : "(): Boolean", "member" : "com.khulnasoft.spark.connector.types.PrimitiveColumnType.isCollection", "link" : "com\/khulnasoft\/spark\/connector\/types\/FloatType$.html#isCollection:Boolean", "kind" : "def"}, {"label" : "isMultiCell", "tail" : "(): Boolean", "member" : "com.khulnasoft.spark.connector.types.ColumnType.isMultiCell", "link" : "com\/khulnasoft\/spark\/connector\/types\/FloatType$.html#isMultiCell:Boolean", "kind" : "def"}, {"label" : "isFrozen", "tail" : "(): Boolean", "member" : "com.khulnasoft.spark.connector.types.ColumnType.isFrozen", "link" : "com\/khulnasoft\/spark\/connector\/types\/FloatType$.html#isFrozen:Boolean", "kind" : "def"}, {"label" : "scalaTypeName", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.types.ColumnType.scalaTypeName", "link" : "com\/khulnasoft\/spark\/connector\/types\/FloatType$.html#scalaTypeName:String", "kind" : "def"}, {"label" : "converterToScala", "tail" : ": TypeConverter[Float]", "member" : "com.khulnasoft.spark.connector.types.ColumnType.converterToScala", "link" : "com\/khulnasoft\/spark\/connector\/types\/FloatType$.html#converterToScala:com.khulnasoft.spark.connector.types.TypeConverter[T]", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/types\/FloatType$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/types\/FloatType$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/types\/FloatType$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/types\/FloatType$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/types\/FloatType$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/types\/FloatType$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/types\/FloatType$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/FloatType$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/FloatType$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/FloatType$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/types\/FloatType$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/types\/FloatType$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/types\/FloatType$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/khulnasoft\/spark\/connector\/types\/FloatType$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/types\/FloatType$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/types\/FloatType$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/types\/FloatType$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.khulnasoft.spark.connector.types.InetType", "shortDescription" : "", "object" : "com\/khulnasoft\/spark\/connector\/types\/InetType$.html", "members_object" : [{"label" : "converterToCassandra", "tail" : "(): OptionToNullConverter", "member" : "com.khulnasoft.spark.connector.types.InetType.converterToCassandra", "link" : "com\/khulnasoft\/spark\/connector\/types\/InetType$.html#converterToCassandra:com.khulnasoft.spark.connector.types.TypeConverter.OptionToNullConverter", "kind" : "def"}, {"label" : "cqlTypeName", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.types.InetType.cqlTypeName", "link" : "com\/khulnasoft\/spark\/connector\/types\/InetType$.html#cqlTypeName:String", "kind" : "def"}, {"label" : "scalaTypeTag", "tail" : "(): scala.reflect.api.JavaUniverse.TypeTag[InetAddress]", "member" : "com.khulnasoft.spark.connector.types.InetType.scalaTypeTag", "link" : "com\/khulnasoft\/spark\/connector\/types\/InetType$.html#scalaTypeTag:reflect.runtime.universe.TypeTag[java.net.InetAddress]", "kind" : "def"}, {"label" : "isCollection", "tail" : "(): Boolean", "member" : "com.khulnasoft.spark.connector.types.PrimitiveColumnType.isCollection", "link" : "com\/khulnasoft\/spark\/connector\/types\/InetType$.html#isCollection:Boolean", "kind" : "def"}, {"label" : "isMultiCell", "tail" : "(): Boolean", "member" : "com.khulnasoft.spark.connector.types.ColumnType.isMultiCell", "link" : "com\/khulnasoft\/spark\/connector\/types\/InetType$.html#isMultiCell:Boolean", "kind" : "def"}, {"label" : "isFrozen", "tail" : "(): Boolean", "member" : "com.khulnasoft.spark.connector.types.ColumnType.isFrozen", "link" : "com\/khulnasoft\/spark\/connector\/types\/InetType$.html#isFrozen:Boolean", "kind" : "def"}, {"label" : "scalaTypeName", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.types.ColumnType.scalaTypeName", "link" : "com\/khulnasoft\/spark\/connector\/types\/InetType$.html#scalaTypeName:String", "kind" : "def"}, {"label" : "converterToScala", "tail" : ": TypeConverter[InetAddress]", "member" : "com.khulnasoft.spark.connector.types.ColumnType.converterToScala", "link" : "com\/khulnasoft\/spark\/connector\/types\/InetType$.html#converterToScala:com.khulnasoft.spark.connector.types.TypeConverter[T]", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/types\/InetType$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/types\/InetType$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/types\/InetType$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/types\/InetType$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/types\/InetType$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/types\/InetType$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/types\/InetType$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/InetType$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/InetType$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/InetType$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/types\/InetType$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/types\/InetType$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/types\/InetType$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/khulnasoft\/spark\/connector\/types\/InetType$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/types\/InetType$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/types\/InetType$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/types\/InetType$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.khulnasoft.spark.connector.types.IntType", "shortDescription" : "", "object" : "com\/khulnasoft\/spark\/connector\/types\/IntType$.html", "members_object" : [{"label" : "converterToCassandra", "tail" : "(): OptionToNullConverter", "member" : "com.khulnasoft.spark.connector.types.IntType.converterToCassandra", "link" : "com\/khulnasoft\/spark\/connector\/types\/IntType$.html#converterToCassandra:com.khulnasoft.spark.connector.types.TypeConverter.OptionToNullConverter", "kind" : "def"}, {"label" : "cqlTypeName", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.types.IntType.cqlTypeName", "link" : "com\/khulnasoft\/spark\/connector\/types\/IntType$.html#cqlTypeName:String", "kind" : "def"}, {"label" : "scalaTypeTag", "tail" : "(): scala.reflect.api.JavaUniverse.TypeTag[Int]", "member" : "com.khulnasoft.spark.connector.types.IntType.scalaTypeTag", "link" : "com\/khulnasoft\/spark\/connector\/types\/IntType$.html#scalaTypeTag:reflect.runtime.universe.TypeTag[Int]", "kind" : "def"}, {"label" : "isCollection", "tail" : "(): Boolean", "member" : "com.khulnasoft.spark.connector.types.PrimitiveColumnType.isCollection", "link" : "com\/khulnasoft\/spark\/connector\/types\/IntType$.html#isCollection:Boolean", "kind" : "def"}, {"label" : "isMultiCell", "tail" : "(): Boolean", "member" : "com.khulnasoft.spark.connector.types.ColumnType.isMultiCell", "link" : "com\/khulnasoft\/spark\/connector\/types\/IntType$.html#isMultiCell:Boolean", "kind" : "def"}, {"label" : "isFrozen", "tail" : "(): Boolean", "member" : "com.khulnasoft.spark.connector.types.ColumnType.isFrozen", "link" : "com\/khulnasoft\/spark\/connector\/types\/IntType$.html#isFrozen:Boolean", "kind" : "def"}, {"label" : "scalaTypeName", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.types.ColumnType.scalaTypeName", "link" : "com\/khulnasoft\/spark\/connector\/types\/IntType$.html#scalaTypeName:String", "kind" : "def"}, {"label" : "converterToScala", "tail" : ": TypeConverter[Int]", "member" : "com.khulnasoft.spark.connector.types.ColumnType.converterToScala", "link" : "com\/khulnasoft\/spark\/connector\/types\/IntType$.html#converterToScala:com.khulnasoft.spark.connector.types.TypeConverter[T]", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/types\/IntType$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/types\/IntType$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/types\/IntType$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/types\/IntType$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/types\/IntType$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/types\/IntType$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/types\/IntType$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/IntType$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/IntType$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/IntType$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/types\/IntType$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/types\/IntType$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/types\/IntType$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/khulnasoft\/spark\/connector\/types\/IntType$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/types\/IntType$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/types\/IntType$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/types\/IntType$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.khulnasoft.spark.connector.types.LineStringType", "shortDescription" : "", "object" : "com\/khulnasoft\/spark\/connector\/types\/LineStringType$.html", "members_object" : [{"label" : "converterToCassandra", "tail" : "(): OptionToNullConverter", "member" : "com.khulnasoft.spark.connector.types.LineStringType.converterToCassandra", "link" : "com\/khulnasoft\/spark\/connector\/types\/LineStringType$.html#converterToCassandra:com.khulnasoft.spark.connector.types.TypeConverter.OptionToNullConverter", "kind" : "def"}, {"label" : "cqlTypeName", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.types.LineStringType.cqlTypeName", "link" : "com\/khulnasoft\/spark\/connector\/types\/LineStringType$.html#cqlTypeName:String", "kind" : "def"}, {"label" : "scalaTypeTag", "tail" : "(): scala.reflect.api.JavaUniverse.TypeTag[LineString]", "member" : "com.khulnasoft.spark.connector.types.LineStringType.scalaTypeTag", "link" : "com\/khulnasoft\/spark\/connector\/types\/LineStringType$.html#scalaTypeTag:reflect.runtime.universe.TypeTag[com.khulnasoft.dse.driver.api.core.data.geometry.LineString]", "kind" : "def"}, {"label" : "isCollection", "tail" : "(): Boolean", "member" : "com.khulnasoft.spark.connector.types.PrimitiveColumnType.isCollection", "link" : "com\/khulnasoft\/spark\/connector\/types\/LineStringType$.html#isCollection:Boolean", "kind" : "def"}, {"label" : "isMultiCell", "tail" : "(): Boolean", "member" : "com.khulnasoft.spark.connector.types.ColumnType.isMultiCell", "link" : "com\/khulnasoft\/spark\/connector\/types\/LineStringType$.html#isMultiCell:Boolean", "kind" : "def"}, {"label" : "isFrozen", "tail" : "(): Boolean", "member" : "com.khulnasoft.spark.connector.types.ColumnType.isFrozen", "link" : "com\/khulnasoft\/spark\/connector\/types\/LineStringType$.html#isFrozen:Boolean", "kind" : "def"}, {"label" : "scalaTypeName", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.types.ColumnType.scalaTypeName", "link" : "com\/khulnasoft\/spark\/connector\/types\/LineStringType$.html#scalaTypeName:String", "kind" : "def"}, {"label" : "converterToScala", "tail" : ": TypeConverter[LineString]", "member" : "com.khulnasoft.spark.connector.types.ColumnType.converterToScala", "link" : "com\/khulnasoft\/spark\/connector\/types\/LineStringType$.html#converterToScala:com.khulnasoft.spark.connector.types.TypeConverter[T]", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/types\/LineStringType$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/types\/LineStringType$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/types\/LineStringType$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/types\/LineStringType$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/types\/LineStringType$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/types\/LineStringType$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/types\/LineStringType$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/LineStringType$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/LineStringType$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/LineStringType$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/types\/LineStringType$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/types\/LineStringType$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/types\/LineStringType$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/khulnasoft\/spark\/connector\/types\/LineStringType$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/types\/LineStringType$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/types\/LineStringType$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/types\/LineStringType$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.khulnasoft.spark.connector.types.ListType", "shortDescription" : "", "members_case class" : [{"label" : "converterToCassandra", "tail" : "(): TypeConverter[_ <: AnyRef]", "member" : "com.khulnasoft.spark.connector.types.ListType.converterToCassandra", "link" : "com\/khulnasoft\/spark\/connector\/types\/ListType.html#converterToCassandra:com.khulnasoft.spark.connector.types.TypeConverter[_<:AnyRef]", "kind" : "def"}, {"label" : "cqlTypeName", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.types.ListType.cqlTypeName", "link" : "com\/khulnasoft\/spark\/connector\/types\/ListType.html#cqlTypeName:String", "kind" : "def"}, {"label" : "scalaTypeTag", "tail" : ": scala.reflect.api.JavaUniverse.TypeTag[Vector[T]]", "member" : "com.khulnasoft.spark.connector.types.ListType.scalaTypeTag", "link" : "com\/khulnasoft\/spark\/connector\/types\/ListType.html#scalaTypeTag:reflect.runtime.universe.TypeTag[Vector[T]]", "kind" : "lazy val"}, {"member" : "com.khulnasoft.spark.connector.types.ListType#<init>", "error" : "unsupported entity"}, {"label" : "isFrozen", "tail" : ": Boolean", "member" : "com.khulnasoft.spark.connector.types.ListType.isFrozen", "link" : "com\/khulnasoft\/spark\/connector\/types\/ListType.html#isFrozen:Boolean", "kind" : "val"}, {"label" : "elemType", "tail" : ": ColumnType[T]", "member" : "com.khulnasoft.spark.connector.types.ListType.elemType", "link" : "com\/khulnasoft\/spark\/connector\/types\/ListType.html#elemType:com.khulnasoft.spark.connector.types.ColumnType[T]", "kind" : "val"}, {"label" : "nestedElementTypeName", "tail" : "(elemType: ColumnType[_]): String", "member" : "com.khulnasoft.spark.connector.types.CollectionColumnType.nestedElementTypeName", "link" : "com\/khulnasoft\/spark\/connector\/types\/ListType.html#nestedElementTypeName(elemType:com.khulnasoft.spark.connector.types.ColumnType[_]):String", "kind" : "def"}, {"label" : "isCollection", "tail" : "(): Boolean", "member" : "com.khulnasoft.spark.connector.types.CollectionColumnType.isCollection", "link" : "com\/khulnasoft\/spark\/connector\/types\/ListType.html#isCollection:Boolean", "kind" : "def"}, {"label" : "isMultiCell", "tail" : "(): Boolean", "member" : "com.khulnasoft.spark.connector.types.ColumnType.isMultiCell", "link" : "com\/khulnasoft\/spark\/connector\/types\/ListType.html#isMultiCell:Boolean", "kind" : "def"}, {"label" : "scalaTypeName", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.types.ColumnType.scalaTypeName", "link" : "com\/khulnasoft\/spark\/connector\/types\/ListType.html#scalaTypeName:String", "kind" : "def"}, {"label" : "converterToScala", "tail" : ": TypeConverter[Vector[T]]", "member" : "com.khulnasoft.spark.connector.types.ColumnType.converterToScala", "link" : "com\/khulnasoft\/spark\/connector\/types\/ListType.html#converterToScala:com.khulnasoft.spark.connector.types.TypeConverter[T]", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/types\/ListType.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/types\/ListType.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/types\/ListType.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/types\/ListType.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/types\/ListType.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/types\/ListType.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/types\/ListType.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/ListType.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/ListType.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/ListType.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/types\/ListType.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/types\/ListType.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/types\/ListType.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/types\/ListType.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/types\/ListType.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/types\/ListType.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/khulnasoft\/spark\/connector\/types\/ListType.html", "kind" : "case class"}, {"name" : "com.khulnasoft.spark.connector.types.MapType", "shortDescription" : "", "members_case class" : [{"label" : "converterToCassandra", "tail" : "(): TypeConverter[_ <: AnyRef]", "member" : "com.khulnasoft.spark.connector.types.MapType.converterToCassandra", "link" : "com\/khulnasoft\/spark\/connector\/types\/MapType.html#converterToCassandra:com.khulnasoft.spark.connector.types.TypeConverter[_<:AnyRef]", "kind" : "def"}, {"label" : "cqlTypeName", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.types.MapType.cqlTypeName", "link" : "com\/khulnasoft\/spark\/connector\/types\/MapType.html#cqlTypeName:String", "kind" : "def"}, {"label" : "scalaTypeTag", "tail" : ": scala.reflect.api.JavaUniverse.TypeTag[Map[K, V]]", "member" : "com.khulnasoft.spark.connector.types.MapType.scalaTypeTag", "link" : "com\/khulnasoft\/spark\/connector\/types\/MapType.html#scalaTypeTag:reflect.runtime.universe.TypeTag[Map[K,V]]", "kind" : "lazy val"}, {"member" : "com.khulnasoft.spark.connector.types.MapType#<init>", "error" : "unsupported entity"}, {"label" : "isFrozen", "tail" : ": Boolean", "member" : "com.khulnasoft.spark.connector.types.MapType.isFrozen", "link" : "com\/khulnasoft\/spark\/connector\/types\/MapType.html#isFrozen:Boolean", "kind" : "val"}, {"label" : "valueType", "tail" : ": ColumnType[V]", "member" : "com.khulnasoft.spark.connector.types.MapType.valueType", "link" : "com\/khulnasoft\/spark\/connector\/types\/MapType.html#valueType:com.khulnasoft.spark.connector.types.ColumnType[V]", "kind" : "val"}, {"label" : "keyType", "tail" : ": ColumnType[K]", "member" : "com.khulnasoft.spark.connector.types.MapType.keyType", "link" : "com\/khulnasoft\/spark\/connector\/types\/MapType.html#keyType:com.khulnasoft.spark.connector.types.ColumnType[K]", "kind" : "val"}, {"label" : "nestedElementTypeName", "tail" : "(elemType: ColumnType[_]): String", "member" : "com.khulnasoft.spark.connector.types.CollectionColumnType.nestedElementTypeName", "link" : "com\/khulnasoft\/spark\/connector\/types\/MapType.html#nestedElementTypeName(elemType:com.khulnasoft.spark.connector.types.ColumnType[_]):String", "kind" : "def"}, {"label" : "isCollection", "tail" : "(): Boolean", "member" : "com.khulnasoft.spark.connector.types.CollectionColumnType.isCollection", "link" : "com\/khulnasoft\/spark\/connector\/types\/MapType.html#isCollection:Boolean", "kind" : "def"}, {"label" : "isMultiCell", "tail" : "(): Boolean", "member" : "com.khulnasoft.spark.connector.types.ColumnType.isMultiCell", "link" : "com\/khulnasoft\/spark\/connector\/types\/MapType.html#isMultiCell:Boolean", "kind" : "def"}, {"label" : "scalaTypeName", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.types.ColumnType.scalaTypeName", "link" : "com\/khulnasoft\/spark\/connector\/types\/MapType.html#scalaTypeName:String", "kind" : "def"}, {"label" : "converterToScala", "tail" : ": TypeConverter[Map[K, V]]", "member" : "com.khulnasoft.spark.connector.types.ColumnType.converterToScala", "link" : "com\/khulnasoft\/spark\/connector\/types\/MapType.html#converterToScala:com.khulnasoft.spark.connector.types.TypeConverter[T]", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/types\/MapType.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/types\/MapType.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/types\/MapType.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/types\/MapType.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/types\/MapType.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/types\/MapType.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/types\/MapType.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/MapType.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/MapType.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/MapType.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/types\/MapType.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/types\/MapType.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/types\/MapType.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/types\/MapType.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/types\/MapType.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/types\/MapType.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/khulnasoft\/spark\/connector\/types\/MapType.html", "kind" : "case class"}, {"name" : "com.khulnasoft.spark.connector.types.NullableTypeConverter", "members_trait" : [{"label" : "convert", "tail" : "(obj: Any): T", "member" : "com.khulnasoft.spark.connector.types.NullableTypeConverter.convert", "link" : "com\/khulnasoft\/spark\/connector\/types\/NullableTypeConverter.html#convert(obj:Any):T", "kind" : "def"}, {"label" : "targetTypeName", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.types.TypeConverter.targetTypeName", "link" : "com\/khulnasoft\/spark\/connector\/types\/NullableTypeConverter.html#targetTypeName:String", "kind" : "def"}, {"label" : "targetType", "tail" : "", "member" : "com.khulnasoft.spark.connector.types.TypeConverter.targetType", "link" : "com\/khulnasoft\/spark\/connector\/types\/NullableTypeConverter.html#targetType=T", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/types\/NullableTypeConverter.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/types\/NullableTypeConverter.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/types\/NullableTypeConverter.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/types\/NullableTypeConverter.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/types\/NullableTypeConverter.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/types\/NullableTypeConverter.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/types\/NullableTypeConverter.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/NullableTypeConverter.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/NullableTypeConverter.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/NullableTypeConverter.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/types\/NullableTypeConverter.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/types\/NullableTypeConverter.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/khulnasoft\/spark\/connector\/types\/NullableTypeConverter.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/types\/NullableTypeConverter.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/khulnasoft\/spark\/connector\/types\/NullableTypeConverter.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/khulnasoft\/spark\/connector\/types\/NullableTypeConverter.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/types\/NullableTypeConverter.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/types\/NullableTypeConverter.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/types\/NullableTypeConverter.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "convertPF", "tail" : "(): PartialFunction[Any, T]", "member" : "com.khulnasoft.spark.connector.types.TypeConverter.convertPF", "link" : "com\/khulnasoft\/spark\/connector\/types\/NullableTypeConverter.html#convertPF:PartialFunction[Any,T]", "kind" : "abstract def"}, {"label" : "targetTypeTag", "tail" : "(): scala.reflect.api.JavaUniverse.TypeTag[T]", "member" : "com.khulnasoft.spark.connector.types.TypeConverter.targetTypeTag", "link" : "com\/khulnasoft\/spark\/connector\/types\/NullableTypeConverter.html#targetTypeTag:reflect.runtime.universe.TypeTag[T]", "kind" : "abstract def"}], "shortDescription" : "Handles nullable types and converts any null to null.", "trait" : "com\/khulnasoft\/spark\/connector\/types\/NullableTypeConverter.html", "kind" : "trait"}, {"name" : "com.khulnasoft.spark.connector.types.PointType", "shortDescription" : "", "object" : "com\/khulnasoft\/spark\/connector\/types\/PointType$.html", "members_object" : [{"label" : "converterToCassandra", "tail" : "(): OptionToNullConverter", "member" : "com.khulnasoft.spark.connector.types.PointType.converterToCassandra", "link" : "com\/khulnasoft\/spark\/connector\/types\/PointType$.html#converterToCassandra:com.khulnasoft.spark.connector.types.TypeConverter.OptionToNullConverter", "kind" : "def"}, {"label" : "cqlTypeName", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.types.PointType.cqlTypeName", "link" : "com\/khulnasoft\/spark\/connector\/types\/PointType$.html#cqlTypeName:String", "kind" : "def"}, {"label" : "scalaTypeTag", "tail" : "(): scala.reflect.api.JavaUniverse.TypeTag[Point]", "member" : "com.khulnasoft.spark.connector.types.PointType.scalaTypeTag", "link" : "com\/khulnasoft\/spark\/connector\/types\/PointType$.html#scalaTypeTag:reflect.runtime.universe.TypeTag[com.khulnasoft.dse.driver.api.core.data.geometry.Point]", "kind" : "def"}, {"label" : "isCollection", "tail" : "(): Boolean", "member" : "com.khulnasoft.spark.connector.types.PrimitiveColumnType.isCollection", "link" : "com\/khulnasoft\/spark\/connector\/types\/PointType$.html#isCollection:Boolean", "kind" : "def"}, {"label" : "isMultiCell", "tail" : "(): Boolean", "member" : "com.khulnasoft.spark.connector.types.ColumnType.isMultiCell", "link" : "com\/khulnasoft\/spark\/connector\/types\/PointType$.html#isMultiCell:Boolean", "kind" : "def"}, {"label" : "isFrozen", "tail" : "(): Boolean", "member" : "com.khulnasoft.spark.connector.types.ColumnType.isFrozen", "link" : "com\/khulnasoft\/spark\/connector\/types\/PointType$.html#isFrozen:Boolean", "kind" : "def"}, {"label" : "scalaTypeName", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.types.ColumnType.scalaTypeName", "link" : "com\/khulnasoft\/spark\/connector\/types\/PointType$.html#scalaTypeName:String", "kind" : "def"}, {"label" : "converterToScala", "tail" : ": TypeConverter[Point]", "member" : "com.khulnasoft.spark.connector.types.ColumnType.converterToScala", "link" : "com\/khulnasoft\/spark\/connector\/types\/PointType$.html#converterToScala:com.khulnasoft.spark.connector.types.TypeConverter[T]", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/types\/PointType$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/types\/PointType$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/types\/PointType$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/types\/PointType$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/types\/PointType$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/types\/PointType$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/types\/PointType$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/PointType$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/PointType$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/PointType$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/types\/PointType$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/types\/PointType$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/types\/PointType$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/khulnasoft\/spark\/connector\/types\/PointType$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/types\/PointType$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/types\/PointType$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/types\/PointType$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.khulnasoft.spark.connector.types.PolygonType", "shortDescription" : "", "object" : "com\/khulnasoft\/spark\/connector\/types\/PolygonType$.html", "members_object" : [{"label" : "converterToCassandra", "tail" : "(): OptionToNullConverter", "member" : "com.khulnasoft.spark.connector.types.PolygonType.converterToCassandra", "link" : "com\/khulnasoft\/spark\/connector\/types\/PolygonType$.html#converterToCassandra:com.khulnasoft.spark.connector.types.TypeConverter.OptionToNullConverter", "kind" : "def"}, {"label" : "cqlTypeName", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.types.PolygonType.cqlTypeName", "link" : "com\/khulnasoft\/spark\/connector\/types\/PolygonType$.html#cqlTypeName:String", "kind" : "def"}, {"label" : "scalaTypeTag", "tail" : "(): scala.reflect.api.JavaUniverse.TypeTag[Polygon]", "member" : "com.khulnasoft.spark.connector.types.PolygonType.scalaTypeTag", "link" : "com\/khulnasoft\/spark\/connector\/types\/PolygonType$.html#scalaTypeTag:reflect.runtime.universe.TypeTag[com.khulnasoft.dse.driver.api.core.data.geometry.Polygon]", "kind" : "def"}, {"label" : "isCollection", "tail" : "(): Boolean", "member" : "com.khulnasoft.spark.connector.types.PrimitiveColumnType.isCollection", "link" : "com\/khulnasoft\/spark\/connector\/types\/PolygonType$.html#isCollection:Boolean", "kind" : "def"}, {"label" : "isMultiCell", "tail" : "(): Boolean", "member" : "com.khulnasoft.spark.connector.types.ColumnType.isMultiCell", "link" : "com\/khulnasoft\/spark\/connector\/types\/PolygonType$.html#isMultiCell:Boolean", "kind" : "def"}, {"label" : "isFrozen", "tail" : "(): Boolean", "member" : "com.khulnasoft.spark.connector.types.ColumnType.isFrozen", "link" : "com\/khulnasoft\/spark\/connector\/types\/PolygonType$.html#isFrozen:Boolean", "kind" : "def"}, {"label" : "scalaTypeName", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.types.ColumnType.scalaTypeName", "link" : "com\/khulnasoft\/spark\/connector\/types\/PolygonType$.html#scalaTypeName:String", "kind" : "def"}, {"label" : "converterToScala", "tail" : ": TypeConverter[Polygon]", "member" : "com.khulnasoft.spark.connector.types.ColumnType.converterToScala", "link" : "com\/khulnasoft\/spark\/connector\/types\/PolygonType$.html#converterToScala:com.khulnasoft.spark.connector.types.TypeConverter[T]", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/types\/PolygonType$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/types\/PolygonType$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/types\/PolygonType$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/types\/PolygonType$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/types\/PolygonType$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/types\/PolygonType$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/types\/PolygonType$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/PolygonType$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/PolygonType$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/PolygonType$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/types\/PolygonType$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/types\/PolygonType$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/types\/PolygonType$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/khulnasoft\/spark\/connector\/types\/PolygonType$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/types\/PolygonType$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/types\/PolygonType$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/types\/PolygonType$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.khulnasoft.spark.connector.types.PrimitiveColumnType", "members_trait" : [{"label" : "isCollection", "tail" : "(): Boolean", "member" : "com.khulnasoft.spark.connector.types.PrimitiveColumnType.isCollection", "link" : "com\/khulnasoft\/spark\/connector\/types\/PrimitiveColumnType.html#isCollection:Boolean", "kind" : "def"}, {"label" : "isMultiCell", "tail" : "(): Boolean", "member" : "com.khulnasoft.spark.connector.types.ColumnType.isMultiCell", "link" : "com\/khulnasoft\/spark\/connector\/types\/PrimitiveColumnType.html#isMultiCell:Boolean", "kind" : "def"}, {"label" : "isFrozen", "tail" : "(): Boolean", "member" : "com.khulnasoft.spark.connector.types.ColumnType.isFrozen", "link" : "com\/khulnasoft\/spark\/connector\/types\/PrimitiveColumnType.html#isFrozen:Boolean", "kind" : "def"}, {"label" : "scalaTypeName", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.types.ColumnType.scalaTypeName", "link" : "com\/khulnasoft\/spark\/connector\/types\/PrimitiveColumnType.html#scalaTypeName:String", "kind" : "def"}, {"label" : "converterToScala", "tail" : ": TypeConverter[T]", "member" : "com.khulnasoft.spark.connector.types.ColumnType.converterToScala", "link" : "com\/khulnasoft\/spark\/connector\/types\/PrimitiveColumnType.html#converterToScala:com.khulnasoft.spark.connector.types.TypeConverter[T]", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/types\/PrimitiveColumnType.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/types\/PrimitiveColumnType.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/types\/PrimitiveColumnType.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/types\/PrimitiveColumnType.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/types\/PrimitiveColumnType.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/types\/PrimitiveColumnType.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/types\/PrimitiveColumnType.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/PrimitiveColumnType.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/PrimitiveColumnType.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/PrimitiveColumnType.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/types\/PrimitiveColumnType.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/types\/PrimitiveColumnType.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/khulnasoft\/spark\/connector\/types\/PrimitiveColumnType.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/types\/PrimitiveColumnType.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/khulnasoft\/spark\/connector\/types\/PrimitiveColumnType.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/khulnasoft\/spark\/connector\/types\/PrimitiveColumnType.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/types\/PrimitiveColumnType.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/types\/PrimitiveColumnType.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/types\/PrimitiveColumnType.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "cqlTypeName", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.types.ColumnType.cqlTypeName", "link" : "com\/khulnasoft\/spark\/connector\/types\/PrimitiveColumnType.html#cqlTypeName:String", "kind" : "abstract def"}, {"label" : "scalaTypeTag", "tail" : "(): scala.reflect.api.JavaUniverse.TypeTag[T]", "member" : "com.khulnasoft.spark.connector.types.ColumnType.scalaTypeTag", "link" : "com\/khulnasoft\/spark\/connector\/types\/PrimitiveColumnType.html#scalaTypeTag:reflect.runtime.universe.TypeTag[T]", "kind" : "abstract def"}, {"label" : "converterToCassandra", "tail" : "(): TypeConverter[_ <: AnyRef]", "member" : "com.khulnasoft.spark.connector.types.ColumnType.converterToCassandra", "link" : "com\/khulnasoft\/spark\/connector\/types\/PrimitiveColumnType.html#converterToCassandra:com.khulnasoft.spark.connector.types.TypeConverter[_<:AnyRef]", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "com\/khulnasoft\/spark\/connector\/types\/PrimitiveColumnType.html", "kind" : "trait"}, {"name" : "com.khulnasoft.spark.connector.types.SetType", "shortDescription" : "", "members_case class" : [{"label" : "converterToCassandra", "tail" : "(): TypeConverter[_ <: AnyRef]", "member" : "com.khulnasoft.spark.connector.types.SetType.converterToCassandra", "link" : "com\/khulnasoft\/spark\/connector\/types\/SetType.html#converterToCassandra:com.khulnasoft.spark.connector.types.TypeConverter[_<:AnyRef]", "kind" : "def"}, {"label" : "cqlTypeName", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.types.SetType.cqlTypeName", "link" : "com\/khulnasoft\/spark\/connector\/types\/SetType.html#cqlTypeName:String", "kind" : "def"}, {"label" : "scalaTypeTag", "tail" : ": scala.reflect.api.JavaUniverse.TypeTag[Set[T]]", "member" : "com.khulnasoft.spark.connector.types.SetType.scalaTypeTag", "link" : "com\/khulnasoft\/spark\/connector\/types\/SetType.html#scalaTypeTag:reflect.runtime.universe.TypeTag[Set[T]]", "kind" : "lazy val"}, {"member" : "com.khulnasoft.spark.connector.types.SetType#<init>", "error" : "unsupported entity"}, {"label" : "isFrozen", "tail" : ": Boolean", "member" : "com.khulnasoft.spark.connector.types.SetType.isFrozen", "link" : "com\/khulnasoft\/spark\/connector\/types\/SetType.html#isFrozen:Boolean", "kind" : "val"}, {"label" : "elemType", "tail" : ": ColumnType[T]", "member" : "com.khulnasoft.spark.connector.types.SetType.elemType", "link" : "com\/khulnasoft\/spark\/connector\/types\/SetType.html#elemType:com.khulnasoft.spark.connector.types.ColumnType[T]", "kind" : "val"}, {"label" : "nestedElementTypeName", "tail" : "(elemType: ColumnType[_]): String", "member" : "com.khulnasoft.spark.connector.types.CollectionColumnType.nestedElementTypeName", "link" : "com\/khulnasoft\/spark\/connector\/types\/SetType.html#nestedElementTypeName(elemType:com.khulnasoft.spark.connector.types.ColumnType[_]):String", "kind" : "def"}, {"label" : "isCollection", "tail" : "(): Boolean", "member" : "com.khulnasoft.spark.connector.types.CollectionColumnType.isCollection", "link" : "com\/khulnasoft\/spark\/connector\/types\/SetType.html#isCollection:Boolean", "kind" : "def"}, {"label" : "isMultiCell", "tail" : "(): Boolean", "member" : "com.khulnasoft.spark.connector.types.ColumnType.isMultiCell", "link" : "com\/khulnasoft\/spark\/connector\/types\/SetType.html#isMultiCell:Boolean", "kind" : "def"}, {"label" : "scalaTypeName", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.types.ColumnType.scalaTypeName", "link" : "com\/khulnasoft\/spark\/connector\/types\/SetType.html#scalaTypeName:String", "kind" : "def"}, {"label" : "converterToScala", "tail" : ": TypeConverter[Set[T]]", "member" : "com.khulnasoft.spark.connector.types.ColumnType.converterToScala", "link" : "com\/khulnasoft\/spark\/connector\/types\/SetType.html#converterToScala:com.khulnasoft.spark.connector.types.TypeConverter[T]", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/types\/SetType.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/types\/SetType.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/types\/SetType.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/types\/SetType.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/types\/SetType.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/types\/SetType.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/types\/SetType.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/SetType.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/SetType.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/SetType.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/types\/SetType.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/types\/SetType.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/types\/SetType.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/types\/SetType.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/types\/SetType.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/types\/SetType.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/khulnasoft\/spark\/connector\/types\/SetType.html", "kind" : "case class"}, {"name" : "com.khulnasoft.spark.connector.types.SmallIntType", "shortDescription" : "", "object" : "com\/khulnasoft\/spark\/connector\/types\/SmallIntType$.html", "members_object" : [{"label" : "converterToCassandra", "tail" : "(): OptionToNullConverter", "member" : "com.khulnasoft.spark.connector.types.SmallIntType.converterToCassandra", "link" : "com\/khulnasoft\/spark\/connector\/types\/SmallIntType$.html#converterToCassandra:com.khulnasoft.spark.connector.types.TypeConverter.OptionToNullConverter", "kind" : "def"}, {"label" : "cqlTypeName", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.types.SmallIntType.cqlTypeName", "link" : "com\/khulnasoft\/spark\/connector\/types\/SmallIntType$.html#cqlTypeName:String", "kind" : "def"}, {"label" : "scalaTypeTag", "tail" : "(): scala.reflect.api.JavaUniverse.TypeTag[Short]", "member" : "com.khulnasoft.spark.connector.types.SmallIntType.scalaTypeTag", "link" : "com\/khulnasoft\/spark\/connector\/types\/SmallIntType$.html#scalaTypeTag:reflect.runtime.universe.TypeTag[Short]", "kind" : "def"}, {"label" : "isCollection", "tail" : "(): Boolean", "member" : "com.khulnasoft.spark.connector.types.PrimitiveColumnType.isCollection", "link" : "com\/khulnasoft\/spark\/connector\/types\/SmallIntType$.html#isCollection:Boolean", "kind" : "def"}, {"label" : "isMultiCell", "tail" : "(): Boolean", "member" : "com.khulnasoft.spark.connector.types.ColumnType.isMultiCell", "link" : "com\/khulnasoft\/spark\/connector\/types\/SmallIntType$.html#isMultiCell:Boolean", "kind" : "def"}, {"label" : "isFrozen", "tail" : "(): Boolean", "member" : "com.khulnasoft.spark.connector.types.ColumnType.isFrozen", "link" : "com\/khulnasoft\/spark\/connector\/types\/SmallIntType$.html#isFrozen:Boolean", "kind" : "def"}, {"label" : "scalaTypeName", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.types.ColumnType.scalaTypeName", "link" : "com\/khulnasoft\/spark\/connector\/types\/SmallIntType$.html#scalaTypeName:String", "kind" : "def"}, {"label" : "converterToScala", "tail" : ": TypeConverter[Short]", "member" : "com.khulnasoft.spark.connector.types.ColumnType.converterToScala", "link" : "com\/khulnasoft\/spark\/connector\/types\/SmallIntType$.html#converterToScala:com.khulnasoft.spark.connector.types.TypeConverter[T]", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/types\/SmallIntType$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/types\/SmallIntType$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/types\/SmallIntType$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/types\/SmallIntType$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/types\/SmallIntType$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/types\/SmallIntType$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/types\/SmallIntType$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/SmallIntType$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/SmallIntType$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/SmallIntType$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/types\/SmallIntType$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/types\/SmallIntType$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/types\/SmallIntType$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/khulnasoft\/spark\/connector\/types\/SmallIntType$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/types\/SmallIntType$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/types\/SmallIntType$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/types\/SmallIntType$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.khulnasoft.spark.connector.types.TextType", "shortDescription" : "", "object" : "com\/khulnasoft\/spark\/connector\/types\/TextType$.html", "members_object" : [{"label" : "converterToCassandra", "tail" : "(): OptionToNullConverter", "member" : "com.khulnasoft.spark.connector.types.TextType.converterToCassandra", "link" : "com\/khulnasoft\/spark\/connector\/types\/TextType$.html#converterToCassandra:com.khulnasoft.spark.connector.types.TypeConverter.OptionToNullConverter", "kind" : "def"}, {"label" : "cqlTypeName", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.types.TextType.cqlTypeName", "link" : "com\/khulnasoft\/spark\/connector\/types\/TextType$.html#cqlTypeName:String", "kind" : "def"}, {"label" : "scalaTypeTag", "tail" : "(): scala.reflect.api.JavaUniverse.TypeTag[String]", "member" : "com.khulnasoft.spark.connector.types.TextType.scalaTypeTag", "link" : "com\/khulnasoft\/spark\/connector\/types\/TextType$.html#scalaTypeTag:reflect.runtime.universe.TypeTag[String]", "kind" : "def"}, {"label" : "isCollection", "tail" : "(): Boolean", "member" : "com.khulnasoft.spark.connector.types.PrimitiveColumnType.isCollection", "link" : "com\/khulnasoft\/spark\/connector\/types\/TextType$.html#isCollection:Boolean", "kind" : "def"}, {"label" : "isMultiCell", "tail" : "(): Boolean", "member" : "com.khulnasoft.spark.connector.types.ColumnType.isMultiCell", "link" : "com\/khulnasoft\/spark\/connector\/types\/TextType$.html#isMultiCell:Boolean", "kind" : "def"}, {"label" : "isFrozen", "tail" : "(): Boolean", "member" : "com.khulnasoft.spark.connector.types.ColumnType.isFrozen", "link" : "com\/khulnasoft\/spark\/connector\/types\/TextType$.html#isFrozen:Boolean", "kind" : "def"}, {"label" : "scalaTypeName", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.types.ColumnType.scalaTypeName", "link" : "com\/khulnasoft\/spark\/connector\/types\/TextType$.html#scalaTypeName:String", "kind" : "def"}, {"label" : "converterToScala", "tail" : ": TypeConverter[String]", "member" : "com.khulnasoft.spark.connector.types.ColumnType.converterToScala", "link" : "com\/khulnasoft\/spark\/connector\/types\/TextType$.html#converterToScala:com.khulnasoft.spark.connector.types.TypeConverter[T]", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/types\/TextType$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/types\/TextType$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/types\/TextType$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/types\/TextType$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/types\/TextType$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/types\/TextType$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/types\/TextType$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/TextType$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/TextType$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/TextType$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/types\/TextType$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/types\/TextType$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/types\/TextType$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/khulnasoft\/spark\/connector\/types\/TextType$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/types\/TextType$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/types\/TextType$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/types\/TextType$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.khulnasoft.spark.connector.types.TimestampFormatter", "shortDescription" : "Formats timestamps and dates using CQL timestamp format yyyy-MM-dd HH:mm:ssZ", "object" : "com\/khulnasoft\/spark\/connector\/types\/TimestampFormatter$.html", "members_object" : [{"label" : "format", "tail" : "(date: Date): String", "member" : "com.khulnasoft.spark.connector.types.TimestampFormatter.format", "link" : "com\/khulnasoft\/spark\/connector\/types\/TimestampFormatter$.html#format(date:java.util.Date):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/types\/TimestampFormatter$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/types\/TimestampFormatter$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/types\/TimestampFormatter$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/types\/TimestampFormatter$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/types\/TimestampFormatter$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/types\/TimestampFormatter$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/types\/TimestampFormatter$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/TimestampFormatter$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/TimestampFormatter$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/TimestampFormatter$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/types\/TimestampFormatter$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/types\/TimestampFormatter$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/khulnasoft\/spark\/connector\/types\/TimestampFormatter$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/types\/TimestampFormatter$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/khulnasoft\/spark\/connector\/types\/TimestampFormatter$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/khulnasoft\/spark\/connector\/types\/TimestampFormatter$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/types\/TimestampFormatter$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/types\/TimestampFormatter$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/types\/TimestampFormatter$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.khulnasoft.spark.connector.types.TimestampParser", "shortDescription" : "Parses following formats to Date", "object" : "com\/khulnasoft\/spark\/connector\/types\/TimestampParser$.html", "members_object" : [{"label" : "parse", "tail" : "(date: String): Date", "member" : "com.khulnasoft.spark.connector.types.TimestampParser.parse", "link" : "com\/khulnasoft\/spark\/connector\/types\/TimestampParser$.html#parse(date:String):java.util.Date", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/types\/TimestampParser$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/types\/TimestampParser$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/types\/TimestampParser$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/types\/TimestampParser$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/types\/TimestampParser$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/types\/TimestampParser$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/types\/TimestampParser$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/TimestampParser$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/TimestampParser$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/TimestampParser$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/types\/TimestampParser$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/types\/TimestampParser$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/khulnasoft\/spark\/connector\/types\/TimestampParser$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/types\/TimestampParser$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/khulnasoft\/spark\/connector\/types\/TimestampParser$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/khulnasoft\/spark\/connector\/types\/TimestampParser$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/types\/TimestampParser$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/types\/TimestampParser$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/types\/TimestampParser$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.khulnasoft.spark.connector.types.TimestampType", "shortDescription" : "", "object" : "com\/khulnasoft\/spark\/connector\/types\/TimestampType$.html", "members_object" : [{"label" : "converterToCassandra", "tail" : "(): OptionToNullConverter", "member" : "com.khulnasoft.spark.connector.types.TimestampType.converterToCassandra", "link" : "com\/khulnasoft\/spark\/connector\/types\/TimestampType$.html#converterToCassandra:com.khulnasoft.spark.connector.types.TypeConverter.OptionToNullConverter", "kind" : "def"}, {"label" : "cqlTypeName", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.types.TimestampType.cqlTypeName", "link" : "com\/khulnasoft\/spark\/connector\/types\/TimestampType$.html#cqlTypeName:String", "kind" : "def"}, {"label" : "scalaTypeTag", "tail" : "(): scala.reflect.api.JavaUniverse.TypeTag[Instant]", "member" : "com.khulnasoft.spark.connector.types.TimestampType.scalaTypeTag", "link" : "com\/khulnasoft\/spark\/connector\/types\/TimestampType$.html#scalaTypeTag:reflect.runtime.universe.TypeTag[java.time.Instant]", "kind" : "def"}, {"label" : "isCollection", "tail" : "(): Boolean", "member" : "com.khulnasoft.spark.connector.types.PrimitiveColumnType.isCollection", "link" : "com\/khulnasoft\/spark\/connector\/types\/TimestampType$.html#isCollection:Boolean", "kind" : "def"}, {"label" : "isMultiCell", "tail" : "(): Boolean", "member" : "com.khulnasoft.spark.connector.types.ColumnType.isMultiCell", "link" : "com\/khulnasoft\/spark\/connector\/types\/TimestampType$.html#isMultiCell:Boolean", "kind" : "def"}, {"label" : "isFrozen", "tail" : "(): Boolean", "member" : "com.khulnasoft.spark.connector.types.ColumnType.isFrozen", "link" : "com\/khulnasoft\/spark\/connector\/types\/TimestampType$.html#isFrozen:Boolean", "kind" : "def"}, {"label" : "scalaTypeName", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.types.ColumnType.scalaTypeName", "link" : "com\/khulnasoft\/spark\/connector\/types\/TimestampType$.html#scalaTypeName:String", "kind" : "def"}, {"label" : "converterToScala", "tail" : ": TypeConverter[Instant]", "member" : "com.khulnasoft.spark.connector.types.ColumnType.converterToScala", "link" : "com\/khulnasoft\/spark\/connector\/types\/TimestampType$.html#converterToScala:com.khulnasoft.spark.connector.types.TypeConverter[T]", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/types\/TimestampType$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/types\/TimestampType$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/types\/TimestampType$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/types\/TimestampType$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/types\/TimestampType$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/types\/TimestampType$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/types\/TimestampType$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/TimestampType$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/TimestampType$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/TimestampType$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/types\/TimestampType$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/types\/TimestampType$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/types\/TimestampType$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/khulnasoft\/spark\/connector\/types\/TimestampType$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/types\/TimestampType$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/types\/TimestampType$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/types\/TimestampType$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.khulnasoft.spark.connector.types.TimeType", "shortDescription" : "", "object" : "com\/khulnasoft\/spark\/connector\/types\/TimeType$.html", "members_object" : [{"label" : "converterToCassandra", "tail" : "(): OptionToNullConverter", "member" : "com.khulnasoft.spark.connector.types.TimeType.converterToCassandra", "link" : "com\/khulnasoft\/spark\/connector\/types\/TimeType$.html#converterToCassandra:com.khulnasoft.spark.connector.types.TypeConverter.OptionToNullConverter", "kind" : "def"}, {"label" : "cqlTypeName", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.types.TimeType.cqlTypeName", "link" : "com\/khulnasoft\/spark\/connector\/types\/TimeType$.html#cqlTypeName:String", "kind" : "def"}, {"label" : "scalaTypeTag", "tail" : "(): scala.reflect.api.JavaUniverse.TypeTag[LocalTime]", "member" : "com.khulnasoft.spark.connector.types.TimeType.scalaTypeTag", "link" : "com\/khulnasoft\/spark\/connector\/types\/TimeType$.html#scalaTypeTag:reflect.runtime.universe.TypeTag[java.time.LocalTime]", "kind" : "def"}, {"label" : "isCollection", "tail" : "(): Boolean", "member" : "com.khulnasoft.spark.connector.types.PrimitiveColumnType.isCollection", "link" : "com\/khulnasoft\/spark\/connector\/types\/TimeType$.html#isCollection:Boolean", "kind" : "def"}, {"label" : "isMultiCell", "tail" : "(): Boolean", "member" : "com.khulnasoft.spark.connector.types.ColumnType.isMultiCell", "link" : "com\/khulnasoft\/spark\/connector\/types\/TimeType$.html#isMultiCell:Boolean", "kind" : "def"}, {"label" : "isFrozen", "tail" : "(): Boolean", "member" : "com.khulnasoft.spark.connector.types.ColumnType.isFrozen", "link" : "com\/khulnasoft\/spark\/connector\/types\/TimeType$.html#isFrozen:Boolean", "kind" : "def"}, {"label" : "scalaTypeName", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.types.ColumnType.scalaTypeName", "link" : "com\/khulnasoft\/spark\/connector\/types\/TimeType$.html#scalaTypeName:String", "kind" : "def"}, {"label" : "converterToScala", "tail" : ": TypeConverter[LocalTime]", "member" : "com.khulnasoft.spark.connector.types.ColumnType.converterToScala", "link" : "com\/khulnasoft\/spark\/connector\/types\/TimeType$.html#converterToScala:com.khulnasoft.spark.connector.types.TypeConverter[T]", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/types\/TimeType$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/types\/TimeType$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/types\/TimeType$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/types\/TimeType$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/types\/TimeType$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/types\/TimeType$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/types\/TimeType$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/TimeType$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/TimeType$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/TimeType$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/types\/TimeType$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/types\/TimeType$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/types\/TimeType$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/khulnasoft\/spark\/connector\/types\/TimeType$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/types\/TimeType$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/types\/TimeType$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/types\/TimeType$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.khulnasoft.spark.connector.types.TimeUUIDType", "shortDescription" : "", "object" : "com\/khulnasoft\/spark\/connector\/types\/TimeUUIDType$.html", "members_object" : [{"label" : "converterToCassandra", "tail" : "(): OptionToNullConverter", "member" : "com.khulnasoft.spark.connector.types.TimeUUIDType.converterToCassandra", "link" : "com\/khulnasoft\/spark\/connector\/types\/TimeUUIDType$.html#converterToCassandra:com.khulnasoft.spark.connector.types.TypeConverter.OptionToNullConverter", "kind" : "def"}, {"label" : "cqlTypeName", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.types.TimeUUIDType.cqlTypeName", "link" : "com\/khulnasoft\/spark\/connector\/types\/TimeUUIDType$.html#cqlTypeName:String", "kind" : "def"}, {"label" : "scalaTypeTag", "tail" : "(): scala.reflect.api.JavaUniverse.TypeTag[UUID]", "member" : "com.khulnasoft.spark.connector.types.TimeUUIDType.scalaTypeTag", "link" : "com\/khulnasoft\/spark\/connector\/types\/TimeUUIDType$.html#scalaTypeTag:reflect.runtime.universe.TypeTag[java.util.UUID]", "kind" : "def"}, {"label" : "isCollection", "tail" : "(): Boolean", "member" : "com.khulnasoft.spark.connector.types.PrimitiveColumnType.isCollection", "link" : "com\/khulnasoft\/spark\/connector\/types\/TimeUUIDType$.html#isCollection:Boolean", "kind" : "def"}, {"label" : "isMultiCell", "tail" : "(): Boolean", "member" : "com.khulnasoft.spark.connector.types.ColumnType.isMultiCell", "link" : "com\/khulnasoft\/spark\/connector\/types\/TimeUUIDType$.html#isMultiCell:Boolean", "kind" : "def"}, {"label" : "isFrozen", "tail" : "(): Boolean", "member" : "com.khulnasoft.spark.connector.types.ColumnType.isFrozen", "link" : "com\/khulnasoft\/spark\/connector\/types\/TimeUUIDType$.html#isFrozen:Boolean", "kind" : "def"}, {"label" : "scalaTypeName", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.types.ColumnType.scalaTypeName", "link" : "com\/khulnasoft\/spark\/connector\/types\/TimeUUIDType$.html#scalaTypeName:String", "kind" : "def"}, {"label" : "converterToScala", "tail" : ": TypeConverter[UUID]", "member" : "com.khulnasoft.spark.connector.types.ColumnType.converterToScala", "link" : "com\/khulnasoft\/spark\/connector\/types\/TimeUUIDType$.html#converterToScala:com.khulnasoft.spark.connector.types.TypeConverter[T]", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/types\/TimeUUIDType$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/types\/TimeUUIDType$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/types\/TimeUUIDType$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/types\/TimeUUIDType$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/types\/TimeUUIDType$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/types\/TimeUUIDType$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/types\/TimeUUIDType$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/TimeUUIDType$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/TimeUUIDType$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/TimeUUIDType$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/types\/TimeUUIDType$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/types\/TimeUUIDType$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/types\/TimeUUIDType$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/khulnasoft\/spark\/connector\/types\/TimeUUIDType$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/types\/TimeUUIDType$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/types\/TimeUUIDType$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/types\/TimeUUIDType$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.khulnasoft.spark.connector.types.TinyIntType", "shortDescription" : "", "object" : "com\/khulnasoft\/spark\/connector\/types\/TinyIntType$.html", "members_object" : [{"label" : "converterToCassandra", "tail" : "(): OptionToNullConverter", "member" : "com.khulnasoft.spark.connector.types.TinyIntType.converterToCassandra", "link" : "com\/khulnasoft\/spark\/connector\/types\/TinyIntType$.html#converterToCassandra:com.khulnasoft.spark.connector.types.TypeConverter.OptionToNullConverter", "kind" : "def"}, {"label" : "cqlTypeName", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.types.TinyIntType.cqlTypeName", "link" : "com\/khulnasoft\/spark\/connector\/types\/TinyIntType$.html#cqlTypeName:String", "kind" : "def"}, {"label" : "scalaTypeTag", "tail" : "(): scala.reflect.api.JavaUniverse.TypeTag[Byte]", "member" : "com.khulnasoft.spark.connector.types.TinyIntType.scalaTypeTag", "link" : "com\/khulnasoft\/spark\/connector\/types\/TinyIntType$.html#scalaTypeTag:reflect.runtime.universe.TypeTag[Byte]", "kind" : "def"}, {"label" : "isCollection", "tail" : "(): Boolean", "member" : "com.khulnasoft.spark.connector.types.PrimitiveColumnType.isCollection", "link" : "com\/khulnasoft\/spark\/connector\/types\/TinyIntType$.html#isCollection:Boolean", "kind" : "def"}, {"label" : "isMultiCell", "tail" : "(): Boolean", "member" : "com.khulnasoft.spark.connector.types.ColumnType.isMultiCell", "link" : "com\/khulnasoft\/spark\/connector\/types\/TinyIntType$.html#isMultiCell:Boolean", "kind" : "def"}, {"label" : "isFrozen", "tail" : "(): Boolean", "member" : "com.khulnasoft.spark.connector.types.ColumnType.isFrozen", "link" : "com\/khulnasoft\/spark\/connector\/types\/TinyIntType$.html#isFrozen:Boolean", "kind" : "def"}, {"label" : "scalaTypeName", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.types.ColumnType.scalaTypeName", "link" : "com\/khulnasoft\/spark\/connector\/types\/TinyIntType$.html#scalaTypeName:String", "kind" : "def"}, {"label" : "converterToScala", "tail" : ": TypeConverter[Byte]", "member" : "com.khulnasoft.spark.connector.types.ColumnType.converterToScala", "link" : "com\/khulnasoft\/spark\/connector\/types\/TinyIntType$.html#converterToScala:com.khulnasoft.spark.connector.types.TypeConverter[T]", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/types\/TinyIntType$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/types\/TinyIntType$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/types\/TinyIntType$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/types\/TinyIntType$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/types\/TinyIntType$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/types\/TinyIntType$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/types\/TinyIntType$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/TinyIntType$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/TinyIntType$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/TinyIntType$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/types\/TinyIntType$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/types\/TinyIntType$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/types\/TinyIntType$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/khulnasoft\/spark\/connector\/types\/TinyIntType$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/types\/TinyIntType$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/types\/TinyIntType$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/types\/TinyIntType$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.khulnasoft.spark.connector.types.TupleFieldDef", "shortDescription" : "", "members_case class" : [{"label" : "ref", "tail" : ": ColumnName", "member" : "com.khulnasoft.spark.connector.types.TupleFieldDef.ref", "link" : "com\/khulnasoft\/spark\/connector\/types\/TupleFieldDef.html#ref:com.khulnasoft.spark.connector.ColumnName", "kind" : "lazy val"}, {"label" : "columnName", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.types.TupleFieldDef.columnName", "link" : "com\/khulnasoft\/spark\/connector\/types\/TupleFieldDef.html#columnName:String", "kind" : "def"}, {"member" : "com.khulnasoft.spark.connector.types.TupleFieldDef#<init>", "error" : "unsupported entity"}, {"label" : "columnType", "tail" : ": ColumnType[_]", "member" : "com.khulnasoft.spark.connector.types.TupleFieldDef.columnType", "link" : "com\/khulnasoft\/spark\/connector\/types\/TupleFieldDef.html#columnType:com.khulnasoft.spark.connector.types.ColumnType[_]", "kind" : "val"}, {"label" : "index", "tail" : ": Int", "member" : "com.khulnasoft.spark.connector.types.TupleFieldDef.index", "link" : "com\/khulnasoft\/spark\/connector\/types\/TupleFieldDef.html#index:Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/types\/TupleFieldDef.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/types\/TupleFieldDef.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/types\/TupleFieldDef.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/types\/TupleFieldDef.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/types\/TupleFieldDef.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/types\/TupleFieldDef.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/types\/TupleFieldDef.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/TupleFieldDef.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/TupleFieldDef.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/TupleFieldDef.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/types\/TupleFieldDef.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/types\/TupleFieldDef.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/types\/TupleFieldDef.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/types\/TupleFieldDef.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/types\/TupleFieldDef.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/types\/TupleFieldDef.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/khulnasoft\/spark\/connector\/types\/TupleFieldDef.html", "kind" : "case class"}, {"name" : "com.khulnasoft.spark.connector.types.TupleType", "shortDescription" : "A type representing typed tuples.", "object" : "com\/khulnasoft\/spark\/connector\/types\/TupleType$.html", "members_object" : [{"label" : "apply", "tail" : "(javaTupleType: oss.driver.api.core.type.TupleType): TupleType", "member" : "com.khulnasoft.spark.connector.types.TupleType.apply", "link" : "com\/khulnasoft\/spark\/connector\/types\/TupleType$.html#apply(javaTupleType:com.khulnasoft.oss.driver.api.core.type.TupleType):com.khulnasoft.spark.connector.types.TupleType", "kind" : "def"}, {"label" : "driverTupleValueConverter", "tail" : "(dataType: DataType): TypeConverter[_]", "member" : "com.khulnasoft.spark.connector.types.TupleType.driverTupleValueConverter", "link" : "com\/khulnasoft\/spark\/connector\/types\/TupleType$.html#driverTupleValueConverter(dataType:com.khulnasoft.oss.driver.api.core.type.DataType):com.khulnasoft.spark.connector.types.TypeConverter[_]", "kind" : "def"}, {"label" : "DriverTupleValueConverter", "tail" : "", "member" : "com.khulnasoft.spark.connector.types.TupleType.DriverTupleValueConverter", "link" : "com\/khulnasoft\/spark\/connector\/types\/TupleType$.html#DriverTupleValueConverterextendsTypeConverter[com.khulnasoft.oss.driver.api.core.data.TupleValue]", "kind" : "class"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/types\/TupleType$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/types\/TupleType$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/types\/TupleType$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/types\/TupleType$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/types\/TupleType$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/types\/TupleType$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/types\/TupleType$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/TupleType$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/TupleType$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/TupleType$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/types\/TupleType$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/types\/TupleType$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/khulnasoft\/spark\/connector\/types\/TupleType$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/types\/TupleType$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/khulnasoft\/spark\/connector\/types\/TupleType$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/khulnasoft\/spark\/connector\/types\/TupleType$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/types\/TupleType$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/types\/TupleType$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/types\/TupleType$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "name", "tail" : ": String", "member" : "com.khulnasoft.spark.connector.types.TupleType.name", "link" : "com\/khulnasoft\/spark\/connector\/types\/TupleType.html#name:String", "kind" : "val"}, {"label" : "cqlTypeName", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.types.TupleType.cqlTypeName", "link" : "com\/khulnasoft\/spark\/connector\/types\/TupleType.html#cqlTypeName:String", "kind" : "def"}, {"label" : "converterToCassandra", "tail" : "(): TypeConverter[TupleValue]", "member" : "com.khulnasoft.spark.connector.types.TupleType.converterToCassandra", "link" : "com\/khulnasoft\/spark\/connector\/types\/TupleType.html#converterToCassandra:com.khulnasoft.spark.connector.types.TypeConverter[com.khulnasoft.spark.connector.TupleValue]", "kind" : "def"}, {"label" : "converterToCassandra", "tail" : "(componentConverters: IndexedSeq[TypeConverter[_ <: AnyRef]]): TypeConverter[TupleValue]", "member" : "com.khulnasoft.spark.connector.types.TupleType.converterToCassandra", "link" : "com\/khulnasoft\/spark\/connector\/types\/TupleType.html#converterToCassandra(componentConverters:IndexedSeq[com.khulnasoft.spark.connector.types.TypeConverter[_<:AnyRef]]):com.khulnasoft.spark.connector.types.TypeConverter[com.khulnasoft.spark.connector.TupleValue]", "kind" : "def"}, {"label" : "newInstance", "tail" : "(componentValues: Any*): TupleValue", "member" : "com.khulnasoft.spark.connector.types.TupleType.newInstance", "link" : "com\/khulnasoft\/spark\/connector\/types\/TupleType.html#newInstance(componentValues:Any*):com.khulnasoft.spark.connector.TupleValue", "kind" : "def"}, {"label" : "newInstance", "tail" : "(componentConverters: IndexedSeq[TypeConverter[_ <: AnyRef]])(componentValues: Any*): TupleValue", "member" : "com.khulnasoft.spark.connector.types.TupleType.newInstance", "link" : "com\/khulnasoft\/spark\/connector\/types\/TupleType.html#newInstance(componentConverters:IndexedSeq[com.khulnasoft.spark.connector.types.TypeConverter[_<:AnyRef]])(componentValues:Any*):com.khulnasoft.spark.connector.TupleValue", "kind" : "def"}, {"label" : "isCollection", "tail" : "(): Boolean", "member" : "com.khulnasoft.spark.connector.types.TupleType.isCollection", "link" : "com\/khulnasoft\/spark\/connector\/types\/TupleType.html#isCollection:Boolean", "kind" : "def"}, {"label" : "scalaTypeTag", "tail" : "(): scala.reflect.api.JavaUniverse.TypeTag[TupleValue]", "member" : "com.khulnasoft.spark.connector.types.TupleType.scalaTypeTag", "link" : "com\/khulnasoft\/spark\/connector\/types\/TupleType.html#scalaTypeTag:reflect.runtime.universe.TypeTag[com.khulnasoft.spark.connector.TupleValue]", "kind" : "def"}, {"label" : "columns", "tail" : ": IndexedSeq[TupleFieldDef]", "member" : "com.khulnasoft.spark.connector.types.TupleType.columns", "link" : "com\/khulnasoft\/spark\/connector\/types\/TupleType.html#columns:scala.collection.immutable.IndexedSeq[com.khulnasoft.spark.connector.types.TupleFieldDef]", "kind" : "val"}, {"label" : "Column", "tail" : "", "member" : "com.khulnasoft.spark.connector.types.TupleType.Column", "link" : "com\/khulnasoft\/spark\/connector\/types\/TupleType.html#Column=com.khulnasoft.spark.connector.types.TupleFieldDef", "kind" : "type"}, {"label" : "ValueRepr", "tail" : "", "member" : "com.khulnasoft.spark.connector.types.TupleType.ValueRepr", "link" : "com\/khulnasoft\/spark\/connector\/types\/TupleType.html#ValueRepr=com.khulnasoft.spark.connector.TupleValue", "kind" : "type"}, {"member" : "com.khulnasoft.spark.connector.types.TupleType#<init>", "error" : "unsupported entity"}, {"label" : "componentTypes", "tail" : ": TupleFieldDef*", "member" : "com.khulnasoft.spark.connector.types.TupleType.componentTypes", "link" : "com\/khulnasoft\/spark\/connector\/types\/TupleType.html#componentTypes:com.khulnasoft.spark.connector.types.TupleFieldDef*", "kind" : "val"}, {"label" : "isMultiCell", "tail" : "(): Boolean", "member" : "com.khulnasoft.spark.connector.types.ColumnType.isMultiCell", "link" : "com\/khulnasoft\/spark\/connector\/types\/TupleType.html#isMultiCell:Boolean", "kind" : "def"}, {"label" : "isFrozen", "tail" : "(): Boolean", "member" : "com.khulnasoft.spark.connector.types.ColumnType.isFrozen", "link" : "com\/khulnasoft\/spark\/connector\/types\/TupleType.html#isFrozen:Boolean", "kind" : "def"}, {"label" : "scalaTypeName", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.types.ColumnType.scalaTypeName", "link" : "com\/khulnasoft\/spark\/connector\/types\/TupleType.html#scalaTypeName:String", "kind" : "def"}, {"label" : "converterToScala", "tail" : ": TypeConverter[TupleValue]", "member" : "com.khulnasoft.spark.connector.types.ColumnType.converterToScala", "link" : "com\/khulnasoft\/spark\/connector\/types\/TupleType.html#converterToScala:com.khulnasoft.spark.connector.types.TypeConverter[T]", "kind" : "lazy val"}, {"label" : "missingColumns", "tail" : "(columnsToCheck: Seq[ColumnRef]): Seq[ColumnRef]", "member" : "com.khulnasoft.spark.connector.cql.StructDef.missingColumns", "link" : "com\/khulnasoft\/spark\/connector\/types\/TupleType.html#missingColumns(columnsToCheck:Seq[com.khulnasoft.spark.connector.ColumnRef]):Seq[com.khulnasoft.spark.connector.ColumnRef]", "kind" : "def"}, {"label" : "columnByIndex", "tail" : "(index: Int): Column", "member" : "com.khulnasoft.spark.connector.cql.StructDef.columnByIndex", "link" : "com\/khulnasoft\/spark\/connector\/types\/TupleType.html#columnByIndex(index:Int):StructDef.this.Column", "kind" : "def"}, {"label" : "columnByName", "tail" : "(): Map[String, Column]", "member" : "com.khulnasoft.spark.connector.cql.StructDef.columnByName", "link" : "com\/khulnasoft\/spark\/connector\/types\/TupleType.html#columnByName:Map[String,StructDef.this.Column]", "kind" : "def"}, {"label" : "columnTypes", "tail" : ": IndexedSeq[ColumnType[_]]", "member" : "com.khulnasoft.spark.connector.cql.StructDef.columnTypes", "link" : "com\/khulnasoft\/spark\/connector\/types\/TupleType.html#columnTypes:IndexedSeq[com.khulnasoft.spark.connector.types.ColumnType[_]]", "kind" : "lazy val"}, {"label" : "columnNames", "tail" : ": IndexedSeq[String]", "member" : "com.khulnasoft.spark.connector.cql.StructDef.columnNames", "link" : "com\/khulnasoft\/spark\/connector\/types\/TupleType.html#columnNames:IndexedSeq[String]", "kind" : "lazy val"}, {"label" : "columnRefs", "tail" : ": IndexedSeq[ColumnRef]", "member" : "com.khulnasoft.spark.connector.cql.StructDef.columnRefs", "link" : "com\/khulnasoft\/spark\/connector\/types\/TupleType.html#columnRefs:IndexedSeq[com.khulnasoft.spark.connector.ColumnRef]", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/types\/TupleType.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/types\/TupleType.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/types\/TupleType.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/types\/TupleType.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/types\/TupleType.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/types\/TupleType.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/types\/TupleType.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/TupleType.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/TupleType.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/TupleType.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/types\/TupleType.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/types\/TupleType.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/types\/TupleType.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/types\/TupleType.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/types\/TupleType.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/types\/TupleType.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/khulnasoft\/spark\/connector\/types\/TupleType.html", "kind" : "case class"}, {"name" : "com.khulnasoft.spark.connector.types.TypeConversionException", "shortDescription" : "", "members_class" : [{"member" : "com.khulnasoft.spark.connector.types.TypeConversionException#<init>", "error" : "unsupported entity"}, {"label" : "message", "tail" : ": String", "member" : "com.khulnasoft.spark.connector.types.TypeConversionException.message", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConversionException.html#message:String", "kind" : "val"}, {"label" : "getSuppressed", "tail" : "(): Array[Throwable]", "member" : "java.lang.Throwable.getSuppressed", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConversionException.html#getSuppressed():Array[Throwable]", "kind" : "final def"}, {"label" : "addSuppressed", "tail" : "(arg0: Throwable): Unit", "member" : "java.lang.Throwable.addSuppressed", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConversionException.html#addSuppressed(x$1:Throwable):Unit", "kind" : "final def"}, {"label" : "setStackTrace", "tail" : "(arg0: Array[StackTraceElement]): Unit", "member" : "java.lang.Throwable.setStackTrace", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConversionException.html#setStackTrace(x$1:Array[StackTraceElement]):Unit", "kind" : "def"}, {"label" : "getStackTrace", "tail" : "(): Array[StackTraceElement]", "member" : "java.lang.Throwable.getStackTrace", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConversionException.html#getStackTrace():Array[StackTraceElement]", "kind" : "def"}, {"label" : "fillInStackTrace", "tail" : "(): Throwable", "member" : "java.lang.Throwable.fillInStackTrace", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConversionException.html#fillInStackTrace():Throwable", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintWriter): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConversionException.html#printStackTrace(x$1:java.io.PrintWriter):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintStream): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConversionException.html#printStackTrace(x$1:java.io.PrintStream):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConversionException.html#printStackTrace():Unit", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "java.lang.Throwable.toString", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConversionException.html#toString():String", "kind" : "def"}, {"label" : "initCause", "tail" : "(arg0: Throwable): Throwable", "member" : "java.lang.Throwable.initCause", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConversionException.html#initCause(x$1:Throwable):Throwable", "kind" : "def"}, {"label" : "getCause", "tail" : "(): Throwable", "member" : "java.lang.Throwable.getCause", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConversionException.html#getCause():Throwable", "kind" : "def"}, {"label" : "getLocalizedMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getLocalizedMessage", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConversionException.html#getLocalizedMessage():String", "kind" : "def"}, {"label" : "getMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getMessage", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConversionException.html#getMessage():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConversionException.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConversionException.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConversionException.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConversionException.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConversionException.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConversionException.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConversionException.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConversionException.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConversionException.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConversionException.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConversionException.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConversionException.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConversionException.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConversionException.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConversionException.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConversionException.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConversionException.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConversionException.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/khulnasoft\/spark\/connector\/types\/TypeConversionException.html", "kind" : "class"}, {"name" : "com.khulnasoft.spark.connector.types.TypeConverter", "members_trait" : [{"label" : "convert", "tail" : "(obj: Any): T", "member" : "com.khulnasoft.spark.connector.types.TypeConverter.convert", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter.html#convert(obj:Any):T", "kind" : "def"}, {"label" : "targetTypeName", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.types.TypeConverter.targetTypeName", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter.html#targetTypeName:String", "kind" : "def"}, {"label" : "targetType", "tail" : "", "member" : "com.khulnasoft.spark.connector.types.TypeConverter.targetType", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter.html#targetType=T", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "convertPF", "tail" : "(): PartialFunction[Any, T]", "member" : "com.khulnasoft.spark.connector.types.TypeConverter.convertPF", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter.html#convertPF:PartialFunction[Any,T]", "kind" : "abstract def"}, {"label" : "targetTypeTag", "tail" : "(): scala.reflect.api.JavaUniverse.TypeTag[T]", "member" : "com.khulnasoft.spark.connector.types.TypeConverter.targetTypeTag", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter.html#targetTypeTag:reflect.runtime.universe.TypeTag[T]", "kind" : "abstract def"}], "shortDescription" : "Machinery for converting objects of any type received from Cassandra into objects of Scala types.", "object" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter$.html", "members_object" : [{"label" : "unregisterConverter", "tail" : "(c: TypeConverter[_]): Unit", "member" : "com.khulnasoft.spark.connector.types.TypeConverter.unregisterConverter", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter$.html#unregisterConverter(c:com.khulnasoft.spark.connector.types.TypeConverter[_]):Unit", "kind" : "def"}, {"label" : "registerConverter", "tail" : "(c: TypeConverter[_]): Unit", "member" : "com.khulnasoft.spark.connector.types.TypeConverter.registerConverter", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter$.html#registerConverter(c:com.khulnasoft.spark.connector.types.TypeConverter[_]):Unit", "kind" : "def"}, {"label" : "forType", "tail" : "(cl: Class[_]): TypeConverter[_]", "member" : "com.khulnasoft.spark.connector.types.TypeConverter.forType", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter$.html#forType(cl:Class[_]):com.khulnasoft.spark.connector.types.TypeConverter[_]", "kind" : "def"}, {"label" : "forType", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[T]): TypeConverter[T]", "member" : "com.khulnasoft.spark.connector.types.TypeConverter.forType", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter$.html#forType[T](implicitevidence$64:reflect.runtime.universe.TypeTag[T]):com.khulnasoft.spark.connector.types.TypeConverter[T]", "kind" : "def"}, {"label" : "forType", "tail" : "(moreConverters: Seq[TypeConverter[_]])(arg0: scala.reflect.api.JavaUniverse.TypeTag[T]): TypeConverter[T]", "member" : "com.khulnasoft.spark.connector.types.TypeConverter.forType", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter$.html#forType[T](moreConverters:Seq[com.khulnasoft.spark.connector.types.TypeConverter[_]])(implicitevidence$63:reflect.runtime.universe.TypeTag[T]):com.khulnasoft.spark.connector.types.TypeConverter[T]", "kind" : "def"}, {"label" : "forType", "tail" : "(tpe: scala.reflect.api.JavaUniverse.Type, moreConverters: Seq[TypeConverter[_]]): TypeConverter[_]", "member" : "com.khulnasoft.spark.connector.types.TypeConverter.forType", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter$.html#forType(tpe:reflect.runtime.universe.Type,moreConverters:Seq[com.khulnasoft.spark.connector.types.TypeConverter[_]]):com.khulnasoft.spark.connector.types.TypeConverter[_]", "kind" : "def"}, {"label" : "OptionToNullConverter", "tail" : "", "member" : "com.khulnasoft.spark.connector.types.TypeConverter.OptionToNullConverter", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter$.html#OptionToNullConverterextendsNullableTypeConverter[AnyRef]", "kind" : "class"}, {"label" : "javaHashMapConverter", "tail" : "(arg0: TypeConverter[K], arg1: TypeConverter[V]): JavaHashMapConverter[K, V]", "member" : "com.khulnasoft.spark.connector.types.TypeConverter.javaHashMapConverter", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter$.html#javaHashMapConverter[K,V](implicitevidence$61:com.khulnasoft.spark.connector.types.TypeConverter[K],implicitevidence$62:com.khulnasoft.spark.connector.types.TypeConverter[V]):com.khulnasoft.spark.connector.types.TypeConverter.JavaHashMapConverter[K,V]", "kind" : "implicit def"}, {"label" : "javaMapConverter", "tail" : "(arg0: TypeConverter[K], arg1: TypeConverter[V]): JavaMapConverter[K, V]", "member" : "com.khulnasoft.spark.connector.types.TypeConverter.javaMapConverter", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter$.html#javaMapConverter[K,V](implicitevidence$59:com.khulnasoft.spark.connector.types.TypeConverter[K],implicitevidence$60:com.khulnasoft.spark.connector.types.TypeConverter[V]):com.khulnasoft.spark.connector.types.TypeConverter.JavaMapConverter[K,V]", "kind" : "implicit def"}, {"label" : "javaHashSetConverter", "tail" : "(arg0: TypeConverter[T]): JavaHashSetConverter[T]", "member" : "com.khulnasoft.spark.connector.types.TypeConverter.javaHashSetConverter", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter$.html#javaHashSetConverter[T](implicitevidence$58:com.khulnasoft.spark.connector.types.TypeConverter[T]):com.khulnasoft.spark.connector.types.TypeConverter.JavaHashSetConverter[T]", "kind" : "implicit def"}, {"label" : "javaSetConverter", "tail" : "(arg0: TypeConverter[T]): JavaSetConverter[T]", "member" : "com.khulnasoft.spark.connector.types.TypeConverter.javaSetConverter", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter$.html#javaSetConverter[T](implicitevidence$57:com.khulnasoft.spark.connector.types.TypeConverter[T]):com.khulnasoft.spark.connector.types.TypeConverter.JavaSetConverter[T]", "kind" : "implicit def"}, {"label" : "cqlVectorConverter", "tail" : "(dimension: Int)(arg0: TypeConverter[T]): CqlVectorConverter[T]", "member" : "com.khulnasoft.spark.connector.types.TypeConverter.cqlVectorConverter", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter$.html#cqlVectorConverter[T<:Number](dimension:Int)(implicitevidence$56:com.khulnasoft.spark.connector.types.TypeConverter[T]):com.khulnasoft.spark.connector.types.TypeConverter.CqlVectorConverter[T]", "kind" : "implicit def"}, {"label" : "javaArrayListConverter", "tail" : "(arg0: TypeConverter[T]): JavaArrayListConverter[T]", "member" : "com.khulnasoft.spark.connector.types.TypeConverter.javaArrayListConverter", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter$.html#javaArrayListConverter[T](implicitevidence$55:com.khulnasoft.spark.connector.types.TypeConverter[T]):com.khulnasoft.spark.connector.types.TypeConverter.JavaArrayListConverter[T]", "kind" : "implicit def"}, {"label" : "javaListConverter", "tail" : "(arg0: TypeConverter[T]): JavaListConverter[T]", "member" : "com.khulnasoft.spark.connector.types.TypeConverter.javaListConverter", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter$.html#javaListConverter[T](implicitevidence$54:com.khulnasoft.spark.connector.types.TypeConverter[T]):com.khulnasoft.spark.connector.types.TypeConverter.JavaListConverter[T]", "kind" : "implicit def"}, {"label" : "treeMapConverter", "tail" : "(arg0: TypeConverter[K], arg1: Ordering[K], arg2: TypeConverter[V]): TreeMapConverter[K, V]", "member" : "com.khulnasoft.spark.connector.types.TypeConverter.treeMapConverter", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter$.html#treeMapConverter[K,V](implicitevidence$51:com.khulnasoft.spark.connector.types.TypeConverter[K],implicitevidence$52:Ordering[K],implicitevidence$53:com.khulnasoft.spark.connector.types.TypeConverter[V]):com.khulnasoft.spark.connector.types.TypeConverter.TreeMapConverter[K,V]", "kind" : "implicit def"}, {"label" : "mapConverter", "tail" : "(arg0: TypeConverter[K], arg1: TypeConverter[V]): MapConverter[K, V]", "member" : "com.khulnasoft.spark.connector.types.TypeConverter.mapConverter", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter$.html#mapConverter[K,V](implicitevidence$49:com.khulnasoft.spark.connector.types.TypeConverter[K],implicitevidence$50:com.khulnasoft.spark.connector.types.TypeConverter[V]):com.khulnasoft.spark.connector.types.TypeConverter.MapConverter[K,V]", "kind" : "implicit def"}, {"label" : "iterableConverter", "tail" : "(arg0: TypeConverter[T]): IterableConverter[T]", "member" : "com.khulnasoft.spark.connector.types.TypeConverter.iterableConverter", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter$.html#iterableConverter[T](implicitevidence$48:com.khulnasoft.spark.connector.types.TypeConverter[T]):com.khulnasoft.spark.connector.types.TypeConverter.IterableConverter[T]", "kind" : "implicit def"}, {"label" : "indexedSeqConverter", "tail" : "(arg0: TypeConverter[T]): IndexedSeqConverter[T]", "member" : "com.khulnasoft.spark.connector.types.TypeConverter.indexedSeqConverter", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter$.html#indexedSeqConverter[T](implicitevidence$47:com.khulnasoft.spark.connector.types.TypeConverter[T]):com.khulnasoft.spark.connector.types.TypeConverter.IndexedSeqConverter[T]", "kind" : "implicit def"}, {"label" : "seqConverter", "tail" : "(arg0: TypeConverter[T]): SeqConverter[T]", "member" : "com.khulnasoft.spark.connector.types.TypeConverter.seqConverter", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter$.html#seqConverter[T](implicitevidence$46:com.khulnasoft.spark.connector.types.TypeConverter[T]):com.khulnasoft.spark.connector.types.TypeConverter.SeqConverter[T]", "kind" : "implicit def"}, {"label" : "treeSetConverter", "tail" : "(arg0: TypeConverter[T], arg1: Ordering[T]): TreeSetConverter[T]", "member" : "com.khulnasoft.spark.connector.types.TypeConverter.treeSetConverter", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter$.html#treeSetConverter[T](implicitevidence$44:com.khulnasoft.spark.connector.types.TypeConverter[T],implicitevidence$45:Ordering[T]):com.khulnasoft.spark.connector.types.TypeConverter.TreeSetConverter[T]", "kind" : "implicit def"}, {"label" : "setConverter", "tail" : "(arg0: TypeConverter[T]): SetConverter[T]", "member" : "com.khulnasoft.spark.connector.types.TypeConverter.setConverter", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter$.html#setConverter[T](implicitevidence$43:com.khulnasoft.spark.connector.types.TypeConverter[T]):com.khulnasoft.spark.connector.types.TypeConverter.SetConverter[T]", "kind" : "implicit def"}, {"label" : "vectorConverter", "tail" : "(arg0: TypeConverter[T]): VectorConverter[T]", "member" : "com.khulnasoft.spark.connector.types.TypeConverter.vectorConverter", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter$.html#vectorConverter[T](implicitevidence$42:com.khulnasoft.spark.connector.types.TypeConverter[T]):com.khulnasoft.spark.connector.types.TypeConverter.VectorConverter[T]", "kind" : "implicit def"}, {"label" : "listConverter", "tail" : "(arg0: TypeConverter[T]): ListConverter[T]", "member" : "com.khulnasoft.spark.connector.types.TypeConverter.listConverter", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter$.html#listConverter[T](implicitevidence$41:com.khulnasoft.spark.connector.types.TypeConverter[T]):com.khulnasoft.spark.connector.types.TypeConverter.ListConverter[T]", "kind" : "implicit def"}, {"label" : "tripleConverter", "tail" : "(arg0: TypeConverter[A1], arg1: TypeConverter[A2], arg2: TypeConverter[A3]): TripleConverter[A1, A2, A3]", "member" : "com.khulnasoft.spark.connector.types.TypeConverter.tripleConverter", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter$.html#tripleConverter[A1,A2,A3](implicitevidence$38:com.khulnasoft.spark.connector.types.TypeConverter[A1],implicitevidence$39:com.khulnasoft.spark.connector.types.TypeConverter[A2],implicitevidence$40:com.khulnasoft.spark.connector.types.TypeConverter[A3]):com.khulnasoft.spark.connector.types.TypeConverter.TripleConverter[A1,A2,A3]", "kind" : "implicit def"}, {"label" : "pairConverter", "tail" : "(arg0: TypeConverter[K], arg1: TypeConverter[V]): PairConverter[K, V]", "member" : "com.khulnasoft.spark.connector.types.TypeConverter.pairConverter", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter$.html#pairConverter[K,V](implicitevidence$36:com.khulnasoft.spark.connector.types.TypeConverter[K],implicitevidence$37:com.khulnasoft.spark.connector.types.TypeConverter[V]):com.khulnasoft.spark.connector.types.TypeConverter.PairConverter[K,V]", "kind" : "implicit def"}, {"label" : "tuple3Converter", "tail" : "(arg0: TypeConverter[A1], arg1: TypeConverter[A2], arg2: TypeConverter[A3]): Tuple3Converter[A1, A2, A3]", "member" : "com.khulnasoft.spark.connector.types.TypeConverter.tuple3Converter", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter$.html#tuple3Converter[A1,A2,A3](implicitevidence$33:com.khulnasoft.spark.connector.types.TypeConverter[A1],implicitevidence$34:com.khulnasoft.spark.connector.types.TypeConverter[A2],implicitevidence$35:com.khulnasoft.spark.connector.types.TypeConverter[A3]):com.khulnasoft.spark.connector.types.TypeConverter.Tuple3Converter[A1,A2,A3]", "kind" : "implicit def"}, {"label" : "tuple2Converter", "tail" : "(arg0: TypeConverter[K], arg1: TypeConverter[V]): Tuple2Converter[K, V]", "member" : "com.khulnasoft.spark.connector.types.TypeConverter.tuple2Converter", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter$.html#tuple2Converter[K,V](implicitevidence$31:com.khulnasoft.spark.connector.types.TypeConverter[K],implicitevidence$32:com.khulnasoft.spark.connector.types.TypeConverter[V]):com.khulnasoft.spark.connector.types.TypeConverter.Tuple2Converter[K,V]", "kind" : "implicit def"}, {"label" : "optionConverter", "tail" : "(arg0: TypeConverter[T]): OptionConverter[T]", "member" : "com.khulnasoft.spark.connector.types.TypeConverter.optionConverter", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter$.html#optionConverter[T](implicitevidence$30:com.khulnasoft.spark.connector.types.TypeConverter[T]):com.khulnasoft.spark.connector.types.TypeConverter.OptionConverter[T]", "kind" : "implicit def"}, {"label" : "cassandraOptionConverter", "tail" : "(arg0: TypeConverter[T]): CassandraOptionConverter[T]", "member" : "com.khulnasoft.spark.connector.types.TypeConverter.cassandraOptionConverter", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter$.html#cassandraOptionConverter[T](implicitevidence$29:com.khulnasoft.spark.connector.types.TypeConverter[T]):com.khulnasoft.spark.connector.types.TypeConverter.CassandraOptionConverter[T]", "kind" : "implicit def"}, {"label" : "JavaHashMapConverter", "tail" : "", "member" : "com.khulnasoft.spark.connector.types.TypeConverter.JavaHashMapConverter", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter$.html#JavaHashMapConverter[K,V]extendsTypeConverter.AbstractMapConverter[java.util.HashMap[K,V],K,V]", "kind" : "class"}, {"label" : "JavaMapConverter", "tail" : "", "member" : "com.khulnasoft.spark.connector.types.TypeConverter.JavaMapConverter", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter$.html#JavaMapConverter[K,V]extendsTypeConverter.AbstractMapConverter[java.util.Map[K,V],K,V]", "kind" : "class"}, {"label" : "TreeMapConverter", "tail" : "", "member" : "com.khulnasoft.spark.connector.types.TypeConverter.TreeMapConverter", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter$.html#TreeMapConverter[K,V]extendsTypeConverter.AbstractMapConverter[scala.collection.immutable.TreeMap[K,V],K,V]", "kind" : "class"}, {"label" : "MapConverter", "tail" : "", "member" : "com.khulnasoft.spark.connector.types.TypeConverter.MapConverter", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter$.html#MapConverter[K,V]extendsTypeConverter.AbstractMapConverter[Map[K,V],K,V]", "kind" : "class"}, {"label" : "JavaHashSetConverter", "tail" : "", "member" : "com.khulnasoft.spark.connector.types.TypeConverter.JavaHashSetConverter", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter$.html#JavaHashSetConverter[T]extendsTypeConverter.CollectionConverter[java.util.HashSet[T],T]", "kind" : "class"}, {"label" : "JavaSetConverter", "tail" : "", "member" : "com.khulnasoft.spark.connector.types.TypeConverter.JavaSetConverter", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter$.html#JavaSetConverter[T]extendsTypeConverter.CollectionConverter[java.util.Set[T],T]", "kind" : "class"}, {"label" : "JavaArrayListConverter", "tail" : "", "member" : "com.khulnasoft.spark.connector.types.TypeConverter.JavaArrayListConverter", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter$.html#JavaArrayListConverter[T]extendsTypeConverter.CollectionConverter[java.util.ArrayList[T],T]", "kind" : "class"}, {"label" : "CqlVectorConverter", "tail" : "", "member" : "com.khulnasoft.spark.connector.types.TypeConverter.CqlVectorConverter", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter$.html#CqlVectorConverter[T<:Number]extendsTypeConverter[com.khulnasoft.oss.driver.api.core.data.CqlVector[T]]", "kind" : "class"}, {"label" : "JavaListConverter", "tail" : "", "member" : "com.khulnasoft.spark.connector.types.TypeConverter.JavaListConverter", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter$.html#JavaListConverter[T]extendsTypeConverter.CollectionConverter[java.util.List[T],T]", "kind" : "class"}, {"label" : "IterableConverter", "tail" : "", "member" : "com.khulnasoft.spark.connector.types.TypeConverter.IterableConverter", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter$.html#IterableConverter[T]extendsTypeConverter.CollectionConverter[Iterable[T],T]", "kind" : "class"}, {"label" : "IndexedSeqConverter", "tail" : "", "member" : "com.khulnasoft.spark.connector.types.TypeConverter.IndexedSeqConverter", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter$.html#IndexedSeqConverter[T]extendsTypeConverter.CollectionConverter[IndexedSeq[T],T]", "kind" : "class"}, {"label" : "SeqConverter", "tail" : "", "member" : "com.khulnasoft.spark.connector.types.TypeConverter.SeqConverter", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter$.html#SeqConverter[T]extendsTypeConverter.CollectionConverter[Seq[T],T]", "kind" : "class"}, {"label" : "TreeSetConverter", "tail" : "", "member" : "com.khulnasoft.spark.connector.types.TypeConverter.TreeSetConverter", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter$.html#TreeSetConverter[T]extendsTypeConverter.CollectionConverter[scala.collection.immutable.TreeSet[T],T]", "kind" : "class"}, {"label" : "SetConverter", "tail" : "", "member" : "com.khulnasoft.spark.connector.types.TypeConverter.SetConverter", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter$.html#SetConverter[T]extendsTypeConverter.CollectionConverter[Set[T],T]", "kind" : "class"}, {"label" : "VectorConverter", "tail" : "", "member" : "com.khulnasoft.spark.connector.types.TypeConverter.VectorConverter", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter$.html#VectorConverter[T]extendsTypeConverter.CollectionConverter[Vector[T],T]", "kind" : "class"}, {"label" : "ListConverter", "tail" : "", "member" : "com.khulnasoft.spark.connector.types.TypeConverter.ListConverter", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter$.html#ListConverter[T]extendsTypeConverter.CollectionConverter[List[T],T]", "kind" : "class"}, {"label" : "AbstractMapConverter", "tail" : "", "member" : "com.khulnasoft.spark.connector.types.TypeConverter.AbstractMapConverter", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter$.html#AbstractMapConverter[CC,K,V]extendsTypeConverter.CollectionConverter[CC,(K,V)]", "kind" : "abstract class"}, {"label" : "CollectionConverter", "tail" : "", "member" : "com.khulnasoft.spark.connector.types.TypeConverter.CollectionConverter", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter$.html#CollectionConverter[CC,T]extendsTypeConverter[CC]", "kind" : "abstract class"}, {"label" : "CassandraOptionConverter", "tail" : "", "member" : "com.khulnasoft.spark.connector.types.TypeConverter.CassandraOptionConverter", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter$.html#CassandraOptionConverter[T]extendsTypeConverter[com.khulnasoft.spark.connector.types.CassandraOption[T]]", "kind" : "class"}, {"label" : "OptionConverter", "tail" : "", "member" : "com.khulnasoft.spark.connector.types.TypeConverter.OptionConverter", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter$.html#OptionConverter[T]extendsTypeConverter[Option[T]]", "kind" : "class"}, {"label" : "TripleConverter", "tail" : "", "member" : "com.khulnasoft.spark.connector.types.TypeConverter.TripleConverter", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter$.html#TripleConverter[C1,C2,C3]extendsTypeConverter[org.apache.commons.lang3.tuple.Triple[C1,C2,C3]]", "kind" : "class"}, {"label" : "PairConverter", "tail" : "", "member" : "com.khulnasoft.spark.connector.types.TypeConverter.PairConverter", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter$.html#PairConverter[K,V]extendsTypeConverter[org.apache.commons.lang3.tuple.Pair[K,V]]", "kind" : "class"}, {"label" : "Tuple3Converter", "tail" : "", "member" : "com.khulnasoft.spark.connector.types.TypeConverter.Tuple3Converter", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter$.html#Tuple3Converter[C1,C2,C3]extendsTypeConverter[(C1,C2,C3)]", "kind" : "class"}, {"label" : "Tuple2Converter", "tail" : "", "member" : "com.khulnasoft.spark.connector.types.TypeConverter.Tuple2Converter", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter$.html#Tuple2Converter[K,V]extendsTypeConverter[(K,V)]", "kind" : "class"}, {"label" : "DateRangeConverter", "tail" : "", "member" : "com.khulnasoft.spark.connector.types.TypeConverter.DateRangeConverter", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter$.html#DateRangeConverter", "kind" : "implicit object"}, {"label" : "LineStringConverter", "tail" : "", "member" : "com.khulnasoft.spark.connector.types.TypeConverter.LineStringConverter", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter$.html#LineStringConverter", "kind" : "implicit object"}, {"label" : "PolygonConverter", "tail" : "", "member" : "com.khulnasoft.spark.connector.types.TypeConverter.PolygonConverter", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter$.html#PolygonConverter", "kind" : "implicit object"}, {"label" : "PointConverter", "tail" : "", "member" : "com.khulnasoft.spark.connector.types.TypeConverter.PointConverter", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter$.html#PointConverter", "kind" : "implicit object"}, {"label" : "JavaInstantConverter", "tail" : "", "member" : "com.khulnasoft.spark.connector.types.TypeConverter.JavaInstantConverter", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter$.html#JavaInstantConverter", "kind" : "implicit object"}, {"label" : "DurationConverter", "tail" : "", "member" : "com.khulnasoft.spark.connector.types.TypeConverter.DurationConverter", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter$.html#DurationConverter", "kind" : "implicit object"}, {"label" : "JavaDurationConverter", "tail" : "", "member" : "com.khulnasoft.spark.connector.types.TypeConverter.JavaDurationConverter", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter$.html#JavaDurationConverter", "kind" : "implicit object"}, {"label" : "JavaLocalTimeConverter", "tail" : "", "member" : "com.khulnasoft.spark.connector.types.TypeConverter.JavaLocalTimeConverter", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter$.html#JavaLocalTimeConverter", "kind" : "implicit object"}, {"label" : "JavaLocalDateConverter", "tail" : "", "member" : "com.khulnasoft.spark.connector.types.TypeConverter.JavaLocalDateConverter", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter$.html#JavaLocalDateConverter", "kind" : "implicit object"}, {"label" : "InetAddressConverter", "tail" : "", "member" : "com.khulnasoft.spark.connector.types.TypeConverter.InetAddressConverter", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter$.html#InetAddressConverter", "kind" : "implicit object"}, {"label" : "UUIDConverter", "tail" : "", "member" : "com.khulnasoft.spark.connector.types.TypeConverter.UUIDConverter", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter$.html#UUIDConverter", "kind" : "implicit object"}, {"label" : "JavaBigDecimalConverter", "tail" : "", "member" : "com.khulnasoft.spark.connector.types.TypeConverter.JavaBigDecimalConverter", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter$.html#JavaBigDecimalConverter", "kind" : "implicit object"}, {"label" : "BigDecimalConverter", "tail" : "", "member" : "com.khulnasoft.spark.connector.types.TypeConverter.BigDecimalConverter", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter$.html#BigDecimalConverter", "kind" : "implicit object"}, {"label" : "JavaBigIntegerConverter", "tail" : "", "member" : "com.khulnasoft.spark.connector.types.TypeConverter.JavaBigIntegerConverter", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter$.html#JavaBigIntegerConverter", "kind" : "implicit object"}, {"label" : "BigIntConverter", "tail" : "", "member" : "com.khulnasoft.spark.connector.types.TypeConverter.BigIntConverter", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter$.html#BigIntConverter", "kind" : "implicit object"}, {"label" : "TimestampConverter", "tail" : "", "member" : "com.khulnasoft.spark.connector.types.TypeConverter.TimestampConverter", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter$.html#TimestampConverter", "kind" : "implicit object"}, {"label" : "GregorianCalendarConverter", "tail" : "", "member" : "com.khulnasoft.spark.connector.types.TypeConverter.GregorianCalendarConverter", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter$.html#GregorianCalendarConverter", "kind" : "implicit object"}, {"label" : "SqlDateConverter", "tail" : "", "member" : "com.khulnasoft.spark.connector.types.TypeConverter.SqlDateConverter", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter$.html#SqlDateConverter", "kind" : "implicit object"}, {"label" : "DateConverter", "tail" : "", "member" : "com.khulnasoft.spark.connector.types.TypeConverter.DateConverter", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter$.html#DateConverter", "kind" : "implicit object"}, {"label" : "ByteArrayConverter", "tail" : "", "member" : "com.khulnasoft.spark.connector.types.TypeConverter.ByteArrayConverter", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter$.html#ByteArrayConverter", "kind" : "implicit object"}, {"label" : "ByteBufferConverter", "tail" : "", "member" : "com.khulnasoft.spark.connector.types.TypeConverter.ByteBufferConverter", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter$.html#ByteBufferConverter", "kind" : "implicit object"}, {"label" : "StringConverter", "tail" : "", "member" : "com.khulnasoft.spark.connector.types.TypeConverter.StringConverter", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter$.html#StringConverter", "kind" : "implicit object"}, {"label" : "JavaDoubleConverter", "tail" : "", "member" : "com.khulnasoft.spark.connector.types.TypeConverter.JavaDoubleConverter", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter$.html#JavaDoubleConverter", "kind" : "implicit object"}, {"label" : "DoubleConverter", "tail" : "", "member" : "com.khulnasoft.spark.connector.types.TypeConverter.DoubleConverter", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter$.html#DoubleConverter", "kind" : "implicit object"}, {"label" : "JavaFloatConverter", "tail" : "", "member" : "com.khulnasoft.spark.connector.types.TypeConverter.JavaFloatConverter", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter$.html#JavaFloatConverter", "kind" : "implicit object"}, {"label" : "FloatConverter", "tail" : "", "member" : "com.khulnasoft.spark.connector.types.TypeConverter.FloatConverter", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter$.html#FloatConverter", "kind" : "implicit object"}, {"label" : "JavaLongConverter", "tail" : "", "member" : "com.khulnasoft.spark.connector.types.TypeConverter.JavaLongConverter", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter$.html#JavaLongConverter", "kind" : "implicit object"}, {"label" : "LongConverter", "tail" : "", "member" : "com.khulnasoft.spark.connector.types.TypeConverter.LongConverter", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter$.html#LongConverter", "kind" : "implicit object"}, {"label" : "JavaIntConverter", "tail" : "", "member" : "com.khulnasoft.spark.connector.types.TypeConverter.JavaIntConverter", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter$.html#JavaIntConverter", "kind" : "implicit object"}, {"label" : "IntConverter", "tail" : "", "member" : "com.khulnasoft.spark.connector.types.TypeConverter.IntConverter", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter$.html#IntConverter", "kind" : "implicit object"}, {"label" : "JavaShortConverter", "tail" : "", "member" : "com.khulnasoft.spark.connector.types.TypeConverter.JavaShortConverter", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter$.html#JavaShortConverter", "kind" : "implicit object"}, {"label" : "ShortConverter", "tail" : "", "member" : "com.khulnasoft.spark.connector.types.TypeConverter.ShortConverter", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter$.html#ShortConverter", "kind" : "implicit object"}, {"label" : "JavaByteConverter", "tail" : "", "member" : "com.khulnasoft.spark.connector.types.TypeConverter.JavaByteConverter", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter$.html#JavaByteConverter", "kind" : "implicit object"}, {"label" : "ByteConverter", "tail" : "", "member" : "com.khulnasoft.spark.connector.types.TypeConverter.ByteConverter", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter$.html#ByteConverter", "kind" : "implicit object"}, {"label" : "JavaBooleanConverter", "tail" : "", "member" : "com.khulnasoft.spark.connector.types.TypeConverter.JavaBooleanConverter", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter$.html#JavaBooleanConverter", "kind" : "implicit object"}, {"label" : "BooleanConverter", "tail" : "", "member" : "com.khulnasoft.spark.connector.types.TypeConverter.BooleanConverter", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter$.html#BooleanConverter", "kind" : "implicit object"}, {"label" : "AnyRefConverter", "tail" : "", "member" : "com.khulnasoft.spark.connector.types.TypeConverter.AnyRefConverter", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter$.html#AnyRefConverter", "kind" : "implicit object"}, {"label" : "AnyConverter", "tail" : "", "member" : "com.khulnasoft.spark.connector.types.TypeConverter.AnyConverter", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter$.html#AnyConverter", "kind" : "implicit object"}, {"label" : "defaultTimezone", "tail" : ": TimeZone", "member" : "com.khulnasoft.spark.connector.types.TypeConverter.defaultTimezone", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter$.html#defaultTimezone:java.util.TimeZone", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "com\/khulnasoft\/spark\/connector\/types\/TypeConverter.html", "kind" : "trait"}, {"name" : "com.khulnasoft.spark.connector.types.UDTFieldDef", "shortDescription" : "A Cassandra user defined type field metadata.", "members_case class" : [{"label" : "ref", "tail" : ": ColumnName", "member" : "com.khulnasoft.spark.connector.types.UDTFieldDef.ref", "link" : "com\/khulnasoft\/spark\/connector\/types\/UDTFieldDef.html#ref:com.khulnasoft.spark.connector.ColumnName", "kind" : "lazy val"}, {"member" : "com.khulnasoft.spark.connector.types.UDTFieldDef#<init>", "error" : "unsupported entity"}, {"label" : "columnType", "tail" : ": ColumnType[_]", "member" : "com.khulnasoft.spark.connector.types.UDTFieldDef.columnType", "link" : "com\/khulnasoft\/spark\/connector\/types\/UDTFieldDef.html#columnType:com.khulnasoft.spark.connector.types.ColumnType[_]", "kind" : "val"}, {"label" : "columnName", "tail" : ": String", "member" : "com.khulnasoft.spark.connector.types.UDTFieldDef.columnName", "link" : "com\/khulnasoft\/spark\/connector\/types\/UDTFieldDef.html#columnName:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/types\/UDTFieldDef.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/types\/UDTFieldDef.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/types\/UDTFieldDef.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/types\/UDTFieldDef.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/types\/UDTFieldDef.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/types\/UDTFieldDef.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/types\/UDTFieldDef.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/UDTFieldDef.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/UDTFieldDef.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/UDTFieldDef.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/types\/UDTFieldDef.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/types\/UDTFieldDef.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/types\/UDTFieldDef.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/types\/UDTFieldDef.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/types\/UDTFieldDef.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/types\/UDTFieldDef.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/khulnasoft\/spark\/connector\/types\/UDTFieldDef.html", "kind" : "case class"}, {"name" : "com.khulnasoft.spark.connector.types.Unset", "shortDescription" : "An object representing a column which will be skipped on insert.", "object" : "com\/khulnasoft\/spark\/connector\/types\/Unset$.html", "members_object" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/types\/Unset$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/types\/Unset$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/types\/Unset$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/types\/Unset$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/types\/Unset$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/types\/Unset$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/types\/Unset$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/Unset$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/Unset$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/Unset$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/types\/Unset$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/types\/Unset$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/khulnasoft\/spark\/connector\/types\/Unset$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/types\/Unset$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/khulnasoft\/spark\/connector\/types\/Unset$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/khulnasoft\/spark\/connector\/types\/Unset$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/types\/Unset$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/types\/Unset$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/types\/Unset$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.khulnasoft.spark.connector.types.UserDefinedType", "shortDescription" : "A Cassandra user defined type metadata.", "object" : "com\/khulnasoft\/spark\/connector\/types\/UserDefinedType$.html", "members_object" : [{"label" : "apply", "tail" : "(javaUserType: oss.driver.api.core.type.UserDefinedType): UserDefinedType", "member" : "com.khulnasoft.spark.connector.types.UserDefinedType.apply", "link" : "com\/khulnasoft\/spark\/connector\/types\/UserDefinedType$.html#apply(javaUserType:com.khulnasoft.oss.driver.api.core.type.UserDefinedType):com.khulnasoft.spark.connector.types.UserDefinedType", "kind" : "def"}, {"label" : "DriverUDTValueConverter", "tail" : "", "member" : "com.khulnasoft.spark.connector.types.UserDefinedType.DriverUDTValueConverter", "link" : "com\/khulnasoft\/spark\/connector\/types\/UserDefinedType$.html#DriverUDTValueConverterextendsTypeConverter[com.khulnasoft.oss.driver.api.core.data.UdtValue]", "kind" : "class"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/types\/UserDefinedType$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/types\/UserDefinedType$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/types\/UserDefinedType$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/types\/UserDefinedType$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/types\/UserDefinedType$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/types\/UserDefinedType$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/types\/UserDefinedType$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/UserDefinedType$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/UserDefinedType$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/UserDefinedType$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/types\/UserDefinedType$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/types\/UserDefinedType$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/khulnasoft\/spark\/connector\/types\/UserDefinedType$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/types\/UserDefinedType$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/khulnasoft\/spark\/connector\/types\/UserDefinedType$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/khulnasoft\/spark\/connector\/types\/UserDefinedType$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/types\/UserDefinedType$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/types\/UserDefinedType$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/types\/UserDefinedType$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "newInstance", "tail" : "(columnValues: Any*): UDTValue", "member" : "com.khulnasoft.spark.connector.types.UserDefinedType.newInstance", "link" : "com\/khulnasoft\/spark\/connector\/types\/UserDefinedType.html#newInstance(columnValues:Any*):com.khulnasoft.spark.connector.UDTValue", "kind" : "def"}, {"label" : "ValueRepr", "tail" : "", "member" : "com.khulnasoft.spark.connector.types.UserDefinedType.ValueRepr", "link" : "com\/khulnasoft\/spark\/connector\/types\/UserDefinedType.html#ValueRepr=com.khulnasoft.spark.connector.UDTValue", "kind" : "type"}, {"label" : "converterToCassandra", "tail" : "(): NullableTypeConverter[UDTValue]", "member" : "com.khulnasoft.spark.connector.types.UserDefinedType.converterToCassandra", "link" : "com\/khulnasoft\/spark\/connector\/types\/UserDefinedType.html#converterToCassandra:com.khulnasoft.spark.connector.types.NullableTypeConverter[com.khulnasoft.spark.connector.UDTValue]", "kind" : "def"}, {"label" : "fieldConvereters", "tail" : ": IndexedSeq[TypeConverter[_ <: AnyRef]]", "member" : "com.khulnasoft.spark.connector.types.UserDefinedType.fieldConvereters", "link" : "com\/khulnasoft\/spark\/connector\/types\/UserDefinedType.html#fieldConvereters:IndexedSeq[com.khulnasoft.spark.connector.types.TypeConverter[_<:AnyRef]]", "kind" : "val"}, {"label" : "cqlTypeName", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.types.UserDefinedType.cqlTypeName", "link" : "com\/khulnasoft\/spark\/connector\/types\/UserDefinedType.html#cqlTypeName:String", "kind" : "def"}, {"label" : "scalaTypeTag", "tail" : "(): scala.reflect.api.JavaUniverse.TypeTag[UDTValue]", "member" : "com.khulnasoft.spark.connector.types.UserDefinedType.scalaTypeTag", "link" : "com\/khulnasoft\/spark\/connector\/types\/UserDefinedType.html#scalaTypeTag:reflect.runtime.universe.TypeTag[com.khulnasoft.spark.connector.UDTValue]", "kind" : "def"}, {"label" : "isCollection", "tail" : "(): Boolean", "member" : "com.khulnasoft.spark.connector.types.UserDefinedType.isCollection", "link" : "com\/khulnasoft\/spark\/connector\/types\/UserDefinedType.html#isCollection:Boolean", "kind" : "def"}, {"label" : "isMultiCell", "tail" : "(): Boolean", "member" : "com.khulnasoft.spark.connector.types.UserDefinedType.isMultiCell", "link" : "com\/khulnasoft\/spark\/connector\/types\/UserDefinedType.html#isMultiCell:Boolean", "kind" : "def"}, {"label" : "Column", "tail" : "", "member" : "com.khulnasoft.spark.connector.types.UserDefinedType.Column", "link" : "com\/khulnasoft\/spark\/connector\/types\/UserDefinedType.html#Column=com.khulnasoft.spark.connector.cql.FieldDef", "kind" : "type"}, {"member" : "com.khulnasoft.spark.connector.types.UserDefinedType#<init>", "error" : "unsupported entity"}, {"label" : "isFrozen", "tail" : ": Boolean", "member" : "com.khulnasoft.spark.connector.types.UserDefinedType.isFrozen", "link" : "com\/khulnasoft\/spark\/connector\/types\/UserDefinedType.html#isFrozen:Boolean", "kind" : "val"}, {"label" : "columns", "tail" : ": IndexedSeq[UDTFieldDef]", "member" : "com.khulnasoft.spark.connector.types.UserDefinedType.columns", "link" : "com\/khulnasoft\/spark\/connector\/types\/UserDefinedType.html#columns:IndexedSeq[com.khulnasoft.spark.connector.types.UDTFieldDef]", "kind" : "val"}, {"label" : "name", "tail" : ": String", "member" : "com.khulnasoft.spark.connector.types.UserDefinedType.name", "link" : "com\/khulnasoft\/spark\/connector\/types\/UserDefinedType.html#name:String", "kind" : "val"}, {"label" : "scalaTypeName", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.types.ColumnType.scalaTypeName", "link" : "com\/khulnasoft\/spark\/connector\/types\/UserDefinedType.html#scalaTypeName:String", "kind" : "def"}, {"label" : "converterToScala", "tail" : ": TypeConverter[UDTValue]", "member" : "com.khulnasoft.spark.connector.types.ColumnType.converterToScala", "link" : "com\/khulnasoft\/spark\/connector\/types\/UserDefinedType.html#converterToScala:com.khulnasoft.spark.connector.types.TypeConverter[T]", "kind" : "lazy val"}, {"label" : "missingColumns", "tail" : "(columnsToCheck: Seq[ColumnRef]): Seq[ColumnRef]", "member" : "com.khulnasoft.spark.connector.cql.StructDef.missingColumns", "link" : "com\/khulnasoft\/spark\/connector\/types\/UserDefinedType.html#missingColumns(columnsToCheck:Seq[com.khulnasoft.spark.connector.ColumnRef]):Seq[com.khulnasoft.spark.connector.ColumnRef]", "kind" : "def"}, {"label" : "columnByIndex", "tail" : "(index: Int): Column", "member" : "com.khulnasoft.spark.connector.cql.StructDef.columnByIndex", "link" : "com\/khulnasoft\/spark\/connector\/types\/UserDefinedType.html#columnByIndex(index:Int):StructDef.this.Column", "kind" : "def"}, {"label" : "columnByName", "tail" : "(): Map[String, Column]", "member" : "com.khulnasoft.spark.connector.cql.StructDef.columnByName", "link" : "com\/khulnasoft\/spark\/connector\/types\/UserDefinedType.html#columnByName:Map[String,StructDef.this.Column]", "kind" : "def"}, {"label" : "columnTypes", "tail" : ": IndexedSeq[ColumnType[_]]", "member" : "com.khulnasoft.spark.connector.cql.StructDef.columnTypes", "link" : "com\/khulnasoft\/spark\/connector\/types\/UserDefinedType.html#columnTypes:IndexedSeq[com.khulnasoft.spark.connector.types.ColumnType[_]]", "kind" : "lazy val"}, {"label" : "columnNames", "tail" : ": IndexedSeq[String]", "member" : "com.khulnasoft.spark.connector.cql.StructDef.columnNames", "link" : "com\/khulnasoft\/spark\/connector\/types\/UserDefinedType.html#columnNames:IndexedSeq[String]", "kind" : "lazy val"}, {"label" : "columnRefs", "tail" : ": IndexedSeq[ColumnRef]", "member" : "com.khulnasoft.spark.connector.cql.StructDef.columnRefs", "link" : "com\/khulnasoft\/spark\/connector\/types\/UserDefinedType.html#columnRefs:IndexedSeq[com.khulnasoft.spark.connector.ColumnRef]", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/types\/UserDefinedType.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/types\/UserDefinedType.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/types\/UserDefinedType.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/types\/UserDefinedType.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/types\/UserDefinedType.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/types\/UserDefinedType.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/types\/UserDefinedType.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/UserDefinedType.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/UserDefinedType.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/UserDefinedType.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/types\/UserDefinedType.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/types\/UserDefinedType.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/types\/UserDefinedType.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/types\/UserDefinedType.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/types\/UserDefinedType.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/types\/UserDefinedType.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/khulnasoft\/spark\/connector\/types\/UserDefinedType.html", "kind" : "case class"}, {"name" : "com.khulnasoft.spark.connector.types.UUIDType", "shortDescription" : "", "object" : "com\/khulnasoft\/spark\/connector\/types\/UUIDType$.html", "members_object" : [{"label" : "converterToCassandra", "tail" : "(): OptionToNullConverter", "member" : "com.khulnasoft.spark.connector.types.UUIDType.converterToCassandra", "link" : "com\/khulnasoft\/spark\/connector\/types\/UUIDType$.html#converterToCassandra:com.khulnasoft.spark.connector.types.TypeConverter.OptionToNullConverter", "kind" : "def"}, {"label" : "cqlTypeName", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.types.UUIDType.cqlTypeName", "link" : "com\/khulnasoft\/spark\/connector\/types\/UUIDType$.html#cqlTypeName:String", "kind" : "def"}, {"label" : "scalaTypeTag", "tail" : "(): scala.reflect.api.JavaUniverse.TypeTag[UUID]", "member" : "com.khulnasoft.spark.connector.types.UUIDType.scalaTypeTag", "link" : "com\/khulnasoft\/spark\/connector\/types\/UUIDType$.html#scalaTypeTag:reflect.runtime.universe.TypeTag[java.util.UUID]", "kind" : "def"}, {"label" : "isCollection", "tail" : "(): Boolean", "member" : "com.khulnasoft.spark.connector.types.PrimitiveColumnType.isCollection", "link" : "com\/khulnasoft\/spark\/connector\/types\/UUIDType$.html#isCollection:Boolean", "kind" : "def"}, {"label" : "isMultiCell", "tail" : "(): Boolean", "member" : "com.khulnasoft.spark.connector.types.ColumnType.isMultiCell", "link" : "com\/khulnasoft\/spark\/connector\/types\/UUIDType$.html#isMultiCell:Boolean", "kind" : "def"}, {"label" : "isFrozen", "tail" : "(): Boolean", "member" : "com.khulnasoft.spark.connector.types.ColumnType.isFrozen", "link" : "com\/khulnasoft\/spark\/connector\/types\/UUIDType$.html#isFrozen:Boolean", "kind" : "def"}, {"label" : "scalaTypeName", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.types.ColumnType.scalaTypeName", "link" : "com\/khulnasoft\/spark\/connector\/types\/UUIDType$.html#scalaTypeName:String", "kind" : "def"}, {"label" : "converterToScala", "tail" : ": TypeConverter[UUID]", "member" : "com.khulnasoft.spark.connector.types.ColumnType.converterToScala", "link" : "com\/khulnasoft\/spark\/connector\/types\/UUIDType$.html#converterToScala:com.khulnasoft.spark.connector.types.TypeConverter[T]", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/types\/UUIDType$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/types\/UUIDType$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/types\/UUIDType$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/types\/UUIDType$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/types\/UUIDType$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/types\/UUIDType$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/types\/UUIDType$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/UUIDType$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/UUIDType$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/UUIDType$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/types\/UUIDType$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/types\/UUIDType$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/types\/UUIDType$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/khulnasoft\/spark\/connector\/types\/UUIDType$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/types\/UUIDType$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/types\/UUIDType$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/types\/UUIDType$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.khulnasoft.spark.connector.types.VarCharType", "shortDescription" : "", "object" : "com\/khulnasoft\/spark\/connector\/types\/VarCharType$.html", "members_object" : [{"label" : "converterToCassandra", "tail" : "(): OptionToNullConverter", "member" : "com.khulnasoft.spark.connector.types.VarCharType.converterToCassandra", "link" : "com\/khulnasoft\/spark\/connector\/types\/VarCharType$.html#converterToCassandra:com.khulnasoft.spark.connector.types.TypeConverter.OptionToNullConverter", "kind" : "def"}, {"label" : "cqlTypeName", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.types.VarCharType.cqlTypeName", "link" : "com\/khulnasoft\/spark\/connector\/types\/VarCharType$.html#cqlTypeName:String", "kind" : "def"}, {"label" : "scalaTypeTag", "tail" : "(): scala.reflect.api.JavaUniverse.TypeTag[String]", "member" : "com.khulnasoft.spark.connector.types.VarCharType.scalaTypeTag", "link" : "com\/khulnasoft\/spark\/connector\/types\/VarCharType$.html#scalaTypeTag:reflect.runtime.universe.TypeTag[String]", "kind" : "def"}, {"label" : "isCollection", "tail" : "(): Boolean", "member" : "com.khulnasoft.spark.connector.types.PrimitiveColumnType.isCollection", "link" : "com\/khulnasoft\/spark\/connector\/types\/VarCharType$.html#isCollection:Boolean", "kind" : "def"}, {"label" : "isMultiCell", "tail" : "(): Boolean", "member" : "com.khulnasoft.spark.connector.types.ColumnType.isMultiCell", "link" : "com\/khulnasoft\/spark\/connector\/types\/VarCharType$.html#isMultiCell:Boolean", "kind" : "def"}, {"label" : "isFrozen", "tail" : "(): Boolean", "member" : "com.khulnasoft.spark.connector.types.ColumnType.isFrozen", "link" : "com\/khulnasoft\/spark\/connector\/types\/VarCharType$.html#isFrozen:Boolean", "kind" : "def"}, {"label" : "scalaTypeName", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.types.ColumnType.scalaTypeName", "link" : "com\/khulnasoft\/spark\/connector\/types\/VarCharType$.html#scalaTypeName:String", "kind" : "def"}, {"label" : "converterToScala", "tail" : ": TypeConverter[String]", "member" : "com.khulnasoft.spark.connector.types.ColumnType.converterToScala", "link" : "com\/khulnasoft\/spark\/connector\/types\/VarCharType$.html#converterToScala:com.khulnasoft.spark.connector.types.TypeConverter[T]", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/types\/VarCharType$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/types\/VarCharType$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/types\/VarCharType$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/types\/VarCharType$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/types\/VarCharType$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/types\/VarCharType$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/types\/VarCharType$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/VarCharType$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/VarCharType$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/VarCharType$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/types\/VarCharType$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/types\/VarCharType$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/types\/VarCharType$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/khulnasoft\/spark\/connector\/types\/VarCharType$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/types\/VarCharType$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/types\/VarCharType$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/types\/VarCharType$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.khulnasoft.spark.connector.types.VarIntType", "shortDescription" : "", "object" : "com\/khulnasoft\/spark\/connector\/types\/VarIntType$.html", "members_object" : [{"label" : "converterToCassandra", "tail" : "(): OptionToNullConverter", "member" : "com.khulnasoft.spark.connector.types.VarIntType.converterToCassandra", "link" : "com\/khulnasoft\/spark\/connector\/types\/VarIntType$.html#converterToCassandra:com.khulnasoft.spark.connector.types.TypeConverter.OptionToNullConverter", "kind" : "def"}, {"label" : "cqlTypeName", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.types.VarIntType.cqlTypeName", "link" : "com\/khulnasoft\/spark\/connector\/types\/VarIntType$.html#cqlTypeName:String", "kind" : "def"}, {"label" : "scalaTypeTag", "tail" : "(): scala.reflect.api.JavaUniverse.TypeTag[BigInt]", "member" : "com.khulnasoft.spark.connector.types.VarIntType.scalaTypeTag", "link" : "com\/khulnasoft\/spark\/connector\/types\/VarIntType$.html#scalaTypeTag:reflect.runtime.universe.TypeTag[BigInt]", "kind" : "def"}, {"label" : "isCollection", "tail" : "(): Boolean", "member" : "com.khulnasoft.spark.connector.types.PrimitiveColumnType.isCollection", "link" : "com\/khulnasoft\/spark\/connector\/types\/VarIntType$.html#isCollection:Boolean", "kind" : "def"}, {"label" : "isMultiCell", "tail" : "(): Boolean", "member" : "com.khulnasoft.spark.connector.types.ColumnType.isMultiCell", "link" : "com\/khulnasoft\/spark\/connector\/types\/VarIntType$.html#isMultiCell:Boolean", "kind" : "def"}, {"label" : "isFrozen", "tail" : "(): Boolean", "member" : "com.khulnasoft.spark.connector.types.ColumnType.isFrozen", "link" : "com\/khulnasoft\/spark\/connector\/types\/VarIntType$.html#isFrozen:Boolean", "kind" : "def"}, {"label" : "scalaTypeName", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.types.ColumnType.scalaTypeName", "link" : "com\/khulnasoft\/spark\/connector\/types\/VarIntType$.html#scalaTypeName:String", "kind" : "def"}, {"label" : "converterToScala", "tail" : ": TypeConverter[BigInt]", "member" : "com.khulnasoft.spark.connector.types.ColumnType.converterToScala", "link" : "com\/khulnasoft\/spark\/connector\/types\/VarIntType$.html#converterToScala:com.khulnasoft.spark.connector.types.TypeConverter[T]", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/types\/VarIntType$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/types\/VarIntType$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/types\/VarIntType$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/types\/VarIntType$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/types\/VarIntType$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/types\/VarIntType$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/types\/VarIntType$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/VarIntType$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/VarIntType$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/VarIntType$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/types\/VarIntType$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/types\/VarIntType$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/types\/VarIntType$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/khulnasoft\/spark\/connector\/types\/VarIntType$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/types\/VarIntType$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/types\/VarIntType$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/types\/VarIntType$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.khulnasoft.spark.connector.types.VectorType", "shortDescription" : "", "members_case class" : [{"label" : "converterToCassandra", "tail" : "(): TypeConverter[_ <: AnyRef]", "member" : "com.khulnasoft.spark.connector.types.VectorType.converterToCassandra", "link" : "com\/khulnasoft\/spark\/connector\/types\/VectorType.html#converterToCassandra:com.khulnasoft.spark.connector.types.TypeConverter[_<:AnyRef]", "kind" : "def"}, {"label" : "cqlTypeName", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.types.VectorType.cqlTypeName", "link" : "com\/khulnasoft\/spark\/connector\/types\/VectorType.html#cqlTypeName:String", "kind" : "def"}, {"label" : "scalaTypeTag", "tail" : ": scala.reflect.api.JavaUniverse.TypeTag[Seq[T]]", "member" : "com.khulnasoft.spark.connector.types.VectorType.scalaTypeTag", "link" : "com\/khulnasoft\/spark\/connector\/types\/VectorType.html#scalaTypeTag:reflect.runtime.universe.TypeTag[Seq[T]]", "kind" : "lazy val"}, {"label" : "isCollection", "tail" : "(): Boolean", "member" : "com.khulnasoft.spark.connector.types.VectorType.isCollection", "link" : "com\/khulnasoft\/spark\/connector\/types\/VectorType.html#isCollection:Boolean", "kind" : "def"}, {"member" : "com.khulnasoft.spark.connector.types.VectorType#<init>", "error" : "unsupported entity"}, {"label" : "dimension", "tail" : ": Int", "member" : "com.khulnasoft.spark.connector.types.VectorType.dimension", "link" : "com\/khulnasoft\/spark\/connector\/types\/VectorType.html#dimension:Int", "kind" : "val"}, {"label" : "elemType", "tail" : ": ColumnType[T]", "member" : "com.khulnasoft.spark.connector.types.VectorType.elemType", "link" : "com\/khulnasoft\/spark\/connector\/types\/VectorType.html#elemType:com.khulnasoft.spark.connector.types.ColumnType[T]", "kind" : "val"}, {"label" : "isMultiCell", "tail" : "(): Boolean", "member" : "com.khulnasoft.spark.connector.types.ColumnType.isMultiCell", "link" : "com\/khulnasoft\/spark\/connector\/types\/VectorType.html#isMultiCell:Boolean", "kind" : "def"}, {"label" : "isFrozen", "tail" : "(): Boolean", "member" : "com.khulnasoft.spark.connector.types.ColumnType.isFrozen", "link" : "com\/khulnasoft\/spark\/connector\/types\/VectorType.html#isFrozen:Boolean", "kind" : "def"}, {"label" : "scalaTypeName", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.types.ColumnType.scalaTypeName", "link" : "com\/khulnasoft\/spark\/connector\/types\/VectorType.html#scalaTypeName:String", "kind" : "def"}, {"label" : "converterToScala", "tail" : ": TypeConverter[Seq[T]]", "member" : "com.khulnasoft.spark.connector.types.ColumnType.converterToScala", "link" : "com\/khulnasoft\/spark\/connector\/types\/VectorType.html#converterToScala:com.khulnasoft.spark.connector.types.TypeConverter[T]", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/types\/VectorType.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/types\/VectorType.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/types\/VectorType.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/types\/VectorType.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/types\/VectorType.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/types\/VectorType.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/types\/VectorType.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/VectorType.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/VectorType.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/types\/VectorType.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/types\/VectorType.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/types\/VectorType.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/types\/VectorType.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/types\/VectorType.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/types\/VectorType.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/types\/VectorType.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/khulnasoft\/spark\/connector\/types\/VectorType.html", "kind" : "case class"}], "com.khulnasoft.spark.connector.cql" : [{"name" : "com.khulnasoft.spark.connector.cql.ClusteringColumn", "shortDescription" : "", "object" : "com\/khulnasoft\/spark\/connector\/cql\/ClusteringColumn$.html", "members_object" : [{"label" : "Descending", "tail" : "", "member" : "com.khulnasoft.spark.connector.cql.ClusteringColumn.Descending", "link" : "com\/khulnasoft\/spark\/connector\/cql\/ClusteringColumn$.html#Descending", "kind" : "object"}, {"label" : "Ascending", "tail" : "", "member" : "com.khulnasoft.spark.connector.cql.ClusteringColumn.Ascending", "link" : "com\/khulnasoft\/spark\/connector\/cql\/ClusteringColumn$.html#Ascending", "kind" : "object"}, {"label" : "SortingOrder", "tail" : "", "member" : "com.khulnasoft.spark.connector.cql.ClusteringColumn.SortingOrder", "link" : "com\/khulnasoft\/spark\/connector\/cql\/ClusteringColumn$.html#SortingOrderextendsAnyRef", "kind" : "sealed trait"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/cql\/ClusteringColumn$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/cql\/ClusteringColumn$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/cql\/ClusteringColumn$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/cql\/ClusteringColumn$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/cql\/ClusteringColumn$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/cql\/ClusteringColumn$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/cql\/ClusteringColumn$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/cql\/ClusteringColumn$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/cql\/ClusteringColumn$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/cql\/ClusteringColumn$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/cql\/ClusteringColumn$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/cql\/ClusteringColumn$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/khulnasoft\/spark\/connector\/cql\/ClusteringColumn$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/cql\/ClusteringColumn$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/khulnasoft\/spark\/connector\/cql\/ClusteringColumn$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/khulnasoft\/spark\/connector\/cql\/ClusteringColumn$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/cql\/ClusteringColumn$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/cql\/ClusteringColumn$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/cql\/ClusteringColumn$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"member" : "com.khulnasoft.spark.connector.cql.ClusteringColumn#<init>", "error" : "unsupported entity"}, {"label" : "sortDirection", "tail" : ": SortingOrder", "member" : "com.khulnasoft.spark.connector.cql.ClusteringColumn.sortDirection", "link" : "com\/khulnasoft\/spark\/connector\/cql\/ClusteringColumn.html#sortDirection:com.khulnasoft.spark.connector.cql.ClusteringColumn.SortingOrder", "kind" : "val"}, {"label" : "index", "tail" : ": Int", "member" : "com.khulnasoft.spark.connector.cql.ClusteringColumn.index", "link" : "com\/khulnasoft\/spark\/connector\/cql\/ClusteringColumn.html#index:Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/cql\/ClusteringColumn.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/cql\/ClusteringColumn.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/cql\/ClusteringColumn.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/cql\/ClusteringColumn.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/cql\/ClusteringColumn.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/cql\/ClusteringColumn.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/cql\/ClusteringColumn.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/cql\/ClusteringColumn.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/cql\/ClusteringColumn.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/cql\/ClusteringColumn.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/cql\/ClusteringColumn.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/cql\/ClusteringColumn.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/cql\/ClusteringColumn.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/cql\/ClusteringColumn.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/cql\/ClusteringColumn.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/cql\/ClusteringColumn.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/khulnasoft\/spark\/connector\/cql\/ClusteringColumn.html", "kind" : "object"}, {"name" : "com.khulnasoft.spark.connector.cql.ColumnDef", "shortDescription" : "A Cassandra column metadata that can be serialized.", "object" : "com\/khulnasoft\/spark\/connector\/cql\/ColumnDef$.html", "members_object" : [{"label" : "apply", "tail" : "(column: ColumnMetadata, columnRole: ColumnRole): ColumnDef", "member" : "com.khulnasoft.spark.connector.cql.ColumnDef.apply", "link" : "com\/khulnasoft\/spark\/connector\/cql\/ColumnDef$.html#apply(column:com.khulnasoft.oss.driver.api.core.metadata.schema.ColumnMetadata,columnRole:com.khulnasoft.spark.connector.cql.ColumnRole):com.khulnasoft.spark.connector.cql.ColumnDef", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/cql\/ColumnDef$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/cql\/ColumnDef$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/cql\/ColumnDef$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/cql\/ColumnDef$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/cql\/ColumnDef$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/cql\/ColumnDef$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/cql\/ColumnDef$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/cql\/ColumnDef$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/cql\/ColumnDef$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/cql\/ColumnDef$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/cql\/ColumnDef$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/cql\/ColumnDef$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/khulnasoft\/spark\/connector\/cql\/ColumnDef$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/cql\/ColumnDef$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/khulnasoft\/spark\/connector\/cql\/ColumnDef$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/khulnasoft\/spark\/connector\/cql\/ColumnDef$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/cql\/ColumnDef$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/cql\/ColumnDef$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/cql\/ColumnDef$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "cql", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.cql.ColumnDef.cql", "link" : "com\/khulnasoft\/spark\/connector\/cql\/ColumnDef.html#cql:String", "kind" : "def"}, {"label" : "sortingDirection", "tail" : "(): Any", "member" : "com.khulnasoft.spark.connector.cql.ColumnDef.sortingDirection", "link" : "com\/khulnasoft\/spark\/connector\/cql\/ColumnDef.html#sortingDirection:Any", "kind" : "def"}, {"label" : "componentIndex", "tail" : "(): Option[Int]", "member" : "com.khulnasoft.spark.connector.cql.ColumnDef.componentIndex", "link" : "com\/khulnasoft\/spark\/connector\/cql\/ColumnDef.html#componentIndex:Option[Int]", "kind" : "def"}, {"label" : "isCounterColumn", "tail" : "(): Boolean", "member" : "com.khulnasoft.spark.connector.cql.ColumnDef.isCounterColumn", "link" : "com\/khulnasoft\/spark\/connector\/cql\/ColumnDef.html#isCounterColumn:Boolean", "kind" : "def"}, {"label" : "isPrimaryKeyColumn", "tail" : "(): Boolean", "member" : "com.khulnasoft.spark.connector.cql.ColumnDef.isPrimaryKeyColumn", "link" : "com\/khulnasoft\/spark\/connector\/cql\/ColumnDef.html#isPrimaryKeyColumn:Boolean", "kind" : "def"}, {"label" : "isClusteringColumn", "tail" : "(): Boolean", "member" : "com.khulnasoft.spark.connector.cql.ColumnDef.isClusteringColumn", "link" : "com\/khulnasoft\/spark\/connector\/cql\/ColumnDef.html#isClusteringColumn:Boolean", "kind" : "def"}, {"label" : "isPartitionKeyColumn", "tail" : "(): Boolean", "member" : "com.khulnasoft.spark.connector.cql.ColumnDef.isPartitionKeyColumn", "link" : "com\/khulnasoft\/spark\/connector\/cql\/ColumnDef.html#isPartitionKeyColumn:Boolean", "kind" : "def"}, {"label" : "isMultiCell", "tail" : "(): Boolean", "member" : "com.khulnasoft.spark.connector.cql.ColumnDef.isMultiCell", "link" : "com\/khulnasoft\/spark\/connector\/cql\/ColumnDef.html#isMultiCell:Boolean", "kind" : "def"}, {"label" : "isFrozen", "tail" : "(): Boolean", "member" : "com.khulnasoft.spark.connector.cql.ColumnDef.isFrozen", "link" : "com\/khulnasoft\/spark\/connector\/cql\/ColumnDef.html#isFrozen:Boolean", "kind" : "def"}, {"label" : "isCollection", "tail" : "(): Boolean", "member" : "com.khulnasoft.spark.connector.cql.ColumnDef.isCollection", "link" : "com\/khulnasoft\/spark\/connector\/cql\/ColumnDef.html#isCollection:Boolean", "kind" : "def"}, {"label" : "isStatic", "tail" : "(): Boolean", "member" : "com.khulnasoft.spark.connector.cql.ColumnDef.isStatic", "link" : "com\/khulnasoft\/spark\/connector\/cql\/ColumnDef.html#isStatic:Boolean", "kind" : "def"}, {"label" : "ref", "tail" : "(): ColumnRef", "member" : "com.khulnasoft.spark.connector.cql.ColumnDef.ref", "link" : "com\/khulnasoft\/spark\/connector\/cql\/ColumnDef.html#ref:com.khulnasoft.spark.connector.ColumnRef", "kind" : "def"}, {"member" : "com.khulnasoft.spark.connector.cql.ColumnDef#<init>", "error" : "unsupported entity"}, {"label" : "columnType", "tail" : ": ColumnType[_]", "member" : "com.khulnasoft.spark.connector.cql.ColumnDef.columnType", "link" : "com\/khulnasoft\/spark\/connector\/cql\/ColumnDef.html#columnType:com.khulnasoft.spark.connector.types.ColumnType[_]", "kind" : "val"}, {"label" : "columnRole", "tail" : ": ColumnRole", "member" : "com.khulnasoft.spark.connector.cql.ColumnDef.columnRole", "link" : "com\/khulnasoft\/spark\/connector\/cql\/ColumnDef.html#columnRole:com.khulnasoft.spark.connector.cql.ColumnRole", "kind" : "val"}, {"label" : "columnName", "tail" : ": String", "member" : "com.khulnasoft.spark.connector.cql.ColumnDef.columnName", "link" : "com\/khulnasoft\/spark\/connector\/cql\/ColumnDef.html#columnName:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/cql\/ColumnDef.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/cql\/ColumnDef.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/cql\/ColumnDef.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/cql\/ColumnDef.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/cql\/ColumnDef.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/cql\/ColumnDef.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/cql\/ColumnDef.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/cql\/ColumnDef.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/cql\/ColumnDef.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/cql\/ColumnDef.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/cql\/ColumnDef.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/cql\/ColumnDef.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/cql\/ColumnDef.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/cql\/ColumnDef.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/cql\/ColumnDef.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/cql\/ColumnDef.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/khulnasoft\/spark\/connector\/cql\/ColumnDef.html", "kind" : "case class"}, {"name" : "com.khulnasoft.spark.connector.cql.ColumnRole", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/cql\/ColumnRole.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/cql\/ColumnRole.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/cql\/ColumnRole.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/cql\/ColumnRole.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/cql\/ColumnRole.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/cql\/ColumnRole.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/cql\/ColumnRole.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/cql\/ColumnRole.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/cql\/ColumnRole.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/cql\/ColumnRole.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/cql\/ColumnRole.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/cql\/ColumnRole.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/khulnasoft\/spark\/connector\/cql\/ColumnRole.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/cql\/ColumnRole.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/khulnasoft\/spark\/connector\/cql\/ColumnRole.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/khulnasoft\/spark\/connector\/cql\/ColumnRole.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/cql\/ColumnRole.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/cql\/ColumnRole.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/cql\/ColumnRole.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "com\/khulnasoft\/spark\/connector\/cql\/ColumnRole.html", "kind" : "trait"}, {"name" : "com.khulnasoft.spark.connector.cql.FieldDef", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/cql\/FieldDef.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/cql\/FieldDef.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/cql\/FieldDef.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/cql\/FieldDef.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/cql\/FieldDef.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/cql\/FieldDef.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/cql\/FieldDef.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/cql\/FieldDef.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/cql\/FieldDef.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/cql\/FieldDef.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/cql\/FieldDef.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/cql\/FieldDef.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/khulnasoft\/spark\/connector\/cql\/FieldDef.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/cql\/FieldDef.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/khulnasoft\/spark\/connector\/cql\/FieldDef.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/khulnasoft\/spark\/connector\/cql\/FieldDef.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/cql\/FieldDef.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/cql\/FieldDef.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/cql\/FieldDef.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "columnType", "tail" : "(): ColumnType[_]", "member" : "com.khulnasoft.spark.connector.cql.FieldDef.columnType", "link" : "com\/khulnasoft\/spark\/connector\/cql\/FieldDef.html#columnType:com.khulnasoft.spark.connector.types.ColumnType[_]", "kind" : "abstract def"}, {"label" : "columnName", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.cql.FieldDef.columnName", "link" : "com\/khulnasoft\/spark\/connector\/cql\/FieldDef.html#columnName:String", "kind" : "abstract def"}, {"label" : "ref", "tail" : "(): ColumnRef", "member" : "com.khulnasoft.spark.connector.cql.FieldDef.ref", "link" : "com\/khulnasoft\/spark\/connector\/cql\/FieldDef.html#ref:com.khulnasoft.spark.connector.ColumnRef", "kind" : "abstract def"}], "shortDescription" : "Abstract column \/ field definition.", "trait" : "com\/khulnasoft\/spark\/connector\/cql\/FieldDef.html", "kind" : "trait"}, {"name" : "com.khulnasoft.spark.connector.cql.IndexDef", "shortDescription" : "Cassandra Index Metadata that can be serialized", "object" : "com\/khulnasoft\/spark\/connector\/cql\/IndexDef$.html", "members_object" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/cql\/IndexDef$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/cql\/IndexDef$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/cql\/IndexDef$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/cql\/IndexDef$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/cql\/IndexDef$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/cql\/IndexDef$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/cql\/IndexDef$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/cql\/IndexDef$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/cql\/IndexDef$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/cql\/IndexDef$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/cql\/IndexDef$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/cql\/IndexDef$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/khulnasoft\/spark\/connector\/cql\/IndexDef$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/cql\/IndexDef$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/khulnasoft\/spark\/connector\/cql\/IndexDef$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/khulnasoft\/spark\/connector\/cql\/IndexDef$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/cql\/IndexDef$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/cql\/IndexDef$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/cql\/IndexDef$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "targetColumn", "tail" : ": String", "member" : "com.khulnasoft.spark.connector.cql.IndexDef.targetColumn", "link" : "com\/khulnasoft\/spark\/connector\/cql\/IndexDef.html#targetColumn:String", "kind" : "val"}, {"member" : "com.khulnasoft.spark.connector.cql.IndexDef#<init>", "error" : "unsupported entity"}, {"label" : "options", "tail" : ": Map[String, String]", "member" : "com.khulnasoft.spark.connector.cql.IndexDef.options", "link" : "com\/khulnasoft\/spark\/connector\/cql\/IndexDef.html#options:Map[String,String]", "kind" : "val"}, {"label" : "indexName", "tail" : ": String", "member" : "com.khulnasoft.spark.connector.cql.IndexDef.indexName", "link" : "com\/khulnasoft\/spark\/connector\/cql\/IndexDef.html#indexName:String", "kind" : "val"}, {"label" : "target", "tail" : ": String", "member" : "com.khulnasoft.spark.connector.cql.IndexDef.target", "link" : "com\/khulnasoft\/spark\/connector\/cql\/IndexDef.html#target:String", "kind" : "val"}, {"label" : "className", "tail" : ": Option[String]", "member" : "com.khulnasoft.spark.connector.cql.IndexDef.className", "link" : "com\/khulnasoft\/spark\/connector\/cql\/IndexDef.html#className:Option[String]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/cql\/IndexDef.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/cql\/IndexDef.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/cql\/IndexDef.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/cql\/IndexDef.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/cql\/IndexDef.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/cql\/IndexDef.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/cql\/IndexDef.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/cql\/IndexDef.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/cql\/IndexDef.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/cql\/IndexDef.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/cql\/IndexDef.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/cql\/IndexDef.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/cql\/IndexDef.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/cql\/IndexDef.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/cql\/IndexDef.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/cql\/IndexDef.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/khulnasoft\/spark\/connector\/cql\/IndexDef.html", "kind" : "case class"}, {"name" : "com.khulnasoft.spark.connector.cql.KeyspaceDef", "shortDescription" : "A Cassandra keyspace metadata that can be serialized.", "members_case class" : [{"label" : "userTypeByName", "tail" : ": Map[String, UserDefinedType]", "member" : "com.khulnasoft.spark.connector.cql.KeyspaceDef.userTypeByName", "link" : "com\/khulnasoft\/spark\/connector\/cql\/KeyspaceDef.html#userTypeByName:Map[String,com.khulnasoft.spark.connector.types.UserDefinedType]", "kind" : "lazy val"}, {"label" : "tableByName", "tail" : ": Map[String, TableDef]", "member" : "com.khulnasoft.spark.connector.cql.KeyspaceDef.tableByName", "link" : "com\/khulnasoft\/spark\/connector\/cql\/KeyspaceDef.html#tableByName:Map[String,com.khulnasoft.spark.connector.cql.TableDef]", "kind" : "lazy val"}, {"member" : "com.khulnasoft.spark.connector.cql.KeyspaceDef#<init>", "error" : "unsupported entity"}, {"label" : "isSystem", "tail" : ": Boolean", "member" : "com.khulnasoft.spark.connector.cql.KeyspaceDef.isSystem", "link" : "com\/khulnasoft\/spark\/connector\/cql\/KeyspaceDef.html#isSystem:Boolean", "kind" : "val"}, {"label" : "userTypes", "tail" : ": Set[UserDefinedType]", "member" : "com.khulnasoft.spark.connector.cql.KeyspaceDef.userTypes", "link" : "com\/khulnasoft\/spark\/connector\/cql\/KeyspaceDef.html#userTypes:Set[com.khulnasoft.spark.connector.types.UserDefinedType]", "kind" : "val"}, {"label" : "tables", "tail" : ": Set[TableDef]", "member" : "com.khulnasoft.spark.connector.cql.KeyspaceDef.tables", "link" : "com\/khulnasoft\/spark\/connector\/cql\/KeyspaceDef.html#tables:Set[com.khulnasoft.spark.connector.cql.TableDef]", "kind" : "val"}, {"label" : "keyspaceName", "tail" : ": String", "member" : "com.khulnasoft.spark.connector.cql.KeyspaceDef.keyspaceName", "link" : "com\/khulnasoft\/spark\/connector\/cql\/KeyspaceDef.html#keyspaceName:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/cql\/KeyspaceDef.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/cql\/KeyspaceDef.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/cql\/KeyspaceDef.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/cql\/KeyspaceDef.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/cql\/KeyspaceDef.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/cql\/KeyspaceDef.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/cql\/KeyspaceDef.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/cql\/KeyspaceDef.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/cql\/KeyspaceDef.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/cql\/KeyspaceDef.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/cql\/KeyspaceDef.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/cql\/KeyspaceDef.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/cql\/KeyspaceDef.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/cql\/KeyspaceDef.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/cql\/KeyspaceDef.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/cql\/KeyspaceDef.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/khulnasoft\/spark\/connector\/cql\/KeyspaceDef.html", "kind" : "case class"}, {"name" : "com.khulnasoft.spark.connector.cql.LocalNodeFirstLoadBalancingPolicy", "shortDescription" : "Selects local node first and then nodes in local DC in random order.", "object" : "com\/khulnasoft\/spark\/connector\/cql\/LocalNodeFirstLoadBalancingPolicy$.html", "members_class" : [{"label" : "onDown", "tail" : "(node: Node): Unit", "member" : "com.khulnasoft.spark.connector.cql.LocalNodeFirstLoadBalancingPolicy.onDown", "link" : "com\/khulnasoft\/spark\/connector\/cql\/LocalNodeFirstLoadBalancingPolicy.html#onDown(node:com.khulnasoft.oss.driver.api.core.metadata.Node):Unit", "kind" : "def"}, {"label" : "onUp", "tail" : "(node: Node): Unit", "member" : "com.khulnasoft.spark.connector.cql.LocalNodeFirstLoadBalancingPolicy.onUp", "link" : "com\/khulnasoft\/spark\/connector\/cql\/LocalNodeFirstLoadBalancingPolicy.html#onUp(node:com.khulnasoft.oss.driver.api.core.metadata.Node):Unit", "kind" : "def"}, {"label" : "close", "tail" : "(): Unit", "member" : "com.khulnasoft.spark.connector.cql.LocalNodeFirstLoadBalancingPolicy.close", "link" : "com\/khulnasoft\/spark\/connector\/cql\/LocalNodeFirstLoadBalancingPolicy.html#close():Unit", "kind" : "def"}, {"label" : "onRemove", "tail" : "(node: Node): Unit", "member" : "com.khulnasoft.spark.connector.cql.LocalNodeFirstLoadBalancingPolicy.onRemove", "link" : "com\/khulnasoft\/spark\/connector\/cql\/LocalNodeFirstLoadBalancingPolicy.html#onRemove(node:com.khulnasoft.oss.driver.api.core.metadata.Node):Unit", "kind" : "def"}, {"label" : "onAdd", "tail" : "(node: Node): Unit", "member" : "com.khulnasoft.spark.connector.cql.LocalNodeFirstLoadBalancingPolicy.onAdd", "link" : "com\/khulnasoft\/spark\/connector\/cql\/LocalNodeFirstLoadBalancingPolicy.html#onAdd(node:com.khulnasoft.oss.driver.api.core.metadata.Node):Unit", "kind" : "def"}, {"label" : "newQueryPlan", "tail" : "(request: Request, session: Session): Queue[Node]", "member" : "com.khulnasoft.spark.connector.cql.LocalNodeFirstLoadBalancingPolicy.newQueryPlan", "link" : "com\/khulnasoft\/spark\/connector\/cql\/LocalNodeFirstLoadBalancingPolicy.html#newQueryPlan(request:com.khulnasoft.oss.driver.api.core.session.Request,session:com.khulnasoft.oss.driver.api.core.session.Session):java.util.Queue[com.khulnasoft.oss.driver.api.core.metadata.Node]", "kind" : "def"}, {"label" : "tokenMap", "tail" : "(): Option[TokenMap]", "member" : "com.khulnasoft.spark.connector.cql.LocalNodeFirstLoadBalancingPolicy.tokenMap", "link" : "com\/khulnasoft\/spark\/connector\/cql\/LocalNodeFirstLoadBalancingPolicy.html#tokenMap:Option[com.khulnasoft.oss.driver.api.core.metadata.TokenMap]", "kind" : "def"}, {"label" : "init", "tail" : "(nodes: Map[UUID, Node], distanceReporter: DistanceReporter): Unit", "member" : "com.khulnasoft.spark.connector.cql.LocalNodeFirstLoadBalancingPolicy.init", "link" : "com\/khulnasoft\/spark\/connector\/cql\/LocalNodeFirstLoadBalancingPolicy.html#init(nodes:java.util.Map[java.util.UUID,com.khulnasoft.oss.driver.api.core.metadata.Node],distanceReporter:com.khulnasoft.oss.driver.api.core.loadbalancing.LoadBalancingPolicy.DistanceReporter):Unit", "kind" : "def"}, {"member" : "com.khulnasoft.spark.connector.cql.LocalNodeFirstLoadBalancingPolicy#<init>", "error" : "unsupported entity"}, {"label" : "getRequestTracker", "tail" : "(): Optional[RequestTracker]", "member" : "com.khulnasoft.oss.driver.api.core.loadbalancing.LoadBalancingPolicy.getRequestTracker", "link" : "com\/khulnasoft\/spark\/connector\/cql\/LocalNodeFirstLoadBalancingPolicy.html#getRequestTracker():java.util.Optional[com.khulnasoft.oss.driver.api.core.tracker.RequestTracker]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/cql\/LocalNodeFirstLoadBalancingPolicy.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/cql\/LocalNodeFirstLoadBalancingPolicy.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/cql\/LocalNodeFirstLoadBalancingPolicy.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/cql\/LocalNodeFirstLoadBalancingPolicy.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/cql\/LocalNodeFirstLoadBalancingPolicy.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/cql\/LocalNodeFirstLoadBalancingPolicy.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/cql\/LocalNodeFirstLoadBalancingPolicy.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/cql\/LocalNodeFirstLoadBalancingPolicy.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/cql\/LocalNodeFirstLoadBalancingPolicy.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/cql\/LocalNodeFirstLoadBalancingPolicy.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/cql\/LocalNodeFirstLoadBalancingPolicy.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/cql\/LocalNodeFirstLoadBalancingPolicy.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/khulnasoft\/spark\/connector\/cql\/LocalNodeFirstLoadBalancingPolicy.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/cql\/LocalNodeFirstLoadBalancingPolicy.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/khulnasoft\/spark\/connector\/cql\/LocalNodeFirstLoadBalancingPolicy.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/khulnasoft\/spark\/connector\/cql\/LocalNodeFirstLoadBalancingPolicy.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/cql\/LocalNodeFirstLoadBalancingPolicy.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/cql\/LocalNodeFirstLoadBalancingPolicy.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/cql\/LocalNodeFirstLoadBalancingPolicy.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "LoadBalancingShuffleNodes", "tail" : ": DriverOption", "member" : "com.khulnasoft.spark.connector.cql.LocalNodeFirstLoadBalancingPolicy.LoadBalancingShuffleNodes", "link" : "com\/khulnasoft\/spark\/connector\/cql\/LocalNodeFirstLoadBalancingPolicy$.html#LoadBalancingShuffleNodes:com.khulnasoft.oss.driver.api.core.config.DriverOption", "kind" : "val"}, {"label" : "determineDataCenter", "tail" : "(contactPoints: Set[InetSocketAddress], allNodes: Set[Node]): String", "member" : "com.khulnasoft.spark.connector.cql.LocalNodeFirstLoadBalancingPolicy.determineDataCenter", "link" : "com\/khulnasoft\/spark\/connector\/cql\/LocalNodeFirstLoadBalancingPolicy$.html#determineDataCenter(contactPoints:Set[java.net.InetSocketAddress],allNodes:Set[com.khulnasoft.oss.driver.api.core.metadata.Node]):String", "kind" : "def"}, {"label" : "sortNodesByStatusAndProximity", "tail" : "(dc: String, nodesToSort: Set[Node]): Seq[Node]", "member" : "com.khulnasoft.spark.connector.cql.LocalNodeFirstLoadBalancingPolicy.sortNodesByStatusAndProximity", "link" : "com\/khulnasoft\/spark\/connector\/cql\/LocalNodeFirstLoadBalancingPolicy$.html#sortNodesByStatusAndProximity(dc:String,nodesToSort:Set[com.khulnasoft.oss.driver.api.core.metadata.Node]):Seq[com.khulnasoft.oss.driver.api.core.metadata.Node]", "kind" : "def"}, {"label" : "isLocalHost", "tail" : "(node: Node): Boolean", "member" : "com.khulnasoft.spark.connector.cql.LocalNodeFirstLoadBalancingPolicy.isLocalHost", "link" : "com\/khulnasoft\/spark\/connector\/cql\/LocalNodeFirstLoadBalancingPolicy$.html#isLocalHost(node:com.khulnasoft.oss.driver.api.core.metadata.Node):Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/cql\/LocalNodeFirstLoadBalancingPolicy$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/cql\/LocalNodeFirstLoadBalancingPolicy$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/cql\/LocalNodeFirstLoadBalancingPolicy$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/cql\/LocalNodeFirstLoadBalancingPolicy$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/cql\/LocalNodeFirstLoadBalancingPolicy$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/cql\/LocalNodeFirstLoadBalancingPolicy$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/cql\/LocalNodeFirstLoadBalancingPolicy$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/cql\/LocalNodeFirstLoadBalancingPolicy$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/cql\/LocalNodeFirstLoadBalancingPolicy$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/cql\/LocalNodeFirstLoadBalancingPolicy$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/cql\/LocalNodeFirstLoadBalancingPolicy$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/cql\/LocalNodeFirstLoadBalancingPolicy$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/khulnasoft\/spark\/connector\/cql\/LocalNodeFirstLoadBalancingPolicy$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/cql\/LocalNodeFirstLoadBalancingPolicy$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/khulnasoft\/spark\/connector\/cql\/LocalNodeFirstLoadBalancingPolicy$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/khulnasoft\/spark\/connector\/cql\/LocalNodeFirstLoadBalancingPolicy$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/cql\/LocalNodeFirstLoadBalancingPolicy$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/cql\/LocalNodeFirstLoadBalancingPolicy$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/cql\/LocalNodeFirstLoadBalancingPolicy$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/khulnasoft\/spark\/connector\/cql\/LocalNodeFirstLoadBalancingPolicy.html", "kind" : "class"}, {"name" : "com.khulnasoft.spark.connector.cql.MultipleRetryPolicy", "shortDescription" : "Always retries with the same CL (null forces the original statement CL see SPARKC-494), constant number of times, regardless of circumstances", "object" : "com\/khulnasoft\/spark\/connector\/cql\/MultipleRetryPolicy$.html", "members_class" : [{"label" : "close", "tail" : "(): Unit", "member" : "com.khulnasoft.spark.connector.cql.MultipleRetryPolicy.close", "link" : "com\/khulnasoft\/spark\/connector\/cql\/MultipleRetryPolicy.html#close():Unit", "kind" : "def"}, {"label" : "onErrorResponse", "tail" : "(request: Request, error: CoordinatorException, retryCount: Int): RetryDecision", "member" : "com.khulnasoft.spark.connector.cql.MultipleRetryPolicy.onErrorResponse", "link" : "com\/khulnasoft\/spark\/connector\/cql\/MultipleRetryPolicy.html#onErrorResponse(request:com.khulnasoft.oss.driver.api.core.session.Request,error:com.khulnasoft.oss.driver.api.core.servererrors.CoordinatorException,retryCount:Int):com.khulnasoft.oss.driver.api.core.retry.RetryDecision", "kind" : "def"}, {"label" : "onRequestAborted", "tail" : "(request: Request, error: Throwable, retryCount: Int): RetryDecision", "member" : "com.khulnasoft.spark.connector.cql.MultipleRetryPolicy.onRequestAborted", "link" : "com\/khulnasoft\/spark\/connector\/cql\/MultipleRetryPolicy.html#onRequestAborted(request:com.khulnasoft.oss.driver.api.core.session.Request,error:Throwable,retryCount:Int):com.khulnasoft.oss.driver.api.core.retry.RetryDecision", "kind" : "def"}, {"label" : "onUnavailable", "tail" : "(request: Request, cl: ConsistencyLevel, required: Int, alive: Int, retryCount: Int): RetryDecision", "member" : "com.khulnasoft.spark.connector.cql.MultipleRetryPolicy.onUnavailable", "link" : "com\/khulnasoft\/spark\/connector\/cql\/MultipleRetryPolicy.html#onUnavailable(request:com.khulnasoft.oss.driver.api.core.session.Request,cl:com.khulnasoft.oss.driver.api.core.ConsistencyLevel,required:Int,alive:Int,retryCount:Int):com.khulnasoft.oss.driver.api.core.retry.RetryDecision", "kind" : "def"}, {"label" : "onWriteTimeout", "tail" : "(request: Request, cl: ConsistencyLevel, writeType: WriteType, blockFor: Int, received: Int, retryCount: Int): RetryDecision", "member" : "com.khulnasoft.spark.connector.cql.MultipleRetryPolicy.onWriteTimeout", "link" : "com\/khulnasoft\/spark\/connector\/cql\/MultipleRetryPolicy.html#onWriteTimeout(request:com.khulnasoft.oss.driver.api.core.session.Request,cl:com.khulnasoft.oss.driver.api.core.ConsistencyLevel,writeType:com.khulnasoft.oss.driver.api.core.servererrors.WriteType,blockFor:Int,received:Int,retryCount:Int):com.khulnasoft.oss.driver.api.core.retry.RetryDecision", "kind" : "def"}, {"label" : "onReadTimeout", "tail" : "(request: Request, cl: ConsistencyLevel, blockFor: Int, received: Int, dataPresent: Boolean, retryCount: Int): RetryDecision", "member" : "com.khulnasoft.spark.connector.cql.MultipleRetryPolicy.onReadTimeout", "link" : "com\/khulnasoft\/spark\/connector\/cql\/MultipleRetryPolicy.html#onReadTimeout(request:com.khulnasoft.oss.driver.api.core.session.Request,cl:com.khulnasoft.oss.driver.api.core.ConsistencyLevel,blockFor:Int,received:Int,dataPresent:Boolean,retryCount:Int):com.khulnasoft.oss.driver.api.core.retry.RetryDecision", "kind" : "def"}, {"member" : "com.khulnasoft.spark.connector.cql.MultipleRetryPolicy#<init>", "error" : "unsupported entity"}, {"label" : "onErrorResponseVerdict", "tail" : "(arg0: Request, arg1: CoordinatorException, arg2: Int): RetryVerdict", "member" : "com.khulnasoft.oss.driver.api.core.retry.RetryPolicy.onErrorResponseVerdict", "link" : "com\/khulnasoft\/spark\/connector\/cql\/MultipleRetryPolicy.html#onErrorResponseVerdict(x$1:com.khulnasoft.oss.driver.api.core.session.Request,x$2:com.khulnasoft.oss.driver.api.core.servererrors.CoordinatorException,x$3:Int):com.khulnasoft.oss.driver.api.core.retry.RetryVerdict", "kind" : "def"}, {"label" : "onRequestAbortedVerdict", "tail" : "(arg0: Request, arg1: Throwable, arg2: Int): RetryVerdict", "member" : "com.khulnasoft.oss.driver.api.core.retry.RetryPolicy.onRequestAbortedVerdict", "link" : "com\/khulnasoft\/spark\/connector\/cql\/MultipleRetryPolicy.html#onRequestAbortedVerdict(x$1:com.khulnasoft.oss.driver.api.core.session.Request,x$2:Throwable,x$3:Int):com.khulnasoft.oss.driver.api.core.retry.RetryVerdict", "kind" : "def"}, {"label" : "onUnavailableVerdict", "tail" : "(arg0: Request, arg1: ConsistencyLevel, arg2: Int, arg3: Int, arg4: Int): RetryVerdict", "member" : "com.khulnasoft.oss.driver.api.core.retry.RetryPolicy.onUnavailableVerdict", "link" : "com\/khulnasoft\/spark\/connector\/cql\/MultipleRetryPolicy.html#onUnavailableVerdict(x$1:com.khulnasoft.oss.driver.api.core.session.Request,x$2:com.khulnasoft.oss.driver.api.core.ConsistencyLevel,x$3:Int,x$4:Int,x$5:Int):com.khulnasoft.oss.driver.api.core.retry.RetryVerdict", "kind" : "def"}, {"label" : "onWriteTimeoutVerdict", "tail" : "(arg0: Request, arg1: ConsistencyLevel, arg2: WriteType, arg3: Int, arg4: Int, arg5: Int): RetryVerdict", "member" : "com.khulnasoft.oss.driver.api.core.retry.RetryPolicy.onWriteTimeoutVerdict", "link" : "com\/khulnasoft\/spark\/connector\/cql\/MultipleRetryPolicy.html#onWriteTimeoutVerdict(x$1:com.khulnasoft.oss.driver.api.core.session.Request,x$2:com.khulnasoft.oss.driver.api.core.ConsistencyLevel,x$3:com.khulnasoft.oss.driver.api.core.servererrors.WriteType,x$4:Int,x$5:Int,x$6:Int):com.khulnasoft.oss.driver.api.core.retry.RetryVerdict", "kind" : "def"}, {"label" : "onReadTimeoutVerdict", "tail" : "(arg0: Request, arg1: ConsistencyLevel, arg2: Int, arg3: Int, arg4: Boolean, arg5: Int): RetryVerdict", "member" : "com.khulnasoft.oss.driver.api.core.retry.RetryPolicy.onReadTimeoutVerdict", "link" : "com\/khulnasoft\/spark\/connector\/cql\/MultipleRetryPolicy.html#onReadTimeoutVerdict(x$1:com.khulnasoft.oss.driver.api.core.session.Request,x$2:com.khulnasoft.oss.driver.api.core.ConsistencyLevel,x$3:Int,x$4:Int,x$5:Boolean,x$6:Int):com.khulnasoft.oss.driver.api.core.retry.RetryVerdict", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/cql\/MultipleRetryPolicy.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/cql\/MultipleRetryPolicy.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/cql\/MultipleRetryPolicy.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/cql\/MultipleRetryPolicy.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/cql\/MultipleRetryPolicy.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/cql\/MultipleRetryPolicy.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/cql\/MultipleRetryPolicy.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/cql\/MultipleRetryPolicy.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/cql\/MultipleRetryPolicy.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/cql\/MultipleRetryPolicy.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/cql\/MultipleRetryPolicy.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/cql\/MultipleRetryPolicy.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/khulnasoft\/spark\/connector\/cql\/MultipleRetryPolicy.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/cql\/MultipleRetryPolicy.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/khulnasoft\/spark\/connector\/cql\/MultipleRetryPolicy.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/khulnasoft\/spark\/connector\/cql\/MultipleRetryPolicy.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/cql\/MultipleRetryPolicy.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/cql\/MultipleRetryPolicy.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/cql\/MultipleRetryPolicy.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "MaxRetryCountDefault", "tail" : ": Int", "member" : "com.khulnasoft.spark.connector.cql.MultipleRetryPolicy.MaxRetryCountDefault", "link" : "com\/khulnasoft\/spark\/connector\/cql\/MultipleRetryPolicy$.html#MaxRetryCountDefault:Int", "kind" : "val"}, {"label" : "MaxRetryCount", "tail" : ": DriverOption", "member" : "com.khulnasoft.spark.connector.cql.MultipleRetryPolicy.MaxRetryCount", "link" : "com\/khulnasoft\/spark\/connector\/cql\/MultipleRetryPolicy$.html#MaxRetryCount:com.khulnasoft.oss.driver.api.core.config.DriverOption", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/cql\/MultipleRetryPolicy$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/cql\/MultipleRetryPolicy$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/cql\/MultipleRetryPolicy$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/cql\/MultipleRetryPolicy$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/cql\/MultipleRetryPolicy$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/cql\/MultipleRetryPolicy$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/cql\/MultipleRetryPolicy$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/cql\/MultipleRetryPolicy$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/cql\/MultipleRetryPolicy$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/cql\/MultipleRetryPolicy$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/cql\/MultipleRetryPolicy$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/cql\/MultipleRetryPolicy$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/khulnasoft\/spark\/connector\/cql\/MultipleRetryPolicy$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/cql\/MultipleRetryPolicy$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/khulnasoft\/spark\/connector\/cql\/MultipleRetryPolicy$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/khulnasoft\/spark\/connector\/cql\/MultipleRetryPolicy$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/cql\/MultipleRetryPolicy$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/cql\/MultipleRetryPolicy$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/cql\/MultipleRetryPolicy$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/khulnasoft\/spark\/connector\/cql\/MultipleRetryPolicy.html", "kind" : "class"}, {"name" : "com.khulnasoft.spark.connector.cql.MultiplexingSchemaListener", "shortDescription" : "Uses an internal TrieMap to collect incoming listeners based on their hashCodes.", "members_class" : [{"label" : "close", "tail" : "(): Unit", "member" : "com.khulnasoft.spark.connector.cql.MultiplexingSchemaListener.close", "link" : "com\/khulnasoft\/spark\/connector\/cql\/MultiplexingSchemaListener.html#close():Unit", "kind" : "def"}, {"label" : "onViewUpdated", "tail" : "(current: ViewMetadata, previous: ViewMetadata): Unit", "member" : "com.khulnasoft.spark.connector.cql.MultiplexingSchemaListener.onViewUpdated", "link" : "com\/khulnasoft\/spark\/connector\/cql\/MultiplexingSchemaListener.html#onViewUpdated(current:com.khulnasoft.oss.driver.api.core.metadata.schema.ViewMetadata,previous:com.khulnasoft.oss.driver.api.core.metadata.schema.ViewMetadata):Unit", "kind" : "def"}, {"label" : "onViewDropped", "tail" : "(view: ViewMetadata): Unit", "member" : "com.khulnasoft.spark.connector.cql.MultiplexingSchemaListener.onViewDropped", "link" : "com\/khulnasoft\/spark\/connector\/cql\/MultiplexingSchemaListener.html#onViewDropped(view:com.khulnasoft.oss.driver.api.core.metadata.schema.ViewMetadata):Unit", "kind" : "def"}, {"label" : "onViewCreated", "tail" : "(view: ViewMetadata): Unit", "member" : "com.khulnasoft.spark.connector.cql.MultiplexingSchemaListener.onViewCreated", "link" : "com\/khulnasoft\/spark\/connector\/cql\/MultiplexingSchemaListener.html#onViewCreated(view:com.khulnasoft.oss.driver.api.core.metadata.schema.ViewMetadata):Unit", "kind" : "def"}, {"label" : "onAggregateUpdated", "tail" : "(current: AggregateMetadata, previous: AggregateMetadata): Unit", "member" : "com.khulnasoft.spark.connector.cql.MultiplexingSchemaListener.onAggregateUpdated", "link" : "com\/khulnasoft\/spark\/connector\/cql\/MultiplexingSchemaListener.html#onAggregateUpdated(current:com.khulnasoft.oss.driver.api.core.metadata.schema.AggregateMetadata,previous:com.khulnasoft.oss.driver.api.core.metadata.schema.AggregateMetadata):Unit", "kind" : "def"}, {"label" : "onAggregateDropped", "tail" : "(aggregate: AggregateMetadata): Unit", "member" : "com.khulnasoft.spark.connector.cql.MultiplexingSchemaListener.onAggregateDropped", "link" : "com\/khulnasoft\/spark\/connector\/cql\/MultiplexingSchemaListener.html#onAggregateDropped(aggregate:com.khulnasoft.oss.driver.api.core.metadata.schema.AggregateMetadata):Unit", "kind" : "def"}, {"label" : "onAggregateCreated", "tail" : "(aggregate: AggregateMetadata): Unit", "member" : "com.khulnasoft.spark.connector.cql.MultiplexingSchemaListener.onAggregateCreated", "link" : "com\/khulnasoft\/spark\/connector\/cql\/MultiplexingSchemaListener.html#onAggregateCreated(aggregate:com.khulnasoft.oss.driver.api.core.metadata.schema.AggregateMetadata):Unit", "kind" : "def"}, {"label" : "onFunctionUpdated", "tail" : "(current: FunctionMetadata, previous: FunctionMetadata): Unit", "member" : "com.khulnasoft.spark.connector.cql.MultiplexingSchemaListener.onFunctionUpdated", "link" : "com\/khulnasoft\/spark\/connector\/cql\/MultiplexingSchemaListener.html#onFunctionUpdated(current:com.khulnasoft.oss.driver.api.core.metadata.schema.FunctionMetadata,previous:com.khulnasoft.oss.driver.api.core.metadata.schema.FunctionMetadata):Unit", "kind" : "def"}, {"label" : "onFunctionDropped", "tail" : "(function: FunctionMetadata): Unit", "member" : "com.khulnasoft.spark.connector.cql.MultiplexingSchemaListener.onFunctionDropped", "link" : "com\/khulnasoft\/spark\/connector\/cql\/MultiplexingSchemaListener.html#onFunctionDropped(function:com.khulnasoft.oss.driver.api.core.metadata.schema.FunctionMetadata):Unit", "kind" : "def"}, {"label" : "onFunctionCreated", "tail" : "(function: FunctionMetadata): Unit", "member" : "com.khulnasoft.spark.connector.cql.MultiplexingSchemaListener.onFunctionCreated", "link" : "com\/khulnasoft\/spark\/connector\/cql\/MultiplexingSchemaListener.html#onFunctionCreated(function:com.khulnasoft.oss.driver.api.core.metadata.schema.FunctionMetadata):Unit", "kind" : "def"}, {"label" : "onUserDefinedTypeUpdated", "tail" : "(current: UserDefinedType, previous: UserDefinedType): Unit", "member" : "com.khulnasoft.spark.connector.cql.MultiplexingSchemaListener.onUserDefinedTypeUpdated", "link" : "com\/khulnasoft\/spark\/connector\/cql\/MultiplexingSchemaListener.html#onUserDefinedTypeUpdated(current:com.khulnasoft.oss.driver.api.core.type.UserDefinedType,previous:com.khulnasoft.oss.driver.api.core.type.UserDefinedType):Unit", "kind" : "def"}, {"label" : "onUserDefinedTypeDropped", "tail" : "(type: UserDefinedType): Unit", "member" : "com.khulnasoft.spark.connector.cql.MultiplexingSchemaListener.onUserDefinedTypeDropped", "link" : "com\/khulnasoft\/spark\/connector\/cql\/MultiplexingSchemaListener.html#onUserDefinedTypeDropped(type:com.khulnasoft.oss.driver.api.core.type.UserDefinedType):Unit", "kind" : "def"}, {"label" : "onUserDefinedTypeCreated", "tail" : "(type: UserDefinedType): Unit", "member" : "com.khulnasoft.spark.connector.cql.MultiplexingSchemaListener.onUserDefinedTypeCreated", "link" : "com\/khulnasoft\/spark\/connector\/cql\/MultiplexingSchemaListener.html#onUserDefinedTypeCreated(type:com.khulnasoft.oss.driver.api.core.type.UserDefinedType):Unit", "kind" : "def"}, {"label" : "onTableUpdated", "tail" : "(current: TableMetadata, previous: TableMetadata): Unit", "member" : "com.khulnasoft.spark.connector.cql.MultiplexingSchemaListener.onTableUpdated", "link" : "com\/khulnasoft\/spark\/connector\/cql\/MultiplexingSchemaListener.html#onTableUpdated(current:com.khulnasoft.oss.driver.api.core.metadata.schema.TableMetadata,previous:com.khulnasoft.oss.driver.api.core.metadata.schema.TableMetadata):Unit", "kind" : "def"}, {"label" : "onTableDropped", "tail" : "(table: TableMetadata): Unit", "member" : "com.khulnasoft.spark.connector.cql.MultiplexingSchemaListener.onTableDropped", "link" : "com\/khulnasoft\/spark\/connector\/cql\/MultiplexingSchemaListener.html#onTableDropped(table:com.khulnasoft.oss.driver.api.core.metadata.schema.TableMetadata):Unit", "kind" : "def"}, {"label" : "onTableCreated", "tail" : "(table: TableMetadata): Unit", "member" : "com.khulnasoft.spark.connector.cql.MultiplexingSchemaListener.onTableCreated", "link" : "com\/khulnasoft\/spark\/connector\/cql\/MultiplexingSchemaListener.html#onTableCreated(table:com.khulnasoft.oss.driver.api.core.metadata.schema.TableMetadata):Unit", "kind" : "def"}, {"label" : "onKeyspaceUpdated", "tail" : "(current: KeyspaceMetadata, previous: KeyspaceMetadata): Unit", "member" : "com.khulnasoft.spark.connector.cql.MultiplexingSchemaListener.onKeyspaceUpdated", "link" : "com\/khulnasoft\/spark\/connector\/cql\/MultiplexingSchemaListener.html#onKeyspaceUpdated(current:com.khulnasoft.oss.driver.api.core.metadata.schema.KeyspaceMetadata,previous:com.khulnasoft.oss.driver.api.core.metadata.schema.KeyspaceMetadata):Unit", "kind" : "def"}, {"label" : "onKeyspaceDropped", "tail" : "(keyspace: KeyspaceMetadata): Unit", "member" : "com.khulnasoft.spark.connector.cql.MultiplexingSchemaListener.onKeyspaceDropped", "link" : "com\/khulnasoft\/spark\/connector\/cql\/MultiplexingSchemaListener.html#onKeyspaceDropped(keyspace:com.khulnasoft.oss.driver.api.core.metadata.schema.KeyspaceMetadata):Unit", "kind" : "def"}, {"label" : "onKeyspaceCreated", "tail" : "(keyspace: KeyspaceMetadata): Unit", "member" : "com.khulnasoft.spark.connector.cql.MultiplexingSchemaListener.onKeyspaceCreated", "link" : "com\/khulnasoft\/spark\/connector\/cql\/MultiplexingSchemaListener.html#onKeyspaceCreated(keyspace:com.khulnasoft.oss.driver.api.core.metadata.schema.KeyspaceMetadata):Unit", "kind" : "def"}, {"label" : "getListeners", "tail" : "(): Iterable[SchemaChangeListener]", "member" : "com.khulnasoft.spark.connector.cql.MultiplexingSchemaListener.getListeners", "link" : "com\/khulnasoft\/spark\/connector\/cql\/MultiplexingSchemaListener.html#getListeners():Iterable[com.khulnasoft.oss.driver.api.core.metadata.schema.SchemaChangeListener]", "kind" : "def"}, {"label" : "registeredListenerCount", "tail" : "(): Int", "member" : "com.khulnasoft.spark.connector.cql.MultiplexingSchemaListener.registeredListenerCount", "link" : "com\/khulnasoft\/spark\/connector\/cql\/MultiplexingSchemaListener.html#registeredListenerCount():Int", "kind" : "def"}, {"label" : "clearListeners", "tail" : "(): Unit", "member" : "com.khulnasoft.spark.connector.cql.MultiplexingSchemaListener.clearListeners", "link" : "com\/khulnasoft\/spark\/connector\/cql\/MultiplexingSchemaListener.html#clearListeners():Unit", "kind" : "def"}, {"label" : "removeListener", "tail" : "(listener: SchemaChangeListener): Option[SchemaChangeListener]", "member" : "com.khulnasoft.spark.connector.cql.MultiplexingSchemaListener.removeListener", "link" : "com\/khulnasoft\/spark\/connector\/cql\/MultiplexingSchemaListener.html#removeListener(listener:com.khulnasoft.oss.driver.api.core.metadata.schema.SchemaChangeListener):Option[com.khulnasoft.oss.driver.api.core.metadata.schema.SchemaChangeListener]", "kind" : "def"}, {"label" : "addListener", "tail" : "(listener: SchemaChangeListener): Option[SchemaChangeListener]", "member" : "com.khulnasoft.spark.connector.cql.MultiplexingSchemaListener.addListener", "link" : "com\/khulnasoft\/spark\/connector\/cql\/MultiplexingSchemaListener.html#addListener(listener:com.khulnasoft.oss.driver.api.core.metadata.schema.SchemaChangeListener):Option[com.khulnasoft.oss.driver.api.core.metadata.schema.SchemaChangeListener]", "kind" : "def"}, {"label" : "log", "tail" : ": Logger", "member" : "com.khulnasoft.spark.connector.cql.MultiplexingSchemaListener.log", "link" : "com\/khulnasoft\/spark\/connector\/cql\/MultiplexingSchemaListener.html#log:org.slf4j.Logger", "kind" : "val"}, {"member" : "com.khulnasoft.spark.connector.cql.MultiplexingSchemaListener#<init>", "error" : "unsupported entity"}, {"label" : "onSessionReady", "tail" : "(arg0: Session): Unit", "member" : "com.khulnasoft.oss.driver.api.core.metadata.schema.SchemaChangeListener.onSessionReady", "link" : "com\/khulnasoft\/spark\/connector\/cql\/MultiplexingSchemaListener.html#onSessionReady(x$1:com.khulnasoft.oss.driver.api.core.session.Session):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/cql\/MultiplexingSchemaListener.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/cql\/MultiplexingSchemaListener.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/cql\/MultiplexingSchemaListener.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/cql\/MultiplexingSchemaListener.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/cql\/MultiplexingSchemaListener.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/cql\/MultiplexingSchemaListener.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/cql\/MultiplexingSchemaListener.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/cql\/MultiplexingSchemaListener.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/cql\/MultiplexingSchemaListener.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/cql\/MultiplexingSchemaListener.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/cql\/MultiplexingSchemaListener.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/cql\/MultiplexingSchemaListener.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/khulnasoft\/spark\/connector\/cql\/MultiplexingSchemaListener.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/cql\/MultiplexingSchemaListener.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/khulnasoft\/spark\/connector\/cql\/MultiplexingSchemaListener.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/khulnasoft\/spark\/connector\/cql\/MultiplexingSchemaListener.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/cql\/MultiplexingSchemaListener.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/cql\/MultiplexingSchemaListener.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/cql\/MultiplexingSchemaListener.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/khulnasoft\/spark\/connector\/cql\/MultiplexingSchemaListener.html", "kind" : "class"}, {"name" : "com.khulnasoft.spark.connector.cql.PartitionKeyColumn", "shortDescription" : "", "object" : "com\/khulnasoft\/spark\/connector\/cql\/PartitionKeyColumn$.html", "members_object" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/cql\/PartitionKeyColumn$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/cql\/PartitionKeyColumn$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/cql\/PartitionKeyColumn$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/cql\/PartitionKeyColumn$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/cql\/PartitionKeyColumn$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/cql\/PartitionKeyColumn$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/cql\/PartitionKeyColumn$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/cql\/PartitionKeyColumn$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/cql\/PartitionKeyColumn$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/cql\/PartitionKeyColumn$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/cql\/PartitionKeyColumn$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/cql\/PartitionKeyColumn$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/cql\/PartitionKeyColumn$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/khulnasoft\/spark\/connector\/cql\/PartitionKeyColumn$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/cql\/PartitionKeyColumn$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/cql\/PartitionKeyColumn$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/cql\/PartitionKeyColumn$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.khulnasoft.spark.connector.cql.RegularColumn", "shortDescription" : "", "object" : "com\/khulnasoft\/spark\/connector\/cql\/RegularColumn$.html", "members_object" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/cql\/RegularColumn$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/cql\/RegularColumn$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/cql\/RegularColumn$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/cql\/RegularColumn$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/cql\/RegularColumn$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/cql\/RegularColumn$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/cql\/RegularColumn$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/cql\/RegularColumn$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/cql\/RegularColumn$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/cql\/RegularColumn$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/cql\/RegularColumn$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/cql\/RegularColumn$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/cql\/RegularColumn$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/khulnasoft\/spark\/connector\/cql\/RegularColumn$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/cql\/RegularColumn$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/cql\/RegularColumn$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/cql\/RegularColumn$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.khulnasoft.spark.connector.cql.Schema", "shortDescription" : "", "object" : "com\/khulnasoft\/spark\/connector\/cql\/Schema$.html", "members_object" : [{"label" : "tableFromCassandra", "tail" : "(session: CqlSession, keyspaceName: String, tableName: String): TableDef", "member" : "com.khulnasoft.spark.connector.cql.Schema.tableFromCassandra", "link" : "com\/khulnasoft\/spark\/connector\/cql\/Schema$.html#tableFromCassandra(session:com.khulnasoft.oss.driver.api.core.CqlSession,keyspaceName:String,tableName:String):com.khulnasoft.spark.connector.cql.TableDef", "kind" : "def"}, {"label" : "fromCassandra", "tail" : "(session: CqlSession, keyspaceName: Option[String], tableName: Option[String]): Schema", "member" : "com.khulnasoft.spark.connector.cql.Schema.fromCassandra", "link" : "com\/khulnasoft\/spark\/connector\/cql\/Schema$.html#fromCassandra(session:com.khulnasoft.oss.driver.api.core.CqlSession,keyspaceName:Option[String],tableName:Option[String]):com.khulnasoft.spark.connector.cql.Schema", "kind" : "def"}, {"label" : "fetchKeyspace", "tail" : "(keyspace: KeyspaceMetadata, selectedTable: Option[String]): KeyspaceDef", "member" : "com.khulnasoft.spark.connector.cql.Schema.fetchKeyspace", "link" : "com\/khulnasoft\/spark\/connector\/cql\/Schema$.html#fetchKeyspace(keyspace:com.khulnasoft.oss.driver.api.core.metadata.schema.KeyspaceMetadata,selectedTable:Option[String]):com.khulnasoft.spark.connector.cql.KeyspaceDef", "kind" : "def"}, {"label" : "fetchUserType", "tail" : "(driverUserType: UserDefinedType): UserDefinedType", "member" : "com.khulnasoft.spark.connector.cql.Schema.fetchUserType", "link" : "com\/khulnasoft\/spark\/connector\/cql\/Schema$.html#fetchUserType(driverUserType:com.khulnasoft.oss.driver.api.core.type.UserDefinedType):com.khulnasoft.spark.connector.types.UserDefinedType", "kind" : "def"}, {"label" : "fetchTable", "tail" : "(keyspace: CqlIdentifier, table: RelationMetadata): TableDef", "member" : "com.khulnasoft.spark.connector.cql.Schema.fetchTable", "link" : "com\/khulnasoft\/spark\/connector\/cql\/Schema$.html#fetchTable(keyspace:com.khulnasoft.oss.driver.api.core.CqlIdentifier,table:com.khulnasoft.oss.driver.api.core.metadata.schema.RelationMetadata):com.khulnasoft.spark.connector.cql.TableDef", "kind" : "def"}, {"label" : "isTraceEnabled", "tail" : "(): Boolean", "member" : "com.khulnasoft.spark.connector.util.Logging.isTraceEnabled", "link" : "com\/khulnasoft\/spark\/connector\/cql\/Schema$.html#isTraceEnabled():Boolean", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "com.khulnasoft.spark.connector.util.Logging.logError", "link" : "com\/khulnasoft\/spark\/connector\/cql\/Schema$.html#logError(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "com.khulnasoft.spark.connector.util.Logging.logWarning", "link" : "com\/khulnasoft\/spark\/connector\/cql\/Schema$.html#logWarning(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "com.khulnasoft.spark.connector.util.Logging.logTrace", "link" : "com\/khulnasoft\/spark\/connector\/cql\/Schema$.html#logTrace(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "com.khulnasoft.spark.connector.util.Logging.logDebug", "link" : "com\/khulnasoft\/spark\/connector\/cql\/Schema$.html#logDebug(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "com.khulnasoft.spark.connector.util.Logging.logInfo", "link" : "com\/khulnasoft\/spark\/connector\/cql\/Schema$.html#logInfo(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String): Unit", "member" : "com.khulnasoft.spark.connector.util.Logging.logError", "link" : "com\/khulnasoft\/spark\/connector\/cql\/Schema$.html#logError(msg:=>String):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String): Unit", "member" : "com.khulnasoft.spark.connector.util.Logging.logWarning", "link" : "com\/khulnasoft\/spark\/connector\/cql\/Schema$.html#logWarning(msg:=>String):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String): Unit", "member" : "com.khulnasoft.spark.connector.util.Logging.logTrace", "link" : "com\/khulnasoft\/spark\/connector\/cql\/Schema$.html#logTrace(msg:=>String):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String): Unit", "member" : "com.khulnasoft.spark.connector.util.Logging.logDebug", "link" : "com\/khulnasoft\/spark\/connector\/cql\/Schema$.html#logDebug(msg:=>String):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String): Unit", "member" : "com.khulnasoft.spark.connector.util.Logging.logInfo", "link" : "com\/khulnasoft\/spark\/connector\/cql\/Schema$.html#logInfo(msg:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "com.khulnasoft.spark.connector.util.Logging.log", "link" : "com\/khulnasoft\/spark\/connector\/cql\/Schema$.html#log:org.slf4j.Logger", "kind" : "def"}, {"label" : "logName", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.util.Logging.logName", "link" : "com\/khulnasoft\/spark\/connector\/cql\/Schema$.html#logName:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/cql\/Schema$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/cql\/Schema$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/cql\/Schema$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/cql\/Schema$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/cql\/Schema$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/cql\/Schema$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/cql\/Schema$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/cql\/Schema$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/cql\/Schema$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/cql\/Schema$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/cql\/Schema$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/cql\/Schema$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/khulnasoft\/spark\/connector\/cql\/Schema$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/cql\/Schema$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/khulnasoft\/spark\/connector\/cql\/Schema$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/khulnasoft\/spark\/connector\/cql\/Schema$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/cql\/Schema$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/cql\/Schema$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/cql\/Schema$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "tables", "tail" : ": Set[TableDef]", "member" : "com.khulnasoft.spark.connector.cql.Schema.tables", "link" : "com\/khulnasoft\/spark\/connector\/cql\/Schema.html#tables:Set[com.khulnasoft.spark.connector.cql.TableDef]", "kind" : "lazy val"}, {"label" : "keyspaceByName", "tail" : ": Map[String, KeyspaceDef]", "member" : "com.khulnasoft.spark.connector.cql.Schema.keyspaceByName", "link" : "com\/khulnasoft\/spark\/connector\/cql\/Schema.html#keyspaceByName:Map[String,com.khulnasoft.spark.connector.cql.KeyspaceDef]", "kind" : "lazy val"}, {"member" : "com.khulnasoft.spark.connector.cql.Schema#<init>", "error" : "unsupported entity"}, {"label" : "keyspaces", "tail" : ": Set[KeyspaceDef]", "member" : "com.khulnasoft.spark.connector.cql.Schema.keyspaces", "link" : "com\/khulnasoft\/spark\/connector\/cql\/Schema.html#keyspaces:Set[com.khulnasoft.spark.connector.cql.KeyspaceDef]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/cql\/Schema.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/cql\/Schema.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/cql\/Schema.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/cql\/Schema.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/cql\/Schema.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/cql\/Schema.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/cql\/Schema.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/cql\/Schema.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/cql\/Schema.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/cql\/Schema.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/cql\/Schema.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/cql\/Schema.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/cql\/Schema.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/cql\/Schema.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/cql\/Schema.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/cql\/Schema.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/khulnasoft\/spark\/connector\/cql\/Schema.html", "kind" : "case class"}, {"name" : "com.khulnasoft.spark.connector.cql.StaticColumn", "shortDescription" : "", "object" : "com\/khulnasoft\/spark\/connector\/cql\/StaticColumn$.html", "members_object" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/cql\/StaticColumn$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/cql\/StaticColumn$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/cql\/StaticColumn$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/cql\/StaticColumn$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/cql\/StaticColumn$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/cql\/StaticColumn$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/cql\/StaticColumn$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/cql\/StaticColumn$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/cql\/StaticColumn$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/cql\/StaticColumn$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/cql\/StaticColumn$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/cql\/StaticColumn$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/cql\/StaticColumn$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/khulnasoft\/spark\/connector\/cql\/StaticColumn$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/cql\/StaticColumn$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/cql\/StaticColumn$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/cql\/StaticColumn$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.khulnasoft.spark.connector.cql.StructDef", "members_trait" : [{"label" : "missingColumns", "tail" : "(columnsToCheck: Seq[ColumnRef]): Seq[ColumnRef]", "member" : "com.khulnasoft.spark.connector.cql.StructDef.missingColumns", "link" : "com\/khulnasoft\/spark\/connector\/cql\/StructDef.html#missingColumns(columnsToCheck:Seq[com.khulnasoft.spark.connector.ColumnRef]):Seq[com.khulnasoft.spark.connector.ColumnRef]", "kind" : "def"}, {"label" : "columnByIndex", "tail" : "(index: Int): Column", "member" : "com.khulnasoft.spark.connector.cql.StructDef.columnByIndex", "link" : "com\/khulnasoft\/spark\/connector\/cql\/StructDef.html#columnByIndex(index:Int):StructDef.this.Column", "kind" : "def"}, {"label" : "columnByName", "tail" : "(): Map[String, Column]", "member" : "com.khulnasoft.spark.connector.cql.StructDef.columnByName", "link" : "com\/khulnasoft\/spark\/connector\/cql\/StructDef.html#columnByName:Map[String,StructDef.this.Column]", "kind" : "def"}, {"label" : "columnTypes", "tail" : ": IndexedSeq[ColumnType[_]]", "member" : "com.khulnasoft.spark.connector.cql.StructDef.columnTypes", "link" : "com\/khulnasoft\/spark\/connector\/cql\/StructDef.html#columnTypes:IndexedSeq[com.khulnasoft.spark.connector.types.ColumnType[_]]", "kind" : "lazy val"}, {"label" : "columnNames", "tail" : ": IndexedSeq[String]", "member" : "com.khulnasoft.spark.connector.cql.StructDef.columnNames", "link" : "com\/khulnasoft\/spark\/connector\/cql\/StructDef.html#columnNames:IndexedSeq[String]", "kind" : "lazy val"}, {"label" : "columnRefs", "tail" : ": IndexedSeq[ColumnRef]", "member" : "com.khulnasoft.spark.connector.cql.StructDef.columnRefs", "link" : "com\/khulnasoft\/spark\/connector\/cql\/StructDef.html#columnRefs:IndexedSeq[com.khulnasoft.spark.connector.ColumnRef]", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/cql\/StructDef.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/cql\/StructDef.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/cql\/StructDef.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/cql\/StructDef.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/cql\/StructDef.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/cql\/StructDef.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/cql\/StructDef.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/cql\/StructDef.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/cql\/StructDef.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/cql\/StructDef.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/cql\/StructDef.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/cql\/StructDef.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/khulnasoft\/spark\/connector\/cql\/StructDef.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/cql\/StructDef.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/khulnasoft\/spark\/connector\/cql\/StructDef.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/khulnasoft\/spark\/connector\/cql\/StructDef.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/cql\/StructDef.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/cql\/StructDef.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/cql\/StructDef.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "newInstance", "tail" : "(columnValues: Any*): ValueRepr", "member" : "com.khulnasoft.spark.connector.cql.StructDef.newInstance", "link" : "com\/khulnasoft\/spark\/connector\/cql\/StructDef.html#newInstance(columnValues:Any*):StructDef.this.ValueRepr", "kind" : "abstract def"}, {"member" : "com.khulnasoft.spark.connector.cql.StructDef.ValueRepr", "error" : "unsupported entity"}, {"label" : "columns", "tail" : ": IndexedSeq[Column]", "member" : "com.khulnasoft.spark.connector.cql.StructDef.columns", "link" : "com\/khulnasoft\/spark\/connector\/cql\/StructDef.html#columns:IndexedSeq[StructDef.this.Column]", "kind" : "abstract val"}, {"label" : "name", "tail" : ": String", "member" : "com.khulnasoft.spark.connector.cql.StructDef.name", "link" : "com\/khulnasoft\/spark\/connector\/cql\/StructDef.html#name:String", "kind" : "abstract val"}, {"member" : "com.khulnasoft.spark.connector.cql.StructDef.Column", "error" : "unsupported entity"}], "shortDescription" : "Cassandra structure that contains columnar information, e.g.", "trait" : "com\/khulnasoft\/spark\/connector\/cql\/StructDef.html", "kind" : "trait"}, {"name" : "com.khulnasoft.spark.connector.cql.TableDef", "shortDescription" : "A Cassandra table metadata that can be serialized.", "object" : "com\/khulnasoft\/spark\/connector\/cql\/TableDef$.html", "members_object" : [{"label" : "fromType", "tail" : "(keyspaceName: String, tableName: String, protocolVersion: ProtocolVersion)(arg0: ColumnMapper[T]): TableDef", "member" : "com.khulnasoft.spark.connector.cql.TableDef.fromType", "link" : "com\/khulnasoft\/spark\/connector\/cql\/TableDef$.html#fromType[T](keyspaceName:String,tableName:String,protocolVersion:com.khulnasoft.oss.driver.api.core.ProtocolVersion)(implicitevidence$1:com.khulnasoft.spark.connector.mapper.ColumnMapper[T]):com.khulnasoft.spark.connector.cql.TableDef", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/cql\/TableDef$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/cql\/TableDef$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/cql\/TableDef$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/cql\/TableDef$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/cql\/TableDef$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/cql\/TableDef$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/cql\/TableDef$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/cql\/TableDef$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/cql\/TableDef$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/cql\/TableDef$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/cql\/TableDef$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/cql\/TableDef$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/khulnasoft\/spark\/connector\/cql\/TableDef$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/cql\/TableDef$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/khulnasoft\/spark\/connector\/cql\/TableDef$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/khulnasoft\/spark\/connector\/cql\/TableDef$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/cql\/TableDef$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/cql\/TableDef$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/cql\/TableDef$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "newInstance", "tail" : "(columnValues: Any*): CassandraRow", "member" : "com.khulnasoft.spark.connector.cql.TableDef.newInstance", "link" : "com\/khulnasoft\/spark\/connector\/cql\/TableDef.html#newInstance(columnValues:Any*):com.khulnasoft.spark.connector.CassandraRow", "kind" : "def"}, {"label" : "rowMetadata", "tail" : ": CassandraRowMetadata", "member" : "com.khulnasoft.spark.connector.cql.TableDef.rowMetadata", "link" : "com\/khulnasoft\/spark\/connector\/cql\/TableDef.html#rowMetadata:com.khulnasoft.spark.connector.CassandraRowMetadata", "kind" : "lazy val"}, {"label" : "ValueRepr", "tail" : "", "member" : "com.khulnasoft.spark.connector.cql.TableDef.ValueRepr", "link" : "com\/khulnasoft\/spark\/connector\/cql\/TableDef.html#ValueRepr=com.khulnasoft.spark.connector.CassandraRow", "kind" : "type"}, {"label" : "cql", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.cql.TableDef.cql", "link" : "com\/khulnasoft\/spark\/connector\/cql\/TableDef.html#cql:String", "kind" : "def"}, {"label" : "columnByNameIgnoreCase", "tail" : "(columnName: String): ColumnDef", "member" : "com.khulnasoft.spark.connector.cql.TableDef.columnByNameIgnoreCase", "link" : "com\/khulnasoft\/spark\/connector\/cql\/TableDef.html#columnByNameIgnoreCase(columnName:String):com.khulnasoft.spark.connector.cql.ColumnDef", "kind" : "def"}, {"label" : "columnByName", "tail" : ": Map[String, ColumnDef]", "member" : "com.khulnasoft.spark.connector.cql.TableDef.columnByName", "link" : "com\/khulnasoft\/spark\/connector\/cql\/TableDef.html#columnByName:Map[String,com.khulnasoft.spark.connector.cql.ColumnDef]", "kind" : "lazy val"}, {"label" : "columns", "tail" : ": IndexedSeq[ColumnDef]", "member" : "com.khulnasoft.spark.connector.cql.TableDef.columns", "link" : "com\/khulnasoft\/spark\/connector\/cql\/TableDef.html#columns:IndexedSeq[com.khulnasoft.spark.connector.cql.ColumnDef]", "kind" : "lazy val"}, {"label" : "primaryKey", "tail" : ": IndexedSeq[ColumnDef]", "member" : "com.khulnasoft.spark.connector.cql.TableDef.primaryKey", "link" : "com\/khulnasoft\/spark\/connector\/cql\/TableDef.html#primaryKey:IndexedSeq[com.khulnasoft.spark.connector.cql.ColumnDef]", "kind" : "lazy val"}, {"label" : "name", "tail" : ": String", "member" : "com.khulnasoft.spark.connector.cql.TableDef.name", "link" : "com\/khulnasoft\/spark\/connector\/cql\/TableDef.html#name:String", "kind" : "val"}, {"label" : "Column", "tail" : "", "member" : "com.khulnasoft.spark.connector.cql.TableDef.Column", "link" : "com\/khulnasoft\/spark\/connector\/cql\/TableDef.html#Column=com.khulnasoft.spark.connector.cql.ColumnDef", "kind" : "type"}, {"label" : "indexedColumns", "tail" : ": Seq[ColumnDef]", "member" : "com.khulnasoft.spark.connector.cql.TableDef.indexedColumns", "link" : "com\/khulnasoft\/spark\/connector\/cql\/TableDef.html#indexedColumns:Seq[com.khulnasoft.spark.connector.cql.ColumnDef]", "kind" : "val"}, {"label" : "isIndexed", "tail" : "(column: ColumnDef): Boolean", "member" : "com.khulnasoft.spark.connector.cql.TableDef.isIndexed", "link" : "com\/khulnasoft\/spark\/connector\/cql\/TableDef.html#isIndexed(column:com.khulnasoft.spark.connector.cql.ColumnDef):Boolean", "kind" : "def"}, {"label" : "isIndexed", "tail" : "(column: String): Boolean", "member" : "com.khulnasoft.spark.connector.cql.TableDef.isIndexed", "link" : "com\/khulnasoft\/spark\/connector\/cql\/TableDef.html#isIndexed(column:String):Boolean", "kind" : "def"}, {"label" : "allColumns", "tail" : ": Seq[ColumnDef]", "member" : "com.khulnasoft.spark.connector.cql.TableDef.allColumns", "link" : "com\/khulnasoft\/spark\/connector\/cql\/TableDef.html#allColumns:Seq[com.khulnasoft.spark.connector.cql.ColumnDef]", "kind" : "val"}, {"member" : "com.khulnasoft.spark.connector.cql.TableDef#<init>", "error" : "unsupported entity"}, {"label" : "tableOptions", "tail" : ": Map[String, String]", "member" : "com.khulnasoft.spark.connector.cql.TableDef.tableOptions", "link" : "com\/khulnasoft\/spark\/connector\/cql\/TableDef.html#tableOptions:Map[String,String]", "kind" : "val"}, {"label" : "ifNotExists", "tail" : ": Boolean", "member" : "com.khulnasoft.spark.connector.cql.TableDef.ifNotExists", "link" : "com\/khulnasoft\/spark\/connector\/cql\/TableDef.html#ifNotExists:Boolean", "kind" : "val"}, {"label" : "isView", "tail" : ": Boolean", "member" : "com.khulnasoft.spark.connector.cql.TableDef.isView", "link" : "com\/khulnasoft\/spark\/connector\/cql\/TableDef.html#isView:Boolean", "kind" : "val"}, {"label" : "indexes", "tail" : ": Seq[IndexDef]", "member" : "com.khulnasoft.spark.connector.cql.TableDef.indexes", "link" : "com\/khulnasoft\/spark\/connector\/cql\/TableDef.html#indexes:Seq[com.khulnasoft.spark.connector.cql.IndexDef]", "kind" : "val"}, {"label" : "regularColumns", "tail" : ": Seq[ColumnDef]", "member" : "com.khulnasoft.spark.connector.cql.TableDef.regularColumns", "link" : "com\/khulnasoft\/spark\/connector\/cql\/TableDef.html#regularColumns:Seq[com.khulnasoft.spark.connector.cql.ColumnDef]", "kind" : "val"}, {"label" : "clusteringColumns", "tail" : ": Seq[ColumnDef]", "member" : "com.khulnasoft.spark.connector.cql.TableDef.clusteringColumns", "link" : "com\/khulnasoft\/spark\/connector\/cql\/TableDef.html#clusteringColumns:Seq[com.khulnasoft.spark.connector.cql.ColumnDef]", "kind" : "val"}, {"label" : "partitionKey", "tail" : ": Seq[ColumnDef]", "member" : "com.khulnasoft.spark.connector.cql.TableDef.partitionKey", "link" : "com\/khulnasoft\/spark\/connector\/cql\/TableDef.html#partitionKey:Seq[com.khulnasoft.spark.connector.cql.ColumnDef]", "kind" : "val"}, {"label" : "tableName", "tail" : ": String", "member" : "com.khulnasoft.spark.connector.cql.TableDef.tableName", "link" : "com\/khulnasoft\/spark\/connector\/cql\/TableDef.html#tableName:String", "kind" : "val"}, {"label" : "keyspaceName", "tail" : ": String", "member" : "com.khulnasoft.spark.connector.cql.TableDef.keyspaceName", "link" : "com\/khulnasoft\/spark\/connector\/cql\/TableDef.html#keyspaceName:String", "kind" : "val"}, {"label" : "missingColumns", "tail" : "(columnsToCheck: Seq[ColumnRef]): Seq[ColumnRef]", "member" : "com.khulnasoft.spark.connector.cql.StructDef.missingColumns", "link" : "com\/khulnasoft\/spark\/connector\/cql\/TableDef.html#missingColumns(columnsToCheck:Seq[com.khulnasoft.spark.connector.ColumnRef]):Seq[com.khulnasoft.spark.connector.ColumnRef]", "kind" : "def"}, {"label" : "columnByIndex", "tail" : "(index: Int): Column", "member" : "com.khulnasoft.spark.connector.cql.StructDef.columnByIndex", "link" : "com\/khulnasoft\/spark\/connector\/cql\/TableDef.html#columnByIndex(index:Int):StructDef.this.Column", "kind" : "def"}, {"label" : "columnTypes", "tail" : ": IndexedSeq[ColumnType[_]]", "member" : "com.khulnasoft.spark.connector.cql.StructDef.columnTypes", "link" : "com\/khulnasoft\/spark\/connector\/cql\/TableDef.html#columnTypes:IndexedSeq[com.khulnasoft.spark.connector.types.ColumnType[_]]", "kind" : "lazy val"}, {"label" : "columnNames", "tail" : ": IndexedSeq[String]", "member" : "com.khulnasoft.spark.connector.cql.StructDef.columnNames", "link" : "com\/khulnasoft\/spark\/connector\/cql\/TableDef.html#columnNames:IndexedSeq[String]", "kind" : "lazy val"}, {"label" : "columnRefs", "tail" : ": IndexedSeq[ColumnRef]", "member" : "com.khulnasoft.spark.connector.cql.StructDef.columnRefs", "link" : "com\/khulnasoft\/spark\/connector\/cql\/TableDef.html#columnRefs:IndexedSeq[com.khulnasoft.spark.connector.ColumnRef]", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/cql\/TableDef.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/cql\/TableDef.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/cql\/TableDef.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/cql\/TableDef.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/cql\/TableDef.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/cql\/TableDef.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/cql\/TableDef.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/cql\/TableDef.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/cql\/TableDef.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/cql\/TableDef.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/cql\/TableDef.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/cql\/TableDef.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/cql\/TableDef.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/cql\/TableDef.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/cql\/TableDef.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/cql\/TableDef.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/khulnasoft\/spark\/connector\/cql\/TableDef.html", "kind" : "case class"}], "com" : [], "com.khulnasoft.spark.connector" : [{"name" : "com.khulnasoft.spark.connector.CassandraRow", "shortDescription" : "Represents a single row fetched from Cassandra.", "object" : "com\/khulnasoft\/spark\/connector\/CassandraRow$.html", "members_class" : [{"label" : "toString", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.CassandraRow.toString", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow.html#toString():String", "kind" : "def"}, {"member" : "com.khulnasoft.spark.connector.CassandraRow#<init>", "error" : "unsupported entity"}, {"member" : "com.khulnasoft.spark.connector.CassandraRow#<init>", "error" : "unsupported entity"}, {"label" : "columnValues", "tail" : ": IndexedSeq[AnyRef]", "member" : "com.khulnasoft.spark.connector.CassandraRow.columnValues", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow.html#columnValues:IndexedSeq[AnyRef]", "kind" : "val"}, {"label" : "metaData", "tail" : ": CassandraRowMetadata", "member" : "com.khulnasoft.spark.connector.CassandraRow.metaData", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow.html#metaData:com.khulnasoft.spark.connector.CassandraRowMetadata", "kind" : "val"}, {"label" : "copy", "tail" : "(): ScalaGettableData", "member" : "com.khulnasoft.spark.connector.ScalaGettableData.copy", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow.html#copy:com.khulnasoft.spark.connector.ScalaGettableData", "kind" : "def"}, {"label" : "getMap", "tail" : "(name: String)(arg0: TypeConverter[K], arg1: TypeConverter[V]): Map[K, V]", "member" : "com.khulnasoft.spark.connector.ScalaGettableData.getMap", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow.html#getMap[K,V](name:String)(implicitevidence$3:com.khulnasoft.spark.connector.types.TypeConverter[K],implicitevidence$4:com.khulnasoft.spark.connector.types.TypeConverter[V]):Map[K,V]", "kind" : "def"}, {"label" : "getSet", "tail" : "(name: String)(arg0: TypeConverter[T]): Set[T]", "member" : "com.khulnasoft.spark.connector.ScalaGettableData.getSet", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow.html#getSet[T](name:String)(implicitevidence$2:com.khulnasoft.spark.connector.types.TypeConverter[T]):Set[T]", "kind" : "def"}, {"label" : "getList", "tail" : "(name: String)(arg0: TypeConverter[T]): Vector[T]", "member" : "com.khulnasoft.spark.connector.ScalaGettableData.getList", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow.html#getList[T](name:String)(implicitevidence$1:com.khulnasoft.spark.connector.types.TypeConverter[T]):Vector[T]", "kind" : "def"}, {"label" : "getTupleValueOption", "tail" : "(name: String): Option[TupleValue]", "member" : "com.khulnasoft.spark.connector.ScalaGettableData.getTupleValueOption", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow.html#getTupleValueOption(name:String):Option[com.khulnasoft.spark.connector.TupleValue]", "kind" : "def"}, {"label" : "getTupleValue", "tail" : "(name: String): TupleValue", "member" : "com.khulnasoft.spark.connector.ScalaGettableData.getTupleValue", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow.html#getTupleValue(name:String):com.khulnasoft.spark.connector.TupleValue", "kind" : "def"}, {"label" : "getUDTValueOption", "tail" : "(name: String): Option[UDTValue]", "member" : "com.khulnasoft.spark.connector.ScalaGettableData.getUDTValueOption", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow.html#getUDTValueOption(name:String):Option[com.khulnasoft.spark.connector.UDTValue]", "kind" : "def"}, {"label" : "getUDTValue", "tail" : "(name: String): UDTValue", "member" : "com.khulnasoft.spark.connector.ScalaGettableData.getUDTValue", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow.html#getUDTValue(name:String):com.khulnasoft.spark.connector.UDTValue", "kind" : "def"}, {"label" : "getInetOption", "tail" : "(name: String): Option[InetAddress]", "member" : "com.khulnasoft.spark.connector.ScalaGettableData.getInetOption", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow.html#getInetOption(name:String):Option[java.net.InetAddress]", "kind" : "def"}, {"label" : "getInet", "tail" : "(name: String): InetAddress", "member" : "com.khulnasoft.spark.connector.ScalaGettableData.getInet", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow.html#getInet(name:String):java.net.InetAddress", "kind" : "def"}, {"label" : "getUUIDOption", "tail" : "(name: String): Option[UUID]", "member" : "com.khulnasoft.spark.connector.ScalaGettableData.getUUIDOption", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow.html#getUUIDOption(name:String):Option[java.util.UUID]", "kind" : "def"}, {"label" : "getUUID", "tail" : "(name: String): UUID", "member" : "com.khulnasoft.spark.connector.ScalaGettableData.getUUID", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow.html#getUUID(name:String):java.util.UUID", "kind" : "def"}, {"label" : "getDecimalOption", "tail" : "(name: String): Option[BigDecimal]", "member" : "com.khulnasoft.spark.connector.ScalaGettableData.getDecimalOption", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow.html#getDecimalOption(name:String):Option[BigDecimal]", "kind" : "def"}, {"label" : "getDecimal", "tail" : "(name: String): BigDecimal", "member" : "com.khulnasoft.spark.connector.ScalaGettableData.getDecimal", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow.html#getDecimal(name:String):BigDecimal", "kind" : "def"}, {"label" : "getVarIntOption", "tail" : "(name: String): Option[BigInt]", "member" : "com.khulnasoft.spark.connector.ScalaGettableData.getVarIntOption", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow.html#getVarIntOption(name:String):Option[BigInt]", "kind" : "def"}, {"label" : "getVarInt", "tail" : "(name: String): BigInt", "member" : "com.khulnasoft.spark.connector.ScalaGettableData.getVarInt", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow.html#getVarInt(name:String):BigInt", "kind" : "def"}, {"label" : "getDateOption", "tail" : "(name: String): Option[Date]", "member" : "com.khulnasoft.spark.connector.ScalaGettableData.getDateOption", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow.html#getDateOption(name:String):Option[java.util.Date]", "kind" : "def"}, {"label" : "getDate", "tail" : "(name: String): Date", "member" : "com.khulnasoft.spark.connector.ScalaGettableData.getDate", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow.html#getDate(name:String):java.util.Date", "kind" : "def"}, {"label" : "getBytesOption", "tail" : "(name: String): Option[ByteBuffer]", "member" : "com.khulnasoft.spark.connector.ScalaGettableData.getBytesOption", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow.html#getBytesOption(name:String):Option[java.nio.ByteBuffer]", "kind" : "def"}, {"label" : "getBytes", "tail" : "(name: String): ByteBuffer", "member" : "com.khulnasoft.spark.connector.ScalaGettableData.getBytes", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow.html#getBytes(name:String):java.nio.ByteBuffer", "kind" : "def"}, {"label" : "getStringOption", "tail" : "(name: String): Option[String]", "member" : "com.khulnasoft.spark.connector.ScalaGettableData.getStringOption", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow.html#getStringOption(name:String):Option[String]", "kind" : "def"}, {"label" : "getString", "tail" : "(name: String): String", "member" : "com.khulnasoft.spark.connector.ScalaGettableData.getString", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow.html#getString(name:String):String", "kind" : "def"}, {"label" : "getDoubleOption", "tail" : "(name: String): Option[Double]", "member" : "com.khulnasoft.spark.connector.ScalaGettableData.getDoubleOption", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow.html#getDoubleOption(name:String):Option[Double]", "kind" : "def"}, {"label" : "getDouble", "tail" : "(name: String): Double", "member" : "com.khulnasoft.spark.connector.ScalaGettableData.getDouble", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow.html#getDouble(name:String):Double", "kind" : "def"}, {"label" : "getFloatOption", "tail" : "(name: String): Option[Float]", "member" : "com.khulnasoft.spark.connector.ScalaGettableData.getFloatOption", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow.html#getFloatOption(name:String):Option[Float]", "kind" : "def"}, {"label" : "getFloat", "tail" : "(name: String): Float", "member" : "com.khulnasoft.spark.connector.ScalaGettableData.getFloat", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow.html#getFloat(name:String):Float", "kind" : "def"}, {"label" : "getLongOption", "tail" : "(name: String): Option[Long]", "member" : "com.khulnasoft.spark.connector.ScalaGettableData.getLongOption", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow.html#getLongOption(name:String):Option[Long]", "kind" : "def"}, {"label" : "getLong", "tail" : "(name: String): Long", "member" : "com.khulnasoft.spark.connector.ScalaGettableData.getLong", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow.html#getLong(name:String):Long", "kind" : "def"}, {"label" : "getIntOption", "tail" : "(name: String): Option[Int]", "member" : "com.khulnasoft.spark.connector.ScalaGettableData.getIntOption", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow.html#getIntOption(name:String):Option[Int]", "kind" : "def"}, {"label" : "getInt", "tail" : "(name: String): Int", "member" : "com.khulnasoft.spark.connector.ScalaGettableData.getInt", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow.html#getInt(name:String):Int", "kind" : "def"}, {"label" : "getShortOption", "tail" : "(name: String): Option[Short]", "member" : "com.khulnasoft.spark.connector.ScalaGettableData.getShortOption", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow.html#getShortOption(name:String):Option[Short]", "kind" : "def"}, {"label" : "getShort", "tail" : "(name: String): Short", "member" : "com.khulnasoft.spark.connector.ScalaGettableData.getShort", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow.html#getShort(name:String):Short", "kind" : "def"}, {"label" : "getByteOption", "tail" : "(name: String): Option[Byte]", "member" : "com.khulnasoft.spark.connector.ScalaGettableData.getByteOption", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow.html#getByteOption(name:String):Option[Byte]", "kind" : "def"}, {"label" : "getByte", "tail" : "(name: String): Byte", "member" : "com.khulnasoft.spark.connector.ScalaGettableData.getByte", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow.html#getByte(name:String):Byte", "kind" : "def"}, {"label" : "getBooleanOption", "tail" : "(name: String): Option[Boolean]", "member" : "com.khulnasoft.spark.connector.ScalaGettableData.getBooleanOption", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow.html#getBooleanOption(name:String):Option[Boolean]", "kind" : "def"}, {"label" : "getBoolean", "tail" : "(name: String): Boolean", "member" : "com.khulnasoft.spark.connector.ScalaGettableData.getBoolean", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow.html#getBoolean(name:String):Boolean", "kind" : "def"}, {"label" : "get", "tail" : "(name: String)(c: TypeConverter[T]): T", "member" : "com.khulnasoft.spark.connector.ScalaGettableData.get", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow.html#get[T](name:String)(implicitc:com.khulnasoft.spark.connector.types.TypeConverter[T]):T", "kind" : "def"}, {"label" : "toMap", "tail" : "(): Map[String, Any]", "member" : "com.khulnasoft.spark.connector.ScalaGettableData.toMap", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow.html#toMap:Map[String,Any]", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "com.khulnasoft.spark.connector.GettableData.hashCode", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow.html#hashCode():Int", "kind" : "def"}, {"label" : "equals", "tail" : "(o: Any): Boolean", "member" : "com.khulnasoft.spark.connector.GettableData.equals", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow.html#equals(o:Any):Boolean", "kind" : "def"}, {"label" : "dataAsString", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.GettableData.dataAsString", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow.html#dataAsString:String", "kind" : "def"}, {"label" : "contains", "tail" : "(name: String): Boolean", "member" : "com.khulnasoft.spark.connector.GettableData.contains", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow.html#contains(name:String):Boolean", "kind" : "def"}, {"label" : "nameOf", "tail" : "(index: Int): String", "member" : "com.khulnasoft.spark.connector.GettableData.nameOf", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow.html#nameOf(index:Int):String", "kind" : "def"}, {"label" : "indexOf", "tail" : "(name: String): Int", "member" : "com.khulnasoft.spark.connector.GettableData.indexOf", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow.html#indexOf(name:String):Int", "kind" : "def"}, {"label" : "isNullAt", "tail" : "(name: String): Boolean", "member" : "com.khulnasoft.spark.connector.GettableData.isNullAt", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow.html#isNullAt(name:String):Boolean", "kind" : "def"}, {"label" : "getRawCql", "tail" : "(name: String): AnyRef", "member" : "com.khulnasoft.spark.connector.GettableData.getRawCql", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow.html#getRawCql(name:String):AnyRef", "kind" : "def"}, {"label" : "getRaw", "tail" : "(name: String): AnyRef", "member" : "com.khulnasoft.spark.connector.GettableData.getRaw", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow.html#getRaw(name:String):AnyRef", "kind" : "def"}, {"label" : "iterator", "tail" : "(): Iterator[AnyRef]", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.iterator", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow.html#iterator:Iterator[AnyRef]", "kind" : "def"}, {"label" : "getMap", "tail" : "(index: Int)(arg0: TypeConverter[K], arg1: TypeConverter[V]): Map[K, V]", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getMap", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow.html#getMap[K,V](index:Int)(implicitevidence$3:com.khulnasoft.spark.connector.types.TypeConverter[K],implicitevidence$4:com.khulnasoft.spark.connector.types.TypeConverter[V]):Map[K,V]", "kind" : "def"}, {"label" : "getSet", "tail" : "(index: Int)(arg0: TypeConverter[T]): Set[T]", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getSet", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow.html#getSet[T](index:Int)(implicitevidence$2:com.khulnasoft.spark.connector.types.TypeConverter[T]):Set[T]", "kind" : "def"}, {"label" : "getList", "tail" : "(index: Int)(arg0: TypeConverter[T]): Vector[T]", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getList", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow.html#getList[T](index:Int)(implicitevidence$1:com.khulnasoft.spark.connector.types.TypeConverter[T]):Vector[T]", "kind" : "def"}, {"label" : "getTupleValueOption", "tail" : "(index: Int): Option[TupleValue]", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getTupleValueOption", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow.html#getTupleValueOption(index:Int):Option[com.khulnasoft.spark.connector.TupleValue]", "kind" : "def"}, {"label" : "getTupleValue", "tail" : "(index: Int): TupleValue", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getTupleValue", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow.html#getTupleValue(index:Int):com.khulnasoft.spark.connector.TupleValue", "kind" : "def"}, {"label" : "getUDTValueOption", "tail" : "(index: Int): Option[UDTValue]", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getUDTValueOption", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow.html#getUDTValueOption(index:Int):Option[com.khulnasoft.spark.connector.UDTValue]", "kind" : "def"}, {"label" : "getUDTValue", "tail" : "(index: Int): UDTValue", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getUDTValue", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow.html#getUDTValue(index:Int):com.khulnasoft.spark.connector.UDTValue", "kind" : "def"}, {"label" : "getInetOption", "tail" : "(index: Int): Option[InetAddress]", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getInetOption", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow.html#getInetOption(index:Int):Option[java.net.InetAddress]", "kind" : "def"}, {"label" : "getInet", "tail" : "(index: Int): InetAddress", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getInet", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow.html#getInet(index:Int):java.net.InetAddress", "kind" : "def"}, {"label" : "getUUIDOption", "tail" : "(index: Int): Option[UUID]", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getUUIDOption", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow.html#getUUIDOption(index:Int):Option[java.util.UUID]", "kind" : "def"}, {"label" : "getUUID", "tail" : "(index: Int): UUID", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getUUID", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow.html#getUUID(index:Int):java.util.UUID", "kind" : "def"}, {"label" : "getDecimalOption", "tail" : "(index: Int): Option[BigDecimal]", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getDecimalOption", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow.html#getDecimalOption(index:Int):Option[BigDecimal]", "kind" : "def"}, {"label" : "getDecimal", "tail" : "(index: Int): BigDecimal", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getDecimal", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow.html#getDecimal(index:Int):BigDecimal", "kind" : "def"}, {"label" : "getVarIntOption", "tail" : "(index: Int): Option[BigInt]", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getVarIntOption", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow.html#getVarIntOption(index:Int):Option[BigInt]", "kind" : "def"}, {"label" : "getVarInt", "tail" : "(index: Int): BigInt", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getVarInt", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow.html#getVarInt(index:Int):BigInt", "kind" : "def"}, {"label" : "getDateOption", "tail" : "(index: Int): Option[Date]", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getDateOption", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow.html#getDateOption(index:Int):Option[java.util.Date]", "kind" : "def"}, {"label" : "getDate", "tail" : "(index: Int): Date", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getDate", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow.html#getDate(index:Int):java.util.Date", "kind" : "def"}, {"label" : "getBytesOption", "tail" : "(index: Int): Option[ByteBuffer]", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getBytesOption", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow.html#getBytesOption(index:Int):Option[java.nio.ByteBuffer]", "kind" : "def"}, {"label" : "getBytes", "tail" : "(index: Int): ByteBuffer", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getBytes", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow.html#getBytes(index:Int):java.nio.ByteBuffer", "kind" : "def"}, {"label" : "getStringOption", "tail" : "(index: Int): Option[String]", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getStringOption", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow.html#getStringOption(index:Int):Option[String]", "kind" : "def"}, {"label" : "getString", "tail" : "(index: Int): String", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getString", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow.html#getString(index:Int):String", "kind" : "def"}, {"label" : "getDoubleOption", "tail" : "(index: Int): Option[Double]", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getDoubleOption", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow.html#getDoubleOption(index:Int):Option[Double]", "kind" : "def"}, {"label" : "getDouble", "tail" : "(index: Int): Double", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getDouble", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow.html#getDouble(index:Int):Double", "kind" : "def"}, {"label" : "getFloatOption", "tail" : "(index: Int): Option[Float]", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getFloatOption", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow.html#getFloatOption(index:Int):Option[Float]", "kind" : "def"}, {"label" : "getFloat", "tail" : "(index: Int): Float", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getFloat", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow.html#getFloat(index:Int):Float", "kind" : "def"}, {"label" : "getLongOption", "tail" : "(index: Int): Option[Long]", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getLongOption", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow.html#getLongOption(index:Int):Option[Long]", "kind" : "def"}, {"label" : "getLong", "tail" : "(index: Int): Long", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getLong", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow.html#getLong(index:Int):Long", "kind" : "def"}, {"label" : "getIntOption", "tail" : "(index: Int): Option[Int]", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getIntOption", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow.html#getIntOption(index:Int):Option[Int]", "kind" : "def"}, {"label" : "getInt", "tail" : "(index: Int): Int", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getInt", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow.html#getInt(index:Int):Int", "kind" : "def"}, {"label" : "getShortOption", "tail" : "(index: Int): Option[Short]", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getShortOption", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow.html#getShortOption(index:Int):Option[Short]", "kind" : "def"}, {"label" : "getShort", "tail" : "(index: Int): Short", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getShort", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow.html#getShort(index:Int):Short", "kind" : "def"}, {"label" : "getByteOption", "tail" : "(index: Int): Option[Byte]", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getByteOption", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow.html#getByteOption(index:Int):Option[Byte]", "kind" : "def"}, {"label" : "getByte", "tail" : "(index: Int): Byte", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getByte", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow.html#getByte(index:Int):Byte", "kind" : "def"}, {"label" : "getBooleanOption", "tail" : "(index: Int): Option[Boolean]", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getBooleanOption", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow.html#getBooleanOption(index:Int):Option[Boolean]", "kind" : "def"}, {"label" : "getBoolean", "tail" : "(index: Int): Boolean", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getBoolean", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow.html#getBoolean(index:Int):Boolean", "kind" : "def"}, {"label" : "get", "tail" : "(index: Int)(c: TypeConverter[T]): T", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.get", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow.html#get[T](index:Int)(implicitc:com.khulnasoft.spark.connector.types.TypeConverter[T]):T", "kind" : "def"}, {"label" : "isNullAt", "tail" : "(index: Int): Boolean", "member" : "com.khulnasoft.spark.connector.GettableByIndexData.isNullAt", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow.html#isNullAt(index:Int):Boolean", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "com.khulnasoft.spark.connector.GettableByIndexData.size", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow.html#size:Int", "kind" : "def"}, {"label" : "length", "tail" : "(): Int", "member" : "com.khulnasoft.spark.connector.GettableByIndexData.length", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow.html#length:Int", "kind" : "def"}, {"label" : "getRaw", "tail" : "(index: Int): AnyRef", "member" : "com.khulnasoft.spark.connector.GettableByIndexData.getRaw", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow.html#getRaw(index:Int):AnyRef", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "fromMap", "tail" : "(map: Map[String, Any]): CassandraRow", "member" : "com.khulnasoft.spark.connector.CassandraRow.fromMap", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow$.html#fromMap(map:Map[String,Any]):com.khulnasoft.spark.connector.CassandraRow", "kind" : "def"}, {"label" : "dataFromJavaDriverRow", "tail" : "(row: Row, metaData: CassandraRowMetadata): Array[AnyRef]", "member" : "com.khulnasoft.spark.connector.CassandraRow.dataFromJavaDriverRow", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow$.html#dataFromJavaDriverRow(row:com.khulnasoft.oss.driver.api.core.cql.Row,metaData:com.khulnasoft.spark.connector.CassandraRowMetadata):Array[Object]", "kind" : "def"}, {"label" : "fromJavaDriverRow", "tail" : "(row: Row, metaData: CassandraRowMetadata): CassandraRow", "member" : "com.khulnasoft.spark.connector.CassandraRow.fromJavaDriverRow", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow$.html#fromJavaDriverRow(row:com.khulnasoft.oss.driver.api.core.cql.Row,metaData:com.khulnasoft.spark.connector.CassandraRowMetadata):com.khulnasoft.spark.connector.CassandraRow", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRow$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/khulnasoft\/spark\/connector\/CassandraRow.html", "kind" : "class"}, {"name" : "com.khulnasoft.spark.connector.CassandraRowMetadata", "shortDescription" : "All CassandraRows shared data", "object" : "com\/khulnasoft\/spark\/connector\/CassandraRowMetadata$.html", "members_object" : [{"label" : "fromColumnNames", "tail" : "(columnNames: Seq[String]): CassandraRowMetadata", "member" : "com.khulnasoft.spark.connector.CassandraRowMetadata.fromColumnNames", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRowMetadata$.html#fromColumnNames(columnNames:Seq[String]):com.khulnasoft.spark.connector.CassandraRowMetadata", "kind" : "def"}, {"label" : "fromColumnNames", "tail" : "(columnNames: IndexedSeq[String]): CassandraRowMetadata", "member" : "com.khulnasoft.spark.connector.CassandraRowMetadata.fromColumnNames", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRowMetadata$.html#fromColumnNames(columnNames:IndexedSeq[String]):com.khulnasoft.spark.connector.CassandraRowMetadata", "kind" : "def"}, {"label" : "fromPreparedStatement", "tail" : "(columnNames: IndexedSeq[String], statement: PreparedStatement, registry: CodecRegistry): CassandraRowMetadata", "member" : "com.khulnasoft.spark.connector.CassandraRowMetadata.fromPreparedStatement", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRowMetadata$.html#fromPreparedStatement(columnNames:IndexedSeq[String],statement:com.khulnasoft.oss.driver.api.core.cql.PreparedStatement,registry:com.khulnasoft.oss.driver.api.core.type.codec.registry.CodecRegistry):com.khulnasoft.spark.connector.CassandraRowMetadata", "kind" : "def"}, {"label" : "fromResultSet", "tail" : "(columnNames: IndexedSeq[String], rs: ResultSet, registry: CodecRegistry): CassandraRowMetadata", "member" : "com.khulnasoft.spark.connector.CassandraRowMetadata.fromResultSet", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRowMetadata$.html#fromResultSet(columnNames:IndexedSeq[String],rs:com.khulnasoft.oss.driver.api.core.cql.ResultSet,registry:com.khulnasoft.oss.driver.api.core.type.codec.registry.CodecRegistry):com.khulnasoft.spark.connector.CassandraRowMetadata", "kind" : "def"}, {"label" : "fromResultSet", "tail" : "(columnNames: IndexedSeq[String], rs: AsyncResultSet, registry: CodecRegistry): CassandraRowMetadata", "member" : "com.khulnasoft.spark.connector.CassandraRowMetadata.fromResultSet", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRowMetadata$.html#fromResultSet(columnNames:IndexedSeq[String],rs:com.khulnasoft.oss.driver.api.core.cql.AsyncResultSet,registry:com.khulnasoft.oss.driver.api.core.type.codec.registry.CodecRegistry):com.khulnasoft.spark.connector.CassandraRowMetadata", "kind" : "def"}, {"label" : "fromResultSet", "tail" : "(columnNames: IndexedSeq[String], rs: AsyncResultSet, session: CqlSession): CassandraRowMetadata", "member" : "com.khulnasoft.spark.connector.CassandraRowMetadata.fromResultSet", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRowMetadata$.html#fromResultSet(columnNames:IndexedSeq[String],rs:com.khulnasoft.oss.driver.api.core.cql.AsyncResultSet,session:com.khulnasoft.oss.driver.api.core.CqlSession):com.khulnasoft.spark.connector.CassandraRowMetadata", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRowMetadata$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRowMetadata$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRowMetadata$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRowMetadata$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRowMetadata$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRowMetadata$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRowMetadata$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRowMetadata$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRowMetadata$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRowMetadata$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRowMetadata$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRowMetadata$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRowMetadata$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRowMetadata$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRowMetadata$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRowMetadata$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRowMetadata$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRowMetadata$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRowMetadata$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "unaliasedColumnNames", "tail" : "(): IndexedSeq[String]", "member" : "com.khulnasoft.spark.connector.CassandraRowMetadata.unaliasedColumnNames", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRowMetadata.html#unaliasedColumnNames:IndexedSeq[String]", "kind" : "def"}, {"label" : "codecs", "tail" : "(name: String): TypeCodec[AnyRef]", "member" : "com.khulnasoft.spark.connector.CassandraRowMetadata.codecs", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRowMetadata.html#codecs(name:String):com.khulnasoft.oss.driver.api.core.type.codec.TypeCodec[AnyRef]", "kind" : "def"}, {"label" : "indexOfOrThrow", "tail" : ": Map[String, Int]", "member" : "com.khulnasoft.spark.connector.CassandraRowMetadata.indexOfOrThrow", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRowMetadata.html#indexOfOrThrow:scala.collection.immutable.Map[String,Int]", "kind" : "lazy val"}, {"label" : "indexOfCqlColumnOrThrow", "tail" : ": Map[String, Int]", "member" : "com.khulnasoft.spark.connector.CassandraRowMetadata.indexOfCqlColumnOrThrow", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRowMetadata.html#indexOfCqlColumnOrThrow:scala.collection.immutable.Map[String,Int]", "kind" : "lazy val"}, {"label" : "namesToIndex", "tail" : ": Map[String, Int]", "member" : "com.khulnasoft.spark.connector.CassandraRowMetadata.namesToIndex", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRowMetadata.html#namesToIndex:Map[String,Int]", "kind" : "lazy val"}, {"member" : "com.khulnasoft.spark.connector.CassandraRowMetadata#<init>", "error" : "unsupported entity"}, {"label" : "codecs", "tail" : ": IndexedSeq[TypeCodec[AnyRef]]", "member" : "com.khulnasoft.spark.connector.CassandraRowMetadata.codecs", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRowMetadata.html#codecs:IndexedSeq[com.khulnasoft.oss.driver.api.core.type.codec.TypeCodec[AnyRef]]", "kind" : "val"}, {"label" : "resultSetColumnNames", "tail" : ": Option[IndexedSeq[String]]", "member" : "com.khulnasoft.spark.connector.CassandraRowMetadata.resultSetColumnNames", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRowMetadata.html#resultSetColumnNames:Option[IndexedSeq[String]]", "kind" : "val"}, {"label" : "columnNames", "tail" : ": IndexedSeq[String]", "member" : "com.khulnasoft.spark.connector.CassandraRowMetadata.columnNames", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRowMetadata.html#columnNames:IndexedSeq[String]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRowMetadata.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRowMetadata.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRowMetadata.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRowMetadata.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRowMetadata.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRowMetadata.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRowMetadata.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRowMetadata.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRowMetadata.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRowMetadata.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRowMetadata.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRowMetadata.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRowMetadata.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRowMetadata.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRowMetadata.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/CassandraRowMetadata.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/khulnasoft\/spark\/connector\/CassandraRowMetadata.html", "kind" : "case class"}, {"name" : "com.khulnasoft.spark.connector.CollectionAppend", "shortDescription" : "", "object" : "com\/khulnasoft\/spark\/connector\/CollectionAppend$.html", "members_object" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/CollectionAppend$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/CollectionAppend$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/CollectionAppend$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/CollectionAppend$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/CollectionAppend$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/CollectionAppend$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/CollectionAppend$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/CollectionAppend$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/CollectionAppend$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/CollectionAppend$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/CollectionAppend$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/CollectionAppend$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/CollectionAppend$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/khulnasoft\/spark\/connector\/CollectionAppend$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/CollectionAppend$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/CollectionAppend$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/CollectionAppend$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.khulnasoft.spark.connector.CollectionBehavior", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/CollectionBehavior.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/CollectionBehavior.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/CollectionBehavior.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/CollectionBehavior.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/CollectionBehavior.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/CollectionBehavior.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/CollectionBehavior.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/CollectionBehavior.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/CollectionBehavior.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/CollectionBehavior.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/CollectionBehavior.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/CollectionBehavior.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/khulnasoft\/spark\/connector\/CollectionBehavior.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/CollectionBehavior.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/khulnasoft\/spark\/connector\/CollectionBehavior.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/khulnasoft\/spark\/connector\/CollectionBehavior.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/CollectionBehavior.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/CollectionBehavior.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/CollectionBehavior.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Insert behaviors for Collections.", "trait" : "com\/khulnasoft\/spark\/connector\/CollectionBehavior.html", "kind" : "trait"}, {"name" : "com.khulnasoft.spark.connector.CollectionColumnName", "shortDescription" : "References a collection column by name with insert instructions", "members_case class" : [{"label" : "remove", "tail" : "(): CollectionColumnName", "member" : "com.khulnasoft.spark.connector.CollectionColumnName.remove", "link" : "com\/khulnasoft\/spark\/connector\/CollectionColumnName.html#remove:com.khulnasoft.spark.connector.CollectionColumnName", "kind" : "def"}, {"label" : "prepend", "tail" : "(): CollectionColumnName", "member" : "com.khulnasoft.spark.connector.CollectionColumnName.prepend", "link" : "com\/khulnasoft\/spark\/connector\/CollectionColumnName.html#prepend:com.khulnasoft.spark.connector.CollectionColumnName", "kind" : "def"}, {"label" : "append", "tail" : "(): CollectionColumnName", "member" : "com.khulnasoft.spark.connector.CollectionColumnName.append", "link" : "com\/khulnasoft\/spark\/connector\/CollectionColumnName.html#append:com.khulnasoft.spark.connector.CollectionColumnName", "kind" : "def"}, {"label" : "add", "tail" : "(): CollectionColumnName", "member" : "com.khulnasoft.spark.connector.CollectionColumnName.add", "link" : "com\/khulnasoft\/spark\/connector\/CollectionColumnName.html#add:com.khulnasoft.spark.connector.CollectionColumnName", "kind" : "def"}, {"label" : "overwrite", "tail" : "(): CollectionColumnName", "member" : "com.khulnasoft.spark.connector.CollectionColumnName.overwrite", "link" : "com\/khulnasoft\/spark\/connector\/CollectionColumnName.html#overwrite:com.khulnasoft.spark.connector.CollectionColumnName", "kind" : "def"}, {"label" : "as", "tail" : "(alias: String): CollectionColumnName", "member" : "com.khulnasoft.spark.connector.CollectionColumnName.as", "link" : "com\/khulnasoft\/spark\/connector\/CollectionColumnName.html#as(alias:String):com.khulnasoft.spark.connector.CollectionColumnName", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.CollectionColumnName.toString", "link" : "com\/khulnasoft\/spark\/connector\/CollectionColumnName.html#toString():String", "kind" : "def"}, {"label" : "selectedAs", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.CollectionColumnName.selectedAs", "link" : "com\/khulnasoft\/spark\/connector\/CollectionColumnName.html#selectedAs:String", "kind" : "def"}, {"label" : "cqlValueName", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.CollectionColumnName.cqlValueName", "link" : "com\/khulnasoft\/spark\/connector\/CollectionColumnName.html#cqlValueName:String", "kind" : "def"}, {"label" : "cql", "tail" : ": String", "member" : "com.khulnasoft.spark.connector.CollectionColumnName.cql", "link" : "com\/khulnasoft\/spark\/connector\/CollectionColumnName.html#cql:String", "kind" : "val"}, {"member" : "com.khulnasoft.spark.connector.CollectionColumnName#<init>", "error" : "unsupported entity"}, {"label" : "collectionBehavior", "tail" : ": CollectionBehavior", "member" : "com.khulnasoft.spark.connector.CollectionColumnName.collectionBehavior", "link" : "com\/khulnasoft\/spark\/connector\/CollectionColumnName.html#collectionBehavior:com.khulnasoft.spark.connector.CollectionBehavior", "kind" : "val"}, {"label" : "alias", "tail" : ": Option[String]", "member" : "com.khulnasoft.spark.connector.CollectionColumnName.alias", "link" : "com\/khulnasoft\/spark\/connector\/CollectionColumnName.html#alias:Option[String]", "kind" : "val"}, {"label" : "columnName", "tail" : ": String", "member" : "com.khulnasoft.spark.connector.CollectionColumnName.columnName", "link" : "com\/khulnasoft\/spark\/connector\/CollectionColumnName.html#columnName:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/CollectionColumnName.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/CollectionColumnName.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/CollectionColumnName.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/CollectionColumnName.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/CollectionColumnName.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/CollectionColumnName.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/CollectionColumnName.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/CollectionColumnName.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/CollectionColumnName.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/CollectionColumnName.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/CollectionColumnName.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/CollectionColumnName.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/CollectionColumnName.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/CollectionColumnName.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/CollectionColumnName.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/CollectionColumnName.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/khulnasoft\/spark\/connector\/CollectionColumnName.html", "kind" : "case class"}, {"name" : "com.khulnasoft.spark.connector.CollectionOverwrite", "shortDescription" : "", "object" : "com\/khulnasoft\/spark\/connector\/CollectionOverwrite$.html", "members_object" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/CollectionOverwrite$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/CollectionOverwrite$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/CollectionOverwrite$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/CollectionOverwrite$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/CollectionOverwrite$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/CollectionOverwrite$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/CollectionOverwrite$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/CollectionOverwrite$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/CollectionOverwrite$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/CollectionOverwrite$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/CollectionOverwrite$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/CollectionOverwrite$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/CollectionOverwrite$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/khulnasoft\/spark\/connector\/CollectionOverwrite$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/CollectionOverwrite$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/CollectionOverwrite$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/CollectionOverwrite$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.khulnasoft.spark.connector.CollectionPrepend", "shortDescription" : "", "object" : "com\/khulnasoft\/spark\/connector\/CollectionPrepend$.html", "members_object" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/CollectionPrepend$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/CollectionPrepend$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/CollectionPrepend$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/CollectionPrepend$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/CollectionPrepend$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/CollectionPrepend$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/CollectionPrepend$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/CollectionPrepend$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/CollectionPrepend$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/CollectionPrepend$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/CollectionPrepend$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/CollectionPrepend$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/CollectionPrepend$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/khulnasoft\/spark\/connector\/CollectionPrepend$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/CollectionPrepend$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/CollectionPrepend$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/CollectionPrepend$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.khulnasoft.spark.connector.CollectionRemove", "shortDescription" : "", "object" : "com\/khulnasoft\/spark\/connector\/CollectionRemove$.html", "members_object" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/CollectionRemove$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/CollectionRemove$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/CollectionRemove$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/CollectionRemove$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/CollectionRemove$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/CollectionRemove$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/CollectionRemove$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/CollectionRemove$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/CollectionRemove$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/CollectionRemove$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/CollectionRemove$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/CollectionRemove$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/CollectionRemove$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/khulnasoft\/spark\/connector\/CollectionRemove$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/CollectionRemove$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/CollectionRemove$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/CollectionRemove$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.khulnasoft.spark.connector.ColumnName", "shortDescription" : "References a column by name.", "members_case class" : [{"label" : "as", "tail" : "(alias: String): ColumnName", "member" : "com.khulnasoft.spark.connector.ColumnName.as", "link" : "com\/khulnasoft\/spark\/connector\/ColumnName.html#as(alias:String):com.khulnasoft.spark.connector.ColumnName", "kind" : "def"}, {"label" : "remove", "tail" : "(): CollectionColumnName", "member" : "com.khulnasoft.spark.connector.ColumnName.remove", "link" : "com\/khulnasoft\/spark\/connector\/ColumnName.html#remove:com.khulnasoft.spark.connector.CollectionColumnName", "kind" : "def"}, {"label" : "prepend", "tail" : "(): CollectionColumnName", "member" : "com.khulnasoft.spark.connector.ColumnName.prepend", "link" : "com\/khulnasoft\/spark\/connector\/ColumnName.html#prepend:com.khulnasoft.spark.connector.CollectionColumnName", "kind" : "def"}, {"label" : "append", "tail" : "(): CollectionColumnName", "member" : "com.khulnasoft.spark.connector.ColumnName.append", "link" : "com\/khulnasoft\/spark\/connector\/ColumnName.html#append:com.khulnasoft.spark.connector.CollectionColumnName", "kind" : "def"}, {"label" : "add", "tail" : "(): CollectionColumnName", "member" : "com.khulnasoft.spark.connector.ColumnName.add", "link" : "com\/khulnasoft\/spark\/connector\/ColumnName.html#add:com.khulnasoft.spark.connector.CollectionColumnName", "kind" : "def"}, {"label" : "overwrite", "tail" : "(): CollectionColumnName", "member" : "com.khulnasoft.spark.connector.ColumnName.overwrite", "link" : "com\/khulnasoft\/spark\/connector\/ColumnName.html#overwrite:com.khulnasoft.spark.connector.CollectionColumnName", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.ColumnName.toString", "link" : "com\/khulnasoft\/spark\/connector\/ColumnName.html#toString():String", "kind" : "def"}, {"label" : "selectedAs", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.ColumnName.selectedAs", "link" : "com\/khulnasoft\/spark\/connector\/ColumnName.html#selectedAs:String", "kind" : "def"}, {"label" : "cqlValueName", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.ColumnName.cqlValueName", "link" : "com\/khulnasoft\/spark\/connector\/ColumnName.html#cqlValueName:String", "kind" : "def"}, {"label" : "cql", "tail" : ": String", "member" : "com.khulnasoft.spark.connector.ColumnName.cql", "link" : "com\/khulnasoft\/spark\/connector\/ColumnName.html#cql:String", "kind" : "val"}, {"member" : "com.khulnasoft.spark.connector.ColumnName#<init>", "error" : "unsupported entity"}, {"label" : "alias", "tail" : ": Option[String]", "member" : "com.khulnasoft.spark.connector.ColumnName.alias", "link" : "com\/khulnasoft\/spark\/connector\/ColumnName.html#alias:Option[String]", "kind" : "val"}, {"label" : "columnName", "tail" : ": String", "member" : "com.khulnasoft.spark.connector.ColumnName.columnName", "link" : "com\/khulnasoft\/spark\/connector\/ColumnName.html#columnName:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/ColumnName.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/ColumnName.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/ColumnName.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/ColumnName.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/ColumnName.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/ColumnName.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/ColumnName.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/ColumnName.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/ColumnName.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/ColumnName.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/ColumnName.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/ColumnName.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/ColumnName.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/ColumnName.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/ColumnName.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/ColumnName.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/khulnasoft\/spark\/connector\/ColumnName.html", "kind" : "case class"}, {"name" : "com.khulnasoft.spark.connector.ColumnNotFoundException", "shortDescription" : "Thrown when the requested column does not exist in the result set.", "members_class" : [{"member" : "com.khulnasoft.spark.connector.ColumnNotFoundException#<init>", "error" : "unsupported entity"}, {"label" : "getSuppressed", "tail" : "(): Array[Throwable]", "member" : "java.lang.Throwable.getSuppressed", "link" : "com\/khulnasoft\/spark\/connector\/ColumnNotFoundException.html#getSuppressed():Array[Throwable]", "kind" : "final def"}, {"label" : "addSuppressed", "tail" : "(arg0: Throwable): Unit", "member" : "java.lang.Throwable.addSuppressed", "link" : "com\/khulnasoft\/spark\/connector\/ColumnNotFoundException.html#addSuppressed(x$1:Throwable):Unit", "kind" : "final def"}, {"label" : "setStackTrace", "tail" : "(arg0: Array[StackTraceElement]): Unit", "member" : "java.lang.Throwable.setStackTrace", "link" : "com\/khulnasoft\/spark\/connector\/ColumnNotFoundException.html#setStackTrace(x$1:Array[StackTraceElement]):Unit", "kind" : "def"}, {"label" : "getStackTrace", "tail" : "(): Array[StackTraceElement]", "member" : "java.lang.Throwable.getStackTrace", "link" : "com\/khulnasoft\/spark\/connector\/ColumnNotFoundException.html#getStackTrace():Array[StackTraceElement]", "kind" : "def"}, {"label" : "fillInStackTrace", "tail" : "(): Throwable", "member" : "java.lang.Throwable.fillInStackTrace", "link" : "com\/khulnasoft\/spark\/connector\/ColumnNotFoundException.html#fillInStackTrace():Throwable", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintWriter): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "com\/khulnasoft\/spark\/connector\/ColumnNotFoundException.html#printStackTrace(x$1:java.io.PrintWriter):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintStream): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "com\/khulnasoft\/spark\/connector\/ColumnNotFoundException.html#printStackTrace(x$1:java.io.PrintStream):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "com\/khulnasoft\/spark\/connector\/ColumnNotFoundException.html#printStackTrace():Unit", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "java.lang.Throwable.toString", "link" : "com\/khulnasoft\/spark\/connector\/ColumnNotFoundException.html#toString():String", "kind" : "def"}, {"label" : "initCause", "tail" : "(arg0: Throwable): Throwable", "member" : "java.lang.Throwable.initCause", "link" : "com\/khulnasoft\/spark\/connector\/ColumnNotFoundException.html#initCause(x$1:Throwable):Throwable", "kind" : "def"}, {"label" : "getCause", "tail" : "(): Throwable", "member" : "java.lang.Throwable.getCause", "link" : "com\/khulnasoft\/spark\/connector\/ColumnNotFoundException.html#getCause():Throwable", "kind" : "def"}, {"label" : "getLocalizedMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getLocalizedMessage", "link" : "com\/khulnasoft\/spark\/connector\/ColumnNotFoundException.html#getLocalizedMessage():String", "kind" : "def"}, {"label" : "getMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getMessage", "link" : "com\/khulnasoft\/spark\/connector\/ColumnNotFoundException.html#getMessage():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/ColumnNotFoundException.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/ColumnNotFoundException.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/ColumnNotFoundException.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/ColumnNotFoundException.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/ColumnNotFoundException.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/ColumnNotFoundException.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/ColumnNotFoundException.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/ColumnNotFoundException.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/ColumnNotFoundException.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/ColumnNotFoundException.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/ColumnNotFoundException.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/ColumnNotFoundException.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/ColumnNotFoundException.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/khulnasoft\/spark\/connector\/ColumnNotFoundException.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/khulnasoft\/spark\/connector\/ColumnNotFoundException.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/ColumnNotFoundException.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/ColumnNotFoundException.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/ColumnNotFoundException.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/khulnasoft\/spark\/connector\/ColumnNotFoundException.html", "kind" : "class"}, {"name" : "com.khulnasoft.spark.connector.ColumnRef", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/ColumnRef.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/ColumnRef.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/ColumnRef.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/ColumnRef.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/ColumnRef.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/ColumnRef.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/ColumnRef.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/ColumnRef.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/ColumnRef.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/ColumnRef.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/ColumnRef.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/ColumnRef.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/khulnasoft\/spark\/connector\/ColumnRef.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/ColumnRef.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/khulnasoft\/spark\/connector\/ColumnRef.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/khulnasoft\/spark\/connector\/ColumnRef.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/ColumnRef.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/ColumnRef.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/ColumnRef.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "cqlValueName", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.ColumnRef.cqlValueName", "link" : "com\/khulnasoft\/spark\/connector\/ColumnRef.html#cqlValueName:String", "kind" : "abstract def"}, {"label" : "cql", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.ColumnRef.cql", "link" : "com\/khulnasoft\/spark\/connector\/ColumnRef.html#cql:String", "kind" : "abstract def"}, {"label" : "selectedAs", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.ColumnRef.selectedAs", "link" : "com\/khulnasoft\/spark\/connector\/ColumnRef.html#selectedAs:String", "kind" : "abstract def"}, {"label" : "columnName", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.ColumnRef.columnName", "link" : "com\/khulnasoft\/spark\/connector\/ColumnRef.html#columnName:String", "kind" : "abstract def"}], "shortDescription" : "A column that can be selected from CQL results set by name.", "trait" : "com\/khulnasoft\/spark\/connector\/ColumnRef.html", "kind" : "trait"}, {"name" : "com.khulnasoft.spark.connector.FunctionCallRef", "shortDescription" : "References a function call *", "members_case class" : [{"label" : "requiredColumns", "tail" : "(): Seq[ColumnRef]", "member" : "com.khulnasoft.spark.connector.FunctionCallRef.requiredColumns", "link" : "com\/khulnasoft\/spark\/connector\/FunctionCallRef.html#requiredColumns:Seq[com.khulnasoft.spark.connector.ColumnRef]", "kind" : "def"}, {"label" : "cql", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.FunctionCallRef.cql", "link" : "com\/khulnasoft\/spark\/connector\/FunctionCallRef.html#cql:String", "kind" : "def"}, {"label" : "cqlValueName", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.FunctionCallRef.cqlValueName", "link" : "com\/khulnasoft\/spark\/connector\/FunctionCallRef.html#cqlValueName:String", "kind" : "def"}, {"label" : "selectedAs", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.FunctionCallRef.selectedAs", "link" : "com\/khulnasoft\/spark\/connector\/FunctionCallRef.html#selectedAs:String", "kind" : "def"}, {"member" : "com.khulnasoft.spark.connector.FunctionCallRef#<init>", "error" : "unsupported entity"}, {"label" : "alias", "tail" : ": Option[String]", "member" : "com.khulnasoft.spark.connector.FunctionCallRef.alias", "link" : "com\/khulnasoft\/spark\/connector\/FunctionCallRef.html#alias:Option[String]", "kind" : "val"}, {"label" : "actualParams", "tail" : ": Seq[Either[ColumnRef, String]]", "member" : "com.khulnasoft.spark.connector.FunctionCallRef.actualParams", "link" : "com\/khulnasoft\/spark\/connector\/FunctionCallRef.html#actualParams:Seq[Either[com.khulnasoft.spark.connector.ColumnRef,String]]", "kind" : "val"}, {"label" : "columnName", "tail" : ": String", "member" : "com.khulnasoft.spark.connector.FunctionCallRef.columnName", "link" : "com\/khulnasoft\/spark\/connector\/FunctionCallRef.html#columnName:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/FunctionCallRef.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/FunctionCallRef.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/FunctionCallRef.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/FunctionCallRef.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/FunctionCallRef.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/FunctionCallRef.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/FunctionCallRef.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/FunctionCallRef.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/FunctionCallRef.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/FunctionCallRef.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/FunctionCallRef.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/FunctionCallRef.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/FunctionCallRef.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/FunctionCallRef.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/FunctionCallRef.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/FunctionCallRef.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/khulnasoft\/spark\/connector\/FunctionCallRef.html", "kind" : "case class"}, {"name" : "com.khulnasoft.spark.connector.GettableByIndexData", "members_trait" : [{"label" : "hashCode", "tail" : "(): Int", "member" : "com.khulnasoft.spark.connector.GettableByIndexData.hashCode", "link" : "com\/khulnasoft\/spark\/connector\/GettableByIndexData.html#hashCode():Int", "kind" : "def"}, {"label" : "equals", "tail" : "(o: Any): Boolean", "member" : "com.khulnasoft.spark.connector.GettableByIndexData.equals", "link" : "com\/khulnasoft\/spark\/connector\/GettableByIndexData.html#equals(o:Any):Boolean", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.GettableByIndexData.toString", "link" : "com\/khulnasoft\/spark\/connector\/GettableByIndexData.html#toString():String", "kind" : "def"}, {"label" : "dataAsString", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.GettableByIndexData.dataAsString", "link" : "com\/khulnasoft\/spark\/connector\/GettableByIndexData.html#dataAsString:String", "kind" : "def"}, {"label" : "isNullAt", "tail" : "(index: Int): Boolean", "member" : "com.khulnasoft.spark.connector.GettableByIndexData.isNullAt", "link" : "com\/khulnasoft\/spark\/connector\/GettableByIndexData.html#isNullAt(index:Int):Boolean", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "com.khulnasoft.spark.connector.GettableByIndexData.size", "link" : "com\/khulnasoft\/spark\/connector\/GettableByIndexData.html#size:Int", "kind" : "def"}, {"label" : "length", "tail" : "(): Int", "member" : "com.khulnasoft.spark.connector.GettableByIndexData.length", "link" : "com\/khulnasoft\/spark\/connector\/GettableByIndexData.html#length:Int", "kind" : "def"}, {"label" : "getRaw", "tail" : "(index: Int): AnyRef", "member" : "com.khulnasoft.spark.connector.GettableByIndexData.getRaw", "link" : "com\/khulnasoft\/spark\/connector\/GettableByIndexData.html#getRaw(index:Int):AnyRef", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/GettableByIndexData.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/GettableByIndexData.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/GettableByIndexData.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/GettableByIndexData.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/GettableByIndexData.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/GettableByIndexData.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/GettableByIndexData.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/GettableByIndexData.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/GettableByIndexData.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/GettableByIndexData.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/GettableByIndexData.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/GettableByIndexData.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/GettableByIndexData.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/GettableByIndexData.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/GettableByIndexData.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/GettableByIndexData.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "columnValues", "tail" : "(): IndexedSeq[AnyRef]", "member" : "com.khulnasoft.spark.connector.GettableByIndexData.columnValues", "link" : "com\/khulnasoft\/spark\/connector\/GettableByIndexData.html#columnValues:IndexedSeq[AnyRef]", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "com\/khulnasoft\/spark\/connector\/GettableByIndexData.html", "kind" : "trait"}, {"name" : "com.khulnasoft.spark.connector.GettableData", "members_trait" : [{"label" : "hashCode", "tail" : "(): Int", "member" : "com.khulnasoft.spark.connector.GettableData.hashCode", "link" : "com\/khulnasoft\/spark\/connector\/GettableData.html#hashCode():Int", "kind" : "def"}, {"label" : "equals", "tail" : "(o: Any): Boolean", "member" : "com.khulnasoft.spark.connector.GettableData.equals", "link" : "com\/khulnasoft\/spark\/connector\/GettableData.html#equals(o:Any):Boolean", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.GettableData.toString", "link" : "com\/khulnasoft\/spark\/connector\/GettableData.html#toString():String", "kind" : "def"}, {"label" : "dataAsString", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.GettableData.dataAsString", "link" : "com\/khulnasoft\/spark\/connector\/GettableData.html#dataAsString:String", "kind" : "def"}, {"label" : "contains", "tail" : "(name: String): Boolean", "member" : "com.khulnasoft.spark.connector.GettableData.contains", "link" : "com\/khulnasoft\/spark\/connector\/GettableData.html#contains(name:String):Boolean", "kind" : "def"}, {"label" : "nameOf", "tail" : "(index: Int): String", "member" : "com.khulnasoft.spark.connector.GettableData.nameOf", "link" : "com\/khulnasoft\/spark\/connector\/GettableData.html#nameOf(index:Int):String", "kind" : "def"}, {"label" : "indexOf", "tail" : "(name: String): Int", "member" : "com.khulnasoft.spark.connector.GettableData.indexOf", "link" : "com\/khulnasoft\/spark\/connector\/GettableData.html#indexOf(name:String):Int", "kind" : "def"}, {"label" : "isNullAt", "tail" : "(name: String): Boolean", "member" : "com.khulnasoft.spark.connector.GettableData.isNullAt", "link" : "com\/khulnasoft\/spark\/connector\/GettableData.html#isNullAt(name:String):Boolean", "kind" : "def"}, {"label" : "getRawCql", "tail" : "(name: String): AnyRef", "member" : "com.khulnasoft.spark.connector.GettableData.getRawCql", "link" : "com\/khulnasoft\/spark\/connector\/GettableData.html#getRawCql(name:String):AnyRef", "kind" : "def"}, {"label" : "getRaw", "tail" : "(name: String): AnyRef", "member" : "com.khulnasoft.spark.connector.GettableData.getRaw", "link" : "com\/khulnasoft\/spark\/connector\/GettableData.html#getRaw(name:String):AnyRef", "kind" : "def"}, {"label" : "isNullAt", "tail" : "(index: Int): Boolean", "member" : "com.khulnasoft.spark.connector.GettableByIndexData.isNullAt", "link" : "com\/khulnasoft\/spark\/connector\/GettableData.html#isNullAt(index:Int):Boolean", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "com.khulnasoft.spark.connector.GettableByIndexData.size", "link" : "com\/khulnasoft\/spark\/connector\/GettableData.html#size:Int", "kind" : "def"}, {"label" : "length", "tail" : "(): Int", "member" : "com.khulnasoft.spark.connector.GettableByIndexData.length", "link" : "com\/khulnasoft\/spark\/connector\/GettableData.html#length:Int", "kind" : "def"}, {"label" : "getRaw", "tail" : "(index: Int): AnyRef", "member" : "com.khulnasoft.spark.connector.GettableByIndexData.getRaw", "link" : "com\/khulnasoft\/spark\/connector\/GettableData.html#getRaw(index:Int):AnyRef", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/GettableData.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/GettableData.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/GettableData.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/GettableData.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/GettableData.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/GettableData.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/GettableData.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/GettableData.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/GettableData.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/GettableData.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/GettableData.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/GettableData.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/GettableData.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/GettableData.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/GettableData.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/GettableData.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "metaData", "tail" : "(): CassandraRowMetadata", "member" : "com.khulnasoft.spark.connector.GettableData.metaData", "link" : "com\/khulnasoft\/spark\/connector\/GettableData.html#metaData:com.khulnasoft.spark.connector.CassandraRowMetadata", "kind" : "abstract def"}, {"label" : "columnValues", "tail" : "(): IndexedSeq[AnyRef]", "member" : "com.khulnasoft.spark.connector.GettableByIndexData.columnValues", "link" : "com\/khulnasoft\/spark\/connector\/GettableData.html#columnValues:IndexedSeq[AnyRef]", "kind" : "abstract def"}], "shortDescription" : "", "object" : "com\/khulnasoft\/spark\/connector\/GettableData$.html", "members_object" : [{"label" : "get", "tail" : "(value: oss.driver.api.core.data.TupleValue, index: Int): AnyRef", "member" : "com.khulnasoft.spark.connector.GettableData.get", "link" : "com\/khulnasoft\/spark\/connector\/GettableData$.html#get(value:com.khulnasoft.oss.driver.api.core.data.TupleValue,index:Int):AnyRef", "kind" : "def"}, {"label" : "get", "tail" : "(value: UdtValue, name: String): AnyRef", "member" : "com.khulnasoft.spark.connector.GettableData.get", "link" : "com\/khulnasoft\/spark\/connector\/GettableData$.html#get(value:com.khulnasoft.oss.driver.api.core.data.UdtValue,name:String):AnyRef", "kind" : "def"}, {"label" : "get", "tail" : "(row: Row, name: String, codec: TypeCodec[AnyRef]): AnyRef", "member" : "com.khulnasoft.spark.connector.GettableData.get", "link" : "com\/khulnasoft\/spark\/connector\/GettableData$.html#get(row:com.khulnasoft.oss.driver.api.core.cql.Row,name:String,codec:com.khulnasoft.oss.driver.api.core.type.codec.TypeCodec[AnyRef]):AnyRef", "kind" : "def"}, {"label" : "get", "tail" : "(row: Row, name: String): AnyRef", "member" : "com.khulnasoft.spark.connector.GettableData.get", "link" : "com\/khulnasoft\/spark\/connector\/GettableData$.html#get(row:com.khulnasoft.oss.driver.api.core.cql.Row,name:String):AnyRef", "kind" : "def"}, {"label" : "get", "tail" : "(row: Row, index: Int, codec: TypeCodec[AnyRef]): AnyRef", "member" : "com.khulnasoft.spark.connector.GettableData.get", "link" : "com\/khulnasoft\/spark\/connector\/GettableData$.html#get(row:com.khulnasoft.oss.driver.api.core.cql.Row,index:Int,codec:com.khulnasoft.oss.driver.api.core.type.codec.TypeCodec[AnyRef]):AnyRef", "kind" : "def"}, {"label" : "get", "tail" : "(row: Row, index: Int): AnyRef", "member" : "com.khulnasoft.spark.connector.GettableData.get", "link" : "com\/khulnasoft\/spark\/connector\/GettableData$.html#get(row:com.khulnasoft.oss.driver.api.core.cql.Row,index:Int):AnyRef", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/GettableData$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/GettableData$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/GettableData$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/GettableData$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/GettableData$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/GettableData$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/GettableData$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/GettableData$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/GettableData$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/GettableData$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/GettableData$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/GettableData$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/khulnasoft\/spark\/connector\/GettableData$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/GettableData$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/khulnasoft\/spark\/connector\/GettableData$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/khulnasoft\/spark\/connector\/GettableData$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/GettableData$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/GettableData$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/GettableData$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "com\/khulnasoft\/spark\/connector\/GettableData.html", "kind" : "trait"}, {"name" : "com.khulnasoft.spark.connector.RowCountRef", "shortDescription" : "References a row count value returned from SELECT count(*)", "object" : "com\/khulnasoft\/spark\/connector\/RowCountRef$.html", "members_object" : [{"label" : "cql", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.RowCountRef.cql", "link" : "com\/khulnasoft\/spark\/connector\/RowCountRef$.html#cql:String", "kind" : "def"}, {"label" : "cqlValueName", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.RowCountRef.cqlValueName", "link" : "com\/khulnasoft\/spark\/connector\/RowCountRef$.html#cqlValueName:String", "kind" : "def"}, {"label" : "columnName", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.RowCountRef.columnName", "link" : "com\/khulnasoft\/spark\/connector\/RowCountRef$.html#columnName:String", "kind" : "def"}, {"label" : "selectedAs", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.RowCountRef.selectedAs", "link" : "com\/khulnasoft\/spark\/connector\/RowCountRef$.html#selectedAs:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/RowCountRef$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/RowCountRef$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/RowCountRef$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/RowCountRef$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/RowCountRef$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/RowCountRef$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/RowCountRef$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/RowCountRef$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/RowCountRef$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/RowCountRef$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/RowCountRef$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/RowCountRef$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/RowCountRef$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/khulnasoft\/spark\/connector\/RowCountRef$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/RowCountRef$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/RowCountRef$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/RowCountRef$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData", "members_trait" : [{"label" : "iterator", "tail" : "(): Iterator[AnyRef]", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.iterator", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableByIndexData.html#iterator:Iterator[AnyRef]", "kind" : "def"}, {"label" : "copy", "tail" : "(): ScalaGettableByIndexData", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.copy", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableByIndexData.html#copy:com.khulnasoft.spark.connector.ScalaGettableByIndexData", "kind" : "def"}, {"label" : "getMap", "tail" : "(index: Int)(arg0: TypeConverter[K], arg1: TypeConverter[V]): Map[K, V]", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getMap", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableByIndexData.html#getMap[K,V](index:Int)(implicitevidence$3:com.khulnasoft.spark.connector.types.TypeConverter[K],implicitevidence$4:com.khulnasoft.spark.connector.types.TypeConverter[V]):Map[K,V]", "kind" : "def"}, {"label" : "getSet", "tail" : "(index: Int)(arg0: TypeConverter[T]): Set[T]", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getSet", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableByIndexData.html#getSet[T](index:Int)(implicitevidence$2:com.khulnasoft.spark.connector.types.TypeConverter[T]):Set[T]", "kind" : "def"}, {"label" : "getList", "tail" : "(index: Int)(arg0: TypeConverter[T]): Vector[T]", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getList", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableByIndexData.html#getList[T](index:Int)(implicitevidence$1:com.khulnasoft.spark.connector.types.TypeConverter[T]):Vector[T]", "kind" : "def"}, {"label" : "getTupleValueOption", "tail" : "(index: Int): Option[TupleValue]", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getTupleValueOption", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableByIndexData.html#getTupleValueOption(index:Int):Option[com.khulnasoft.spark.connector.TupleValue]", "kind" : "def"}, {"label" : "getTupleValue", "tail" : "(index: Int): TupleValue", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getTupleValue", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableByIndexData.html#getTupleValue(index:Int):com.khulnasoft.spark.connector.TupleValue", "kind" : "def"}, {"label" : "getUDTValueOption", "tail" : "(index: Int): Option[UDTValue]", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getUDTValueOption", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableByIndexData.html#getUDTValueOption(index:Int):Option[com.khulnasoft.spark.connector.UDTValue]", "kind" : "def"}, {"label" : "getUDTValue", "tail" : "(index: Int): UDTValue", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getUDTValue", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableByIndexData.html#getUDTValue(index:Int):com.khulnasoft.spark.connector.UDTValue", "kind" : "def"}, {"label" : "getInetOption", "tail" : "(index: Int): Option[InetAddress]", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getInetOption", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableByIndexData.html#getInetOption(index:Int):Option[java.net.InetAddress]", "kind" : "def"}, {"label" : "getInet", "tail" : "(index: Int): InetAddress", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getInet", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableByIndexData.html#getInet(index:Int):java.net.InetAddress", "kind" : "def"}, {"label" : "getUUIDOption", "tail" : "(index: Int): Option[UUID]", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getUUIDOption", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableByIndexData.html#getUUIDOption(index:Int):Option[java.util.UUID]", "kind" : "def"}, {"label" : "getUUID", "tail" : "(index: Int): UUID", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getUUID", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableByIndexData.html#getUUID(index:Int):java.util.UUID", "kind" : "def"}, {"label" : "getDecimalOption", "tail" : "(index: Int): Option[BigDecimal]", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getDecimalOption", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableByIndexData.html#getDecimalOption(index:Int):Option[BigDecimal]", "kind" : "def"}, {"label" : "getDecimal", "tail" : "(index: Int): BigDecimal", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getDecimal", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableByIndexData.html#getDecimal(index:Int):BigDecimal", "kind" : "def"}, {"label" : "getVarIntOption", "tail" : "(index: Int): Option[BigInt]", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getVarIntOption", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableByIndexData.html#getVarIntOption(index:Int):Option[BigInt]", "kind" : "def"}, {"label" : "getVarInt", "tail" : "(index: Int): BigInt", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getVarInt", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableByIndexData.html#getVarInt(index:Int):BigInt", "kind" : "def"}, {"label" : "getDateOption", "tail" : "(index: Int): Option[Date]", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getDateOption", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableByIndexData.html#getDateOption(index:Int):Option[java.util.Date]", "kind" : "def"}, {"label" : "getDate", "tail" : "(index: Int): Date", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getDate", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableByIndexData.html#getDate(index:Int):java.util.Date", "kind" : "def"}, {"label" : "getBytesOption", "tail" : "(index: Int): Option[ByteBuffer]", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getBytesOption", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableByIndexData.html#getBytesOption(index:Int):Option[java.nio.ByteBuffer]", "kind" : "def"}, {"label" : "getBytes", "tail" : "(index: Int): ByteBuffer", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getBytes", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableByIndexData.html#getBytes(index:Int):java.nio.ByteBuffer", "kind" : "def"}, {"label" : "getStringOption", "tail" : "(index: Int): Option[String]", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getStringOption", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableByIndexData.html#getStringOption(index:Int):Option[String]", "kind" : "def"}, {"label" : "getString", "tail" : "(index: Int): String", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getString", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableByIndexData.html#getString(index:Int):String", "kind" : "def"}, {"label" : "getDoubleOption", "tail" : "(index: Int): Option[Double]", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getDoubleOption", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableByIndexData.html#getDoubleOption(index:Int):Option[Double]", "kind" : "def"}, {"label" : "getDouble", "tail" : "(index: Int): Double", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getDouble", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableByIndexData.html#getDouble(index:Int):Double", "kind" : "def"}, {"label" : "getFloatOption", "tail" : "(index: Int): Option[Float]", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getFloatOption", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableByIndexData.html#getFloatOption(index:Int):Option[Float]", "kind" : "def"}, {"label" : "getFloat", "tail" : "(index: Int): Float", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getFloat", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableByIndexData.html#getFloat(index:Int):Float", "kind" : "def"}, {"label" : "getLongOption", "tail" : "(index: Int): Option[Long]", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getLongOption", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableByIndexData.html#getLongOption(index:Int):Option[Long]", "kind" : "def"}, {"label" : "getLong", "tail" : "(index: Int): Long", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getLong", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableByIndexData.html#getLong(index:Int):Long", "kind" : "def"}, {"label" : "getIntOption", "tail" : "(index: Int): Option[Int]", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getIntOption", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableByIndexData.html#getIntOption(index:Int):Option[Int]", "kind" : "def"}, {"label" : "getInt", "tail" : "(index: Int): Int", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getInt", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableByIndexData.html#getInt(index:Int):Int", "kind" : "def"}, {"label" : "getShortOption", "tail" : "(index: Int): Option[Short]", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getShortOption", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableByIndexData.html#getShortOption(index:Int):Option[Short]", "kind" : "def"}, {"label" : "getShort", "tail" : "(index: Int): Short", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getShort", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableByIndexData.html#getShort(index:Int):Short", "kind" : "def"}, {"label" : "getByteOption", "tail" : "(index: Int): Option[Byte]", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getByteOption", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableByIndexData.html#getByteOption(index:Int):Option[Byte]", "kind" : "def"}, {"label" : "getByte", "tail" : "(index: Int): Byte", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getByte", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableByIndexData.html#getByte(index:Int):Byte", "kind" : "def"}, {"label" : "getBooleanOption", "tail" : "(index: Int): Option[Boolean]", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getBooleanOption", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableByIndexData.html#getBooleanOption(index:Int):Option[Boolean]", "kind" : "def"}, {"label" : "getBoolean", "tail" : "(index: Int): Boolean", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getBoolean", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableByIndexData.html#getBoolean(index:Int):Boolean", "kind" : "def"}, {"label" : "get", "tail" : "(index: Int)(c: TypeConverter[T]): T", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.get", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableByIndexData.html#get[T](index:Int)(implicitc:com.khulnasoft.spark.connector.types.TypeConverter[T]):T", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "com.khulnasoft.spark.connector.GettableByIndexData.hashCode", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableByIndexData.html#hashCode():Int", "kind" : "def"}, {"label" : "equals", "tail" : "(o: Any): Boolean", "member" : "com.khulnasoft.spark.connector.GettableByIndexData.equals", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableByIndexData.html#equals(o:Any):Boolean", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.GettableByIndexData.toString", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableByIndexData.html#toString():String", "kind" : "def"}, {"label" : "dataAsString", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.GettableByIndexData.dataAsString", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableByIndexData.html#dataAsString:String", "kind" : "def"}, {"label" : "isNullAt", "tail" : "(index: Int): Boolean", "member" : "com.khulnasoft.spark.connector.GettableByIndexData.isNullAt", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableByIndexData.html#isNullAt(index:Int):Boolean", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "com.khulnasoft.spark.connector.GettableByIndexData.size", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableByIndexData.html#size:Int", "kind" : "def"}, {"label" : "length", "tail" : "(): Int", "member" : "com.khulnasoft.spark.connector.GettableByIndexData.length", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableByIndexData.html#length:Int", "kind" : "def"}, {"label" : "getRaw", "tail" : "(index: Int): AnyRef", "member" : "com.khulnasoft.spark.connector.GettableByIndexData.getRaw", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableByIndexData.html#getRaw(index:Int):AnyRef", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableByIndexData.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableByIndexData.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableByIndexData.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableByIndexData.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableByIndexData.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableByIndexData.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableByIndexData.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableByIndexData.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableByIndexData.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableByIndexData.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableByIndexData.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableByIndexData.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableByIndexData.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableByIndexData.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableByIndexData.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableByIndexData.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "columnValues", "tail" : "(): IndexedSeq[AnyRef]", "member" : "com.khulnasoft.spark.connector.GettableByIndexData.columnValues", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableByIndexData.html#columnValues:IndexedSeq[AnyRef]", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "com\/khulnasoft\/spark\/connector\/ScalaGettableByIndexData.html", "kind" : "trait"}, {"name" : "com.khulnasoft.spark.connector.ScalaGettableData", "members_trait" : [{"label" : "copy", "tail" : "(): ScalaGettableData", "member" : "com.khulnasoft.spark.connector.ScalaGettableData.copy", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableData.html#copy:com.khulnasoft.spark.connector.ScalaGettableData", "kind" : "def"}, {"label" : "getMap", "tail" : "(name: String)(arg0: TypeConverter[K], arg1: TypeConverter[V]): Map[K, V]", "member" : "com.khulnasoft.spark.connector.ScalaGettableData.getMap", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableData.html#getMap[K,V](name:String)(implicitevidence$3:com.khulnasoft.spark.connector.types.TypeConverter[K],implicitevidence$4:com.khulnasoft.spark.connector.types.TypeConverter[V]):Map[K,V]", "kind" : "def"}, {"label" : "getSet", "tail" : "(name: String)(arg0: TypeConverter[T]): Set[T]", "member" : "com.khulnasoft.spark.connector.ScalaGettableData.getSet", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableData.html#getSet[T](name:String)(implicitevidence$2:com.khulnasoft.spark.connector.types.TypeConverter[T]):Set[T]", "kind" : "def"}, {"label" : "getList", "tail" : "(name: String)(arg0: TypeConverter[T]): Vector[T]", "member" : "com.khulnasoft.spark.connector.ScalaGettableData.getList", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableData.html#getList[T](name:String)(implicitevidence$1:com.khulnasoft.spark.connector.types.TypeConverter[T]):Vector[T]", "kind" : "def"}, {"label" : "getTupleValueOption", "tail" : "(name: String): Option[TupleValue]", "member" : "com.khulnasoft.spark.connector.ScalaGettableData.getTupleValueOption", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableData.html#getTupleValueOption(name:String):Option[com.khulnasoft.spark.connector.TupleValue]", "kind" : "def"}, {"label" : "getTupleValue", "tail" : "(name: String): TupleValue", "member" : "com.khulnasoft.spark.connector.ScalaGettableData.getTupleValue", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableData.html#getTupleValue(name:String):com.khulnasoft.spark.connector.TupleValue", "kind" : "def"}, {"label" : "getUDTValueOption", "tail" : "(name: String): Option[UDTValue]", "member" : "com.khulnasoft.spark.connector.ScalaGettableData.getUDTValueOption", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableData.html#getUDTValueOption(name:String):Option[com.khulnasoft.spark.connector.UDTValue]", "kind" : "def"}, {"label" : "getUDTValue", "tail" : "(name: String): UDTValue", "member" : "com.khulnasoft.spark.connector.ScalaGettableData.getUDTValue", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableData.html#getUDTValue(name:String):com.khulnasoft.spark.connector.UDTValue", "kind" : "def"}, {"label" : "getInetOption", "tail" : "(name: String): Option[InetAddress]", "member" : "com.khulnasoft.spark.connector.ScalaGettableData.getInetOption", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableData.html#getInetOption(name:String):Option[java.net.InetAddress]", "kind" : "def"}, {"label" : "getInet", "tail" : "(name: String): InetAddress", "member" : "com.khulnasoft.spark.connector.ScalaGettableData.getInet", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableData.html#getInet(name:String):java.net.InetAddress", "kind" : "def"}, {"label" : "getUUIDOption", "tail" : "(name: String): Option[UUID]", "member" : "com.khulnasoft.spark.connector.ScalaGettableData.getUUIDOption", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableData.html#getUUIDOption(name:String):Option[java.util.UUID]", "kind" : "def"}, {"label" : "getUUID", "tail" : "(name: String): UUID", "member" : "com.khulnasoft.spark.connector.ScalaGettableData.getUUID", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableData.html#getUUID(name:String):java.util.UUID", "kind" : "def"}, {"label" : "getDecimalOption", "tail" : "(name: String): Option[BigDecimal]", "member" : "com.khulnasoft.spark.connector.ScalaGettableData.getDecimalOption", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableData.html#getDecimalOption(name:String):Option[BigDecimal]", "kind" : "def"}, {"label" : "getDecimal", "tail" : "(name: String): BigDecimal", "member" : "com.khulnasoft.spark.connector.ScalaGettableData.getDecimal", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableData.html#getDecimal(name:String):BigDecimal", "kind" : "def"}, {"label" : "getVarIntOption", "tail" : "(name: String): Option[BigInt]", "member" : "com.khulnasoft.spark.connector.ScalaGettableData.getVarIntOption", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableData.html#getVarIntOption(name:String):Option[BigInt]", "kind" : "def"}, {"label" : "getVarInt", "tail" : "(name: String): BigInt", "member" : "com.khulnasoft.spark.connector.ScalaGettableData.getVarInt", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableData.html#getVarInt(name:String):BigInt", "kind" : "def"}, {"label" : "getDateOption", "tail" : "(name: String): Option[Date]", "member" : "com.khulnasoft.spark.connector.ScalaGettableData.getDateOption", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableData.html#getDateOption(name:String):Option[java.util.Date]", "kind" : "def"}, {"label" : "getDate", "tail" : "(name: String): Date", "member" : "com.khulnasoft.spark.connector.ScalaGettableData.getDate", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableData.html#getDate(name:String):java.util.Date", "kind" : "def"}, {"label" : "getBytesOption", "tail" : "(name: String): Option[ByteBuffer]", "member" : "com.khulnasoft.spark.connector.ScalaGettableData.getBytesOption", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableData.html#getBytesOption(name:String):Option[java.nio.ByteBuffer]", "kind" : "def"}, {"label" : "getBytes", "tail" : "(name: String): ByteBuffer", "member" : "com.khulnasoft.spark.connector.ScalaGettableData.getBytes", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableData.html#getBytes(name:String):java.nio.ByteBuffer", "kind" : "def"}, {"label" : "getStringOption", "tail" : "(name: String): Option[String]", "member" : "com.khulnasoft.spark.connector.ScalaGettableData.getStringOption", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableData.html#getStringOption(name:String):Option[String]", "kind" : "def"}, {"label" : "getString", "tail" : "(name: String): String", "member" : "com.khulnasoft.spark.connector.ScalaGettableData.getString", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableData.html#getString(name:String):String", "kind" : "def"}, {"label" : "getDoubleOption", "tail" : "(name: String): Option[Double]", "member" : "com.khulnasoft.spark.connector.ScalaGettableData.getDoubleOption", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableData.html#getDoubleOption(name:String):Option[Double]", "kind" : "def"}, {"label" : "getDouble", "tail" : "(name: String): Double", "member" : "com.khulnasoft.spark.connector.ScalaGettableData.getDouble", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableData.html#getDouble(name:String):Double", "kind" : "def"}, {"label" : "getFloatOption", "tail" : "(name: String): Option[Float]", "member" : "com.khulnasoft.spark.connector.ScalaGettableData.getFloatOption", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableData.html#getFloatOption(name:String):Option[Float]", "kind" : "def"}, {"label" : "getFloat", "tail" : "(name: String): Float", "member" : "com.khulnasoft.spark.connector.ScalaGettableData.getFloat", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableData.html#getFloat(name:String):Float", "kind" : "def"}, {"label" : "getLongOption", "tail" : "(name: String): Option[Long]", "member" : "com.khulnasoft.spark.connector.ScalaGettableData.getLongOption", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableData.html#getLongOption(name:String):Option[Long]", "kind" : "def"}, {"label" : "getLong", "tail" : "(name: String): Long", "member" : "com.khulnasoft.spark.connector.ScalaGettableData.getLong", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableData.html#getLong(name:String):Long", "kind" : "def"}, {"label" : "getIntOption", "tail" : "(name: String): Option[Int]", "member" : "com.khulnasoft.spark.connector.ScalaGettableData.getIntOption", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableData.html#getIntOption(name:String):Option[Int]", "kind" : "def"}, {"label" : "getInt", "tail" : "(name: String): Int", "member" : "com.khulnasoft.spark.connector.ScalaGettableData.getInt", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableData.html#getInt(name:String):Int", "kind" : "def"}, {"label" : "getShortOption", "tail" : "(name: String): Option[Short]", "member" : "com.khulnasoft.spark.connector.ScalaGettableData.getShortOption", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableData.html#getShortOption(name:String):Option[Short]", "kind" : "def"}, {"label" : "getShort", "tail" : "(name: String): Short", "member" : "com.khulnasoft.spark.connector.ScalaGettableData.getShort", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableData.html#getShort(name:String):Short", "kind" : "def"}, {"label" : "getByteOption", "tail" : "(name: String): Option[Byte]", "member" : "com.khulnasoft.spark.connector.ScalaGettableData.getByteOption", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableData.html#getByteOption(name:String):Option[Byte]", "kind" : "def"}, {"label" : "getByte", "tail" : "(name: String): Byte", "member" : "com.khulnasoft.spark.connector.ScalaGettableData.getByte", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableData.html#getByte(name:String):Byte", "kind" : "def"}, {"label" : "getBooleanOption", "tail" : "(name: String): Option[Boolean]", "member" : "com.khulnasoft.spark.connector.ScalaGettableData.getBooleanOption", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableData.html#getBooleanOption(name:String):Option[Boolean]", "kind" : "def"}, {"label" : "getBoolean", "tail" : "(name: String): Boolean", "member" : "com.khulnasoft.spark.connector.ScalaGettableData.getBoolean", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableData.html#getBoolean(name:String):Boolean", "kind" : "def"}, {"label" : "get", "tail" : "(name: String)(c: TypeConverter[T]): T", "member" : "com.khulnasoft.spark.connector.ScalaGettableData.get", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableData.html#get[T](name:String)(implicitc:com.khulnasoft.spark.connector.types.TypeConverter[T]):T", "kind" : "def"}, {"label" : "toMap", "tail" : "(): Map[String, Any]", "member" : "com.khulnasoft.spark.connector.ScalaGettableData.toMap", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableData.html#toMap:Map[String,Any]", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "com.khulnasoft.spark.connector.GettableData.hashCode", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableData.html#hashCode():Int", "kind" : "def"}, {"label" : "equals", "tail" : "(o: Any): Boolean", "member" : "com.khulnasoft.spark.connector.GettableData.equals", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableData.html#equals(o:Any):Boolean", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.GettableData.toString", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableData.html#toString():String", "kind" : "def"}, {"label" : "dataAsString", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.GettableData.dataAsString", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableData.html#dataAsString:String", "kind" : "def"}, {"label" : "contains", "tail" : "(name: String): Boolean", "member" : "com.khulnasoft.spark.connector.GettableData.contains", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableData.html#contains(name:String):Boolean", "kind" : "def"}, {"label" : "nameOf", "tail" : "(index: Int): String", "member" : "com.khulnasoft.spark.connector.GettableData.nameOf", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableData.html#nameOf(index:Int):String", "kind" : "def"}, {"label" : "indexOf", "tail" : "(name: String): Int", "member" : "com.khulnasoft.spark.connector.GettableData.indexOf", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableData.html#indexOf(name:String):Int", "kind" : "def"}, {"label" : "isNullAt", "tail" : "(name: String): Boolean", "member" : "com.khulnasoft.spark.connector.GettableData.isNullAt", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableData.html#isNullAt(name:String):Boolean", "kind" : "def"}, {"label" : "getRawCql", "tail" : "(name: String): AnyRef", "member" : "com.khulnasoft.spark.connector.GettableData.getRawCql", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableData.html#getRawCql(name:String):AnyRef", "kind" : "def"}, {"label" : "getRaw", "tail" : "(name: String): AnyRef", "member" : "com.khulnasoft.spark.connector.GettableData.getRaw", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableData.html#getRaw(name:String):AnyRef", "kind" : "def"}, {"label" : "iterator", "tail" : "(): Iterator[AnyRef]", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.iterator", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableData.html#iterator:Iterator[AnyRef]", "kind" : "def"}, {"label" : "getMap", "tail" : "(index: Int)(arg0: TypeConverter[K], arg1: TypeConverter[V]): Map[K, V]", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getMap", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableData.html#getMap[K,V](index:Int)(implicitevidence$3:com.khulnasoft.spark.connector.types.TypeConverter[K],implicitevidence$4:com.khulnasoft.spark.connector.types.TypeConverter[V]):Map[K,V]", "kind" : "def"}, {"label" : "getSet", "tail" : "(index: Int)(arg0: TypeConverter[T]): Set[T]", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getSet", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableData.html#getSet[T](index:Int)(implicitevidence$2:com.khulnasoft.spark.connector.types.TypeConverter[T]):Set[T]", "kind" : "def"}, {"label" : "getList", "tail" : "(index: Int)(arg0: TypeConverter[T]): Vector[T]", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getList", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableData.html#getList[T](index:Int)(implicitevidence$1:com.khulnasoft.spark.connector.types.TypeConverter[T]):Vector[T]", "kind" : "def"}, {"label" : "getTupleValueOption", "tail" : "(index: Int): Option[TupleValue]", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getTupleValueOption", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableData.html#getTupleValueOption(index:Int):Option[com.khulnasoft.spark.connector.TupleValue]", "kind" : "def"}, {"label" : "getTupleValue", "tail" : "(index: Int): TupleValue", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getTupleValue", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableData.html#getTupleValue(index:Int):com.khulnasoft.spark.connector.TupleValue", "kind" : "def"}, {"label" : "getUDTValueOption", "tail" : "(index: Int): Option[UDTValue]", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getUDTValueOption", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableData.html#getUDTValueOption(index:Int):Option[com.khulnasoft.spark.connector.UDTValue]", "kind" : "def"}, {"label" : "getUDTValue", "tail" : "(index: Int): UDTValue", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getUDTValue", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableData.html#getUDTValue(index:Int):com.khulnasoft.spark.connector.UDTValue", "kind" : "def"}, {"label" : "getInetOption", "tail" : "(index: Int): Option[InetAddress]", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getInetOption", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableData.html#getInetOption(index:Int):Option[java.net.InetAddress]", "kind" : "def"}, {"label" : "getInet", "tail" : "(index: Int): InetAddress", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getInet", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableData.html#getInet(index:Int):java.net.InetAddress", "kind" : "def"}, {"label" : "getUUIDOption", "tail" : "(index: Int): Option[UUID]", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getUUIDOption", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableData.html#getUUIDOption(index:Int):Option[java.util.UUID]", "kind" : "def"}, {"label" : "getUUID", "tail" : "(index: Int): UUID", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getUUID", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableData.html#getUUID(index:Int):java.util.UUID", "kind" : "def"}, {"label" : "getDecimalOption", "tail" : "(index: Int): Option[BigDecimal]", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getDecimalOption", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableData.html#getDecimalOption(index:Int):Option[BigDecimal]", "kind" : "def"}, {"label" : "getDecimal", "tail" : "(index: Int): BigDecimal", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getDecimal", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableData.html#getDecimal(index:Int):BigDecimal", "kind" : "def"}, {"label" : "getVarIntOption", "tail" : "(index: Int): Option[BigInt]", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getVarIntOption", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableData.html#getVarIntOption(index:Int):Option[BigInt]", "kind" : "def"}, {"label" : "getVarInt", "tail" : "(index: Int): BigInt", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getVarInt", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableData.html#getVarInt(index:Int):BigInt", "kind" : "def"}, {"label" : "getDateOption", "tail" : "(index: Int): Option[Date]", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getDateOption", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableData.html#getDateOption(index:Int):Option[java.util.Date]", "kind" : "def"}, {"label" : "getDate", "tail" : "(index: Int): Date", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getDate", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableData.html#getDate(index:Int):java.util.Date", "kind" : "def"}, {"label" : "getBytesOption", "tail" : "(index: Int): Option[ByteBuffer]", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getBytesOption", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableData.html#getBytesOption(index:Int):Option[java.nio.ByteBuffer]", "kind" : "def"}, {"label" : "getBytes", "tail" : "(index: Int): ByteBuffer", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getBytes", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableData.html#getBytes(index:Int):java.nio.ByteBuffer", "kind" : "def"}, {"label" : "getStringOption", "tail" : "(index: Int): Option[String]", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getStringOption", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableData.html#getStringOption(index:Int):Option[String]", "kind" : "def"}, {"label" : "getString", "tail" : "(index: Int): String", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getString", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableData.html#getString(index:Int):String", "kind" : "def"}, {"label" : "getDoubleOption", "tail" : "(index: Int): Option[Double]", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getDoubleOption", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableData.html#getDoubleOption(index:Int):Option[Double]", "kind" : "def"}, {"label" : "getDouble", "tail" : "(index: Int): Double", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getDouble", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableData.html#getDouble(index:Int):Double", "kind" : "def"}, {"label" : "getFloatOption", "tail" : "(index: Int): Option[Float]", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getFloatOption", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableData.html#getFloatOption(index:Int):Option[Float]", "kind" : "def"}, {"label" : "getFloat", "tail" : "(index: Int): Float", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getFloat", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableData.html#getFloat(index:Int):Float", "kind" : "def"}, {"label" : "getLongOption", "tail" : "(index: Int): Option[Long]", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getLongOption", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableData.html#getLongOption(index:Int):Option[Long]", "kind" : "def"}, {"label" : "getLong", "tail" : "(index: Int): Long", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getLong", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableData.html#getLong(index:Int):Long", "kind" : "def"}, {"label" : "getIntOption", "tail" : "(index: Int): Option[Int]", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getIntOption", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableData.html#getIntOption(index:Int):Option[Int]", "kind" : "def"}, {"label" : "getInt", "tail" : "(index: Int): Int", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getInt", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableData.html#getInt(index:Int):Int", "kind" : "def"}, {"label" : "getShortOption", "tail" : "(index: Int): Option[Short]", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getShortOption", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableData.html#getShortOption(index:Int):Option[Short]", "kind" : "def"}, {"label" : "getShort", "tail" : "(index: Int): Short", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getShort", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableData.html#getShort(index:Int):Short", "kind" : "def"}, {"label" : "getByteOption", "tail" : "(index: Int): Option[Byte]", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getByteOption", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableData.html#getByteOption(index:Int):Option[Byte]", "kind" : "def"}, {"label" : "getByte", "tail" : "(index: Int): Byte", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getByte", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableData.html#getByte(index:Int):Byte", "kind" : "def"}, {"label" : "getBooleanOption", "tail" : "(index: Int): Option[Boolean]", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getBooleanOption", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableData.html#getBooleanOption(index:Int):Option[Boolean]", "kind" : "def"}, {"label" : "getBoolean", "tail" : "(index: Int): Boolean", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getBoolean", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableData.html#getBoolean(index:Int):Boolean", "kind" : "def"}, {"label" : "get", "tail" : "(index: Int)(c: TypeConverter[T]): T", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.get", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableData.html#get[T](index:Int)(implicitc:com.khulnasoft.spark.connector.types.TypeConverter[T]):T", "kind" : "def"}, {"label" : "isNullAt", "tail" : "(index: Int): Boolean", "member" : "com.khulnasoft.spark.connector.GettableByIndexData.isNullAt", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableData.html#isNullAt(index:Int):Boolean", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "com.khulnasoft.spark.connector.GettableByIndexData.size", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableData.html#size:Int", "kind" : "def"}, {"label" : "length", "tail" : "(): Int", "member" : "com.khulnasoft.spark.connector.GettableByIndexData.length", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableData.html#length:Int", "kind" : "def"}, {"label" : "getRaw", "tail" : "(index: Int): AnyRef", "member" : "com.khulnasoft.spark.connector.GettableByIndexData.getRaw", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableData.html#getRaw(index:Int):AnyRef", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableData.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableData.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableData.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableData.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableData.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableData.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableData.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableData.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableData.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableData.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableData.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableData.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableData.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableData.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableData.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableData.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "metaData", "tail" : "(): CassandraRowMetadata", "member" : "com.khulnasoft.spark.connector.GettableData.metaData", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableData.html#metaData:com.khulnasoft.spark.connector.CassandraRowMetadata", "kind" : "abstract def"}, {"label" : "columnValues", "tail" : "(): IndexedSeq[AnyRef]", "member" : "com.khulnasoft.spark.connector.GettableByIndexData.columnValues", "link" : "com\/khulnasoft\/spark\/connector\/ScalaGettableData.html#columnValues:IndexedSeq[AnyRef]", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "com\/khulnasoft\/spark\/connector\/ScalaGettableData.html", "kind" : "trait"}, {"name" : "com.khulnasoft.spark.connector.TableRef", "shortDescription" : "Store table name, keyspace name and option cluster name, keyspace is equivalent to database", "members_case class" : [{"member" : "com.khulnasoft.spark.connector.TableRef#<init>", "error" : "unsupported entity"}, {"label" : "cluster", "tail" : ": Option[String]", "member" : "com.khulnasoft.spark.connector.TableRef.cluster", "link" : "com\/khulnasoft\/spark\/connector\/TableRef.html#cluster:Option[String]", "kind" : "val"}, {"label" : "keyspace", "tail" : ": String", "member" : "com.khulnasoft.spark.connector.TableRef.keyspace", "link" : "com\/khulnasoft\/spark\/connector\/TableRef.html#keyspace:String", "kind" : "val"}, {"label" : "table", "tail" : ": String", "member" : "com.khulnasoft.spark.connector.TableRef.table", "link" : "com\/khulnasoft\/spark\/connector\/TableRef.html#table:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/TableRef.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/TableRef.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/TableRef.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/TableRef.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/TableRef.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/TableRef.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/TableRef.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/TableRef.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/TableRef.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/TableRef.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/TableRef.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/TableRef.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/TableRef.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/TableRef.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/TableRef.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/TableRef.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/khulnasoft\/spark\/connector\/TableRef.html", "kind" : "case class"}, {"name" : "com.khulnasoft.spark.connector.TTL", "shortDescription" : "References TTL of a column.", "members_case class" : [{"label" : "as", "tail" : "(alias: String): TTL", "member" : "com.khulnasoft.spark.connector.TTL.as", "link" : "com\/khulnasoft\/spark\/connector\/TTL.html#as(alias:String):com.khulnasoft.spark.connector.TTL", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.TTL.toString", "link" : "com\/khulnasoft\/spark\/connector\/TTL.html#toString():String", "kind" : "def"}, {"label" : "selectedAs", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.TTL.selectedAs", "link" : "com\/khulnasoft\/spark\/connector\/TTL.html#selectedAs:String", "kind" : "def"}, {"label" : "cqlValueName", "tail" : ": String", "member" : "com.khulnasoft.spark.connector.TTL.cqlValueName", "link" : "com\/khulnasoft\/spark\/connector\/TTL.html#cqlValueName:String", "kind" : "val"}, {"label" : "cql", "tail" : ": String", "member" : "com.khulnasoft.spark.connector.TTL.cql", "link" : "com\/khulnasoft\/spark\/connector\/TTL.html#cql:String", "kind" : "val"}, {"member" : "com.khulnasoft.spark.connector.TTL#<init>", "error" : "unsupported entity"}, {"label" : "alias", "tail" : ": Option[String]", "member" : "com.khulnasoft.spark.connector.TTL.alias", "link" : "com\/khulnasoft\/spark\/connector\/TTL.html#alias:Option[String]", "kind" : "val"}, {"label" : "columnName", "tail" : ": String", "member" : "com.khulnasoft.spark.connector.TTL.columnName", "link" : "com\/khulnasoft\/spark\/connector\/TTL.html#columnName:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/TTL.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/TTL.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/TTL.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/TTL.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/TTL.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/TTL.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/TTL.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/TTL.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/TTL.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/TTL.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/TTL.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/TTL.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/TTL.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/TTL.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/TTL.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/TTL.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/khulnasoft\/spark\/connector\/TTL.html", "kind" : "case class"}, {"name" : "com.khulnasoft.spark.connector.TupleValue", "shortDescription" : "", "object" : "com\/khulnasoft\/spark\/connector\/TupleValue$.html", "members_object" : [{"label" : "TupleValueConverter", "tail" : "", "member" : "com.khulnasoft.spark.connector.TupleValue.TupleValueConverter", "link" : "com\/khulnasoft\/spark\/connector\/TupleValue$.html#TupleValueConverter", "kind" : "implicit object"}, {"label" : "Symbol", "tail" : ": scala.reflect.api.JavaUniverse.Symbol", "member" : "com.khulnasoft.spark.connector.TupleValue.Symbol", "link" : "com\/khulnasoft\/spark\/connector\/TupleValue$.html#Symbol:reflect.runtime.universe.Symbol", "kind" : "val"}, {"label" : "TypeTag", "tail" : ": scala.reflect.api.JavaUniverse.TypeTag[TupleValue]", "member" : "com.khulnasoft.spark.connector.TupleValue.TypeTag", "link" : "com\/khulnasoft\/spark\/connector\/TupleValue$.html#TypeTag:reflect.runtime.universe.TypeTag[com.khulnasoft.spark.connector.TupleValue]", "kind" : "val"}, {"label" : "fromJavaDriverTupleValue", "tail" : "(value: oss.driver.api.core.data.TupleValue): TupleValue", "member" : "com.khulnasoft.spark.connector.TupleValue.fromJavaDriverTupleValue", "link" : "com\/khulnasoft\/spark\/connector\/TupleValue$.html#fromJavaDriverTupleValue(value:com.khulnasoft.oss.driver.api.core.data.TupleValue):com.khulnasoft.spark.connector.TupleValue", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/TupleValue$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/TupleValue$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/TupleValue$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/TupleValue$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/TupleValue$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/TupleValue$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/TupleValue$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/TupleValue$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/TupleValue$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/TupleValue$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/TupleValue$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/TupleValue$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/khulnasoft\/spark\/connector\/TupleValue$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/TupleValue$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/khulnasoft\/spark\/connector\/TupleValue$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/khulnasoft\/spark\/connector\/TupleValue$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/TupleValue$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/TupleValue$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/TupleValue$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "productElement", "tail" : "(n: Int): Any", "member" : "com.khulnasoft.spark.connector.TupleValue.productElement", "link" : "com\/khulnasoft\/spark\/connector\/TupleValue.html#productElement(n:Int):Any", "kind" : "def"}, {"label" : "productArity", "tail" : "(): Int", "member" : "com.khulnasoft.spark.connector.TupleValue.productArity", "link" : "com\/khulnasoft\/spark\/connector\/TupleValue.html#productArity:Int", "kind" : "def"}, {"label" : "columnValues", "tail" : "(): IndexedSeq[AnyRef]", "member" : "com.khulnasoft.spark.connector.TupleValue.columnValues", "link" : "com\/khulnasoft\/spark\/connector\/TupleValue.html#columnValues:IndexedSeq[AnyRef]", "kind" : "def"}, {"member" : "com.khulnasoft.spark.connector.TupleValue#<init>", "error" : "unsupported entity"}, {"label" : "values", "tail" : ": Any*", "member" : "com.khulnasoft.spark.connector.TupleValue.values", "link" : "com\/khulnasoft\/spark\/connector\/TupleValue.html#values:Any*", "kind" : "val"}, {"label" : "iterator", "tail" : "(): Iterator[AnyRef]", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.iterator", "link" : "com\/khulnasoft\/spark\/connector\/TupleValue.html#iterator:Iterator[AnyRef]", "kind" : "def"}, {"label" : "copy", "tail" : "(): ScalaGettableByIndexData", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.copy", "link" : "com\/khulnasoft\/spark\/connector\/TupleValue.html#copy:com.khulnasoft.spark.connector.ScalaGettableByIndexData", "kind" : "def"}, {"label" : "getMap", "tail" : "(index: Int)(arg0: TypeConverter[K], arg1: TypeConverter[V]): Map[K, V]", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getMap", "link" : "com\/khulnasoft\/spark\/connector\/TupleValue.html#getMap[K,V](index:Int)(implicitevidence$3:com.khulnasoft.spark.connector.types.TypeConverter[K],implicitevidence$4:com.khulnasoft.spark.connector.types.TypeConverter[V]):Map[K,V]", "kind" : "def"}, {"label" : "getSet", "tail" : "(index: Int)(arg0: TypeConverter[T]): Set[T]", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getSet", "link" : "com\/khulnasoft\/spark\/connector\/TupleValue.html#getSet[T](index:Int)(implicitevidence$2:com.khulnasoft.spark.connector.types.TypeConverter[T]):Set[T]", "kind" : "def"}, {"label" : "getList", "tail" : "(index: Int)(arg0: TypeConverter[T]): Vector[T]", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getList", "link" : "com\/khulnasoft\/spark\/connector\/TupleValue.html#getList[T](index:Int)(implicitevidence$1:com.khulnasoft.spark.connector.types.TypeConverter[T]):Vector[T]", "kind" : "def"}, {"label" : "getTupleValueOption", "tail" : "(index: Int): Option[TupleValue]", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getTupleValueOption", "link" : "com\/khulnasoft\/spark\/connector\/TupleValue.html#getTupleValueOption(index:Int):Option[com.khulnasoft.spark.connector.TupleValue]", "kind" : "def"}, {"label" : "getTupleValue", "tail" : "(index: Int): TupleValue", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getTupleValue", "link" : "com\/khulnasoft\/spark\/connector\/TupleValue.html#getTupleValue(index:Int):com.khulnasoft.spark.connector.TupleValue", "kind" : "def"}, {"label" : "getUDTValueOption", "tail" : "(index: Int): Option[UDTValue]", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getUDTValueOption", "link" : "com\/khulnasoft\/spark\/connector\/TupleValue.html#getUDTValueOption(index:Int):Option[com.khulnasoft.spark.connector.UDTValue]", "kind" : "def"}, {"label" : "getUDTValue", "tail" : "(index: Int): UDTValue", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getUDTValue", "link" : "com\/khulnasoft\/spark\/connector\/TupleValue.html#getUDTValue(index:Int):com.khulnasoft.spark.connector.UDTValue", "kind" : "def"}, {"label" : "getInetOption", "tail" : "(index: Int): Option[InetAddress]", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getInetOption", "link" : "com\/khulnasoft\/spark\/connector\/TupleValue.html#getInetOption(index:Int):Option[java.net.InetAddress]", "kind" : "def"}, {"label" : "getInet", "tail" : "(index: Int): InetAddress", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getInet", "link" : "com\/khulnasoft\/spark\/connector\/TupleValue.html#getInet(index:Int):java.net.InetAddress", "kind" : "def"}, {"label" : "getUUIDOption", "tail" : "(index: Int): Option[UUID]", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getUUIDOption", "link" : "com\/khulnasoft\/spark\/connector\/TupleValue.html#getUUIDOption(index:Int):Option[java.util.UUID]", "kind" : "def"}, {"label" : "getUUID", "tail" : "(index: Int): UUID", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getUUID", "link" : "com\/khulnasoft\/spark\/connector\/TupleValue.html#getUUID(index:Int):java.util.UUID", "kind" : "def"}, {"label" : "getDecimalOption", "tail" : "(index: Int): Option[BigDecimal]", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getDecimalOption", "link" : "com\/khulnasoft\/spark\/connector\/TupleValue.html#getDecimalOption(index:Int):Option[BigDecimal]", "kind" : "def"}, {"label" : "getDecimal", "tail" : "(index: Int): BigDecimal", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getDecimal", "link" : "com\/khulnasoft\/spark\/connector\/TupleValue.html#getDecimal(index:Int):BigDecimal", "kind" : "def"}, {"label" : "getVarIntOption", "tail" : "(index: Int): Option[BigInt]", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getVarIntOption", "link" : "com\/khulnasoft\/spark\/connector\/TupleValue.html#getVarIntOption(index:Int):Option[BigInt]", "kind" : "def"}, {"label" : "getVarInt", "tail" : "(index: Int): BigInt", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getVarInt", "link" : "com\/khulnasoft\/spark\/connector\/TupleValue.html#getVarInt(index:Int):BigInt", "kind" : "def"}, {"label" : "getDateOption", "tail" : "(index: Int): Option[Date]", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getDateOption", "link" : "com\/khulnasoft\/spark\/connector\/TupleValue.html#getDateOption(index:Int):Option[java.util.Date]", "kind" : "def"}, {"label" : "getDate", "tail" : "(index: Int): Date", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getDate", "link" : "com\/khulnasoft\/spark\/connector\/TupleValue.html#getDate(index:Int):java.util.Date", "kind" : "def"}, {"label" : "getBytesOption", "tail" : "(index: Int): Option[ByteBuffer]", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getBytesOption", "link" : "com\/khulnasoft\/spark\/connector\/TupleValue.html#getBytesOption(index:Int):Option[java.nio.ByteBuffer]", "kind" : "def"}, {"label" : "getBytes", "tail" : "(index: Int): ByteBuffer", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getBytes", "link" : "com\/khulnasoft\/spark\/connector\/TupleValue.html#getBytes(index:Int):java.nio.ByteBuffer", "kind" : "def"}, {"label" : "getStringOption", "tail" : "(index: Int): Option[String]", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getStringOption", "link" : "com\/khulnasoft\/spark\/connector\/TupleValue.html#getStringOption(index:Int):Option[String]", "kind" : "def"}, {"label" : "getString", "tail" : "(index: Int): String", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getString", "link" : "com\/khulnasoft\/spark\/connector\/TupleValue.html#getString(index:Int):String", "kind" : "def"}, {"label" : "getDoubleOption", "tail" : "(index: Int): Option[Double]", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getDoubleOption", "link" : "com\/khulnasoft\/spark\/connector\/TupleValue.html#getDoubleOption(index:Int):Option[Double]", "kind" : "def"}, {"label" : "getDouble", "tail" : "(index: Int): Double", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getDouble", "link" : "com\/khulnasoft\/spark\/connector\/TupleValue.html#getDouble(index:Int):Double", "kind" : "def"}, {"label" : "getFloatOption", "tail" : "(index: Int): Option[Float]", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getFloatOption", "link" : "com\/khulnasoft\/spark\/connector\/TupleValue.html#getFloatOption(index:Int):Option[Float]", "kind" : "def"}, {"label" : "getFloat", "tail" : "(index: Int): Float", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getFloat", "link" : "com\/khulnasoft\/spark\/connector\/TupleValue.html#getFloat(index:Int):Float", "kind" : "def"}, {"label" : "getLongOption", "tail" : "(index: Int): Option[Long]", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getLongOption", "link" : "com\/khulnasoft\/spark\/connector\/TupleValue.html#getLongOption(index:Int):Option[Long]", "kind" : "def"}, {"label" : "getLong", "tail" : "(index: Int): Long", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getLong", "link" : "com\/khulnasoft\/spark\/connector\/TupleValue.html#getLong(index:Int):Long", "kind" : "def"}, {"label" : "getIntOption", "tail" : "(index: Int): Option[Int]", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getIntOption", "link" : "com\/khulnasoft\/spark\/connector\/TupleValue.html#getIntOption(index:Int):Option[Int]", "kind" : "def"}, {"label" : "getInt", "tail" : "(index: Int): Int", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getInt", "link" : "com\/khulnasoft\/spark\/connector\/TupleValue.html#getInt(index:Int):Int", "kind" : "def"}, {"label" : "getShortOption", "tail" : "(index: Int): Option[Short]", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getShortOption", "link" : "com\/khulnasoft\/spark\/connector\/TupleValue.html#getShortOption(index:Int):Option[Short]", "kind" : "def"}, {"label" : "getShort", "tail" : "(index: Int): Short", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getShort", "link" : "com\/khulnasoft\/spark\/connector\/TupleValue.html#getShort(index:Int):Short", "kind" : "def"}, {"label" : "getByteOption", "tail" : "(index: Int): Option[Byte]", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getByteOption", "link" : "com\/khulnasoft\/spark\/connector\/TupleValue.html#getByteOption(index:Int):Option[Byte]", "kind" : "def"}, {"label" : "getByte", "tail" : "(index: Int): Byte", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getByte", "link" : "com\/khulnasoft\/spark\/connector\/TupleValue.html#getByte(index:Int):Byte", "kind" : "def"}, {"label" : "getBooleanOption", "tail" : "(index: Int): Option[Boolean]", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getBooleanOption", "link" : "com\/khulnasoft\/spark\/connector\/TupleValue.html#getBooleanOption(index:Int):Option[Boolean]", "kind" : "def"}, {"label" : "getBoolean", "tail" : "(index: Int): Boolean", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getBoolean", "link" : "com\/khulnasoft\/spark\/connector\/TupleValue.html#getBoolean(index:Int):Boolean", "kind" : "def"}, {"label" : "get", "tail" : "(index: Int)(c: TypeConverter[T]): T", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.get", "link" : "com\/khulnasoft\/spark\/connector\/TupleValue.html#get[T](index:Int)(implicitc:com.khulnasoft.spark.connector.types.TypeConverter[T]):T", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "com.khulnasoft.spark.connector.GettableByIndexData.hashCode", "link" : "com\/khulnasoft\/spark\/connector\/TupleValue.html#hashCode():Int", "kind" : "def"}, {"label" : "equals", "tail" : "(o: Any): Boolean", "member" : "com.khulnasoft.spark.connector.GettableByIndexData.equals", "link" : "com\/khulnasoft\/spark\/connector\/TupleValue.html#equals(o:Any):Boolean", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.GettableByIndexData.toString", "link" : "com\/khulnasoft\/spark\/connector\/TupleValue.html#toString():String", "kind" : "def"}, {"label" : "dataAsString", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.GettableByIndexData.dataAsString", "link" : "com\/khulnasoft\/spark\/connector\/TupleValue.html#dataAsString:String", "kind" : "def"}, {"label" : "isNullAt", "tail" : "(index: Int): Boolean", "member" : "com.khulnasoft.spark.connector.GettableByIndexData.isNullAt", "link" : "com\/khulnasoft\/spark\/connector\/TupleValue.html#isNullAt(index:Int):Boolean", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "com.khulnasoft.spark.connector.GettableByIndexData.size", "link" : "com\/khulnasoft\/spark\/connector\/TupleValue.html#size:Int", "kind" : "def"}, {"label" : "length", "tail" : "(): Int", "member" : "com.khulnasoft.spark.connector.GettableByIndexData.length", "link" : "com\/khulnasoft\/spark\/connector\/TupleValue.html#length:Int", "kind" : "def"}, {"label" : "getRaw", "tail" : "(index: Int): AnyRef", "member" : "com.khulnasoft.spark.connector.GettableByIndexData.getRaw", "link" : "com\/khulnasoft\/spark\/connector\/TupleValue.html#getRaw(index:Int):AnyRef", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/TupleValue.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/TupleValue.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/TupleValue.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/TupleValue.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/TupleValue.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/TupleValue.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/TupleValue.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/TupleValue.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/TupleValue.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/TupleValue.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/TupleValue.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/TupleValue.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/TupleValue.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/TupleValue.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/TupleValue.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/TupleValue.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/khulnasoft\/spark\/connector\/TupleValue.html", "kind" : "case class"}, {"name" : "com.khulnasoft.spark.connector.UDTValue", "shortDescription" : "", "object" : "com\/khulnasoft\/spark\/connector\/UDTValue$.html", "members_object" : [{"label" : "apply", "tail" : "(columnNames: IndexedSeq[String], columnValues: IndexedSeq[AnyRef]): UDTValue", "member" : "com.khulnasoft.spark.connector.UDTValue.apply", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue$.html#apply(columnNames:IndexedSeq[String],columnValues:IndexedSeq[AnyRef]):com.khulnasoft.spark.connector.UDTValue", "kind" : "def"}, {"label" : "UDTValueConverter", "tail" : "", "member" : "com.khulnasoft.spark.connector.UDTValue.UDTValueConverter", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue$.html#UDTValueConverter", "kind" : "implicit object"}, {"label" : "Symbol", "tail" : ": scala.reflect.api.JavaUniverse.Symbol", "member" : "com.khulnasoft.spark.connector.UDTValue.Symbol", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue$.html#Symbol:reflect.runtime.universe.Symbol", "kind" : "val"}, {"label" : "TypeTag", "tail" : ": scala.reflect.api.JavaUniverse.TypeTag[UDTValue]", "member" : "com.khulnasoft.spark.connector.UDTValue.TypeTag", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue$.html#TypeTag:reflect.runtime.universe.TypeTag[com.khulnasoft.spark.connector.UDTValue]", "kind" : "val"}, {"label" : "fromMap", "tail" : "(map: Map[String, Any]): UDTValue", "member" : "com.khulnasoft.spark.connector.UDTValue.fromMap", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue$.html#fromMap(map:Map[String,Any]):com.khulnasoft.spark.connector.UDTValue", "kind" : "def"}, {"label" : "fromJavaDriverUDTValue", "tail" : "(value: UdtValue): UDTValue", "member" : "com.khulnasoft.spark.connector.UDTValue.fromJavaDriverUDTValue", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue$.html#fromJavaDriverUDTValue(value:com.khulnasoft.oss.driver.api.core.data.UdtValue):com.khulnasoft.spark.connector.UDTValue", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "unapply", "tail" : "(t: UDTValue): Some[(IndexedSeq[String], IndexedSeq[AnyRef])]", "member" : "com.khulnasoft.spark.connector.UDTValue.unapply", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue.html#unapply(t:com.khulnasoft.spark.connector.UDTValue):Some[(IndexedSeq[String],IndexedSeq[AnyRef])]", "kind" : "def"}, {"label" : "productElement", "tail" : "(i: Int): AnyRef", "member" : "com.khulnasoft.spark.connector.UDTValue.productElement", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue.html#productElement(i:Int):AnyRef", "kind" : "def"}, {"label" : "productArity", "tail" : "(): Int", "member" : "com.khulnasoft.spark.connector.UDTValue.productArity", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue.html#productArity:Int", "kind" : "def"}, {"label" : "columnNames", "tail" : "(): IndexedSeq[String]", "member" : "com.khulnasoft.spark.connector.UDTValue.columnNames", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue.html#columnNames:IndexedSeq[String]", "kind" : "def"}, {"member" : "com.khulnasoft.spark.connector.UDTValue#<init>", "error" : "unsupported entity"}, {"member" : "com.khulnasoft.spark.connector.UDTValue#<init>", "error" : "unsupported entity"}, {"label" : "columnValues", "tail" : ": IndexedSeq[AnyRef]", "member" : "com.khulnasoft.spark.connector.UDTValue.columnValues", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue.html#columnValues:IndexedSeq[AnyRef]", "kind" : "val"}, {"label" : "metaData", "tail" : ": CassandraRowMetadata", "member" : "com.khulnasoft.spark.connector.UDTValue.metaData", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue.html#metaData:com.khulnasoft.spark.connector.CassandraRowMetadata", "kind" : "val"}, {"label" : "copy", "tail" : "(): ScalaGettableData", "member" : "com.khulnasoft.spark.connector.ScalaGettableData.copy", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue.html#copy:com.khulnasoft.spark.connector.ScalaGettableData", "kind" : "def"}, {"label" : "getMap", "tail" : "(name: String)(arg0: TypeConverter[K], arg1: TypeConverter[V]): Map[K, V]", "member" : "com.khulnasoft.spark.connector.ScalaGettableData.getMap", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue.html#getMap[K,V](name:String)(implicitevidence$3:com.khulnasoft.spark.connector.types.TypeConverter[K],implicitevidence$4:com.khulnasoft.spark.connector.types.TypeConverter[V]):Map[K,V]", "kind" : "def"}, {"label" : "getSet", "tail" : "(name: String)(arg0: TypeConverter[T]): Set[T]", "member" : "com.khulnasoft.spark.connector.ScalaGettableData.getSet", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue.html#getSet[T](name:String)(implicitevidence$2:com.khulnasoft.spark.connector.types.TypeConverter[T]):Set[T]", "kind" : "def"}, {"label" : "getList", "tail" : "(name: String)(arg0: TypeConverter[T]): Vector[T]", "member" : "com.khulnasoft.spark.connector.ScalaGettableData.getList", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue.html#getList[T](name:String)(implicitevidence$1:com.khulnasoft.spark.connector.types.TypeConverter[T]):Vector[T]", "kind" : "def"}, {"label" : "getTupleValueOption", "tail" : "(name: String): Option[TupleValue]", "member" : "com.khulnasoft.spark.connector.ScalaGettableData.getTupleValueOption", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue.html#getTupleValueOption(name:String):Option[com.khulnasoft.spark.connector.TupleValue]", "kind" : "def"}, {"label" : "getTupleValue", "tail" : "(name: String): TupleValue", "member" : "com.khulnasoft.spark.connector.ScalaGettableData.getTupleValue", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue.html#getTupleValue(name:String):com.khulnasoft.spark.connector.TupleValue", "kind" : "def"}, {"label" : "getUDTValueOption", "tail" : "(name: String): Option[UDTValue]", "member" : "com.khulnasoft.spark.connector.ScalaGettableData.getUDTValueOption", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue.html#getUDTValueOption(name:String):Option[com.khulnasoft.spark.connector.UDTValue]", "kind" : "def"}, {"label" : "getUDTValue", "tail" : "(name: String): UDTValue", "member" : "com.khulnasoft.spark.connector.ScalaGettableData.getUDTValue", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue.html#getUDTValue(name:String):com.khulnasoft.spark.connector.UDTValue", "kind" : "def"}, {"label" : "getInetOption", "tail" : "(name: String): Option[InetAddress]", "member" : "com.khulnasoft.spark.connector.ScalaGettableData.getInetOption", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue.html#getInetOption(name:String):Option[java.net.InetAddress]", "kind" : "def"}, {"label" : "getInet", "tail" : "(name: String): InetAddress", "member" : "com.khulnasoft.spark.connector.ScalaGettableData.getInet", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue.html#getInet(name:String):java.net.InetAddress", "kind" : "def"}, {"label" : "getUUIDOption", "tail" : "(name: String): Option[UUID]", "member" : "com.khulnasoft.spark.connector.ScalaGettableData.getUUIDOption", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue.html#getUUIDOption(name:String):Option[java.util.UUID]", "kind" : "def"}, {"label" : "getUUID", "tail" : "(name: String): UUID", "member" : "com.khulnasoft.spark.connector.ScalaGettableData.getUUID", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue.html#getUUID(name:String):java.util.UUID", "kind" : "def"}, {"label" : "getDecimalOption", "tail" : "(name: String): Option[BigDecimal]", "member" : "com.khulnasoft.spark.connector.ScalaGettableData.getDecimalOption", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue.html#getDecimalOption(name:String):Option[BigDecimal]", "kind" : "def"}, {"label" : "getDecimal", "tail" : "(name: String): BigDecimal", "member" : "com.khulnasoft.spark.connector.ScalaGettableData.getDecimal", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue.html#getDecimal(name:String):BigDecimal", "kind" : "def"}, {"label" : "getVarIntOption", "tail" : "(name: String): Option[BigInt]", "member" : "com.khulnasoft.spark.connector.ScalaGettableData.getVarIntOption", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue.html#getVarIntOption(name:String):Option[BigInt]", "kind" : "def"}, {"label" : "getVarInt", "tail" : "(name: String): BigInt", "member" : "com.khulnasoft.spark.connector.ScalaGettableData.getVarInt", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue.html#getVarInt(name:String):BigInt", "kind" : "def"}, {"label" : "getDateOption", "tail" : "(name: String): Option[Date]", "member" : "com.khulnasoft.spark.connector.ScalaGettableData.getDateOption", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue.html#getDateOption(name:String):Option[java.util.Date]", "kind" : "def"}, {"label" : "getDate", "tail" : "(name: String): Date", "member" : "com.khulnasoft.spark.connector.ScalaGettableData.getDate", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue.html#getDate(name:String):java.util.Date", "kind" : "def"}, {"label" : "getBytesOption", "tail" : "(name: String): Option[ByteBuffer]", "member" : "com.khulnasoft.spark.connector.ScalaGettableData.getBytesOption", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue.html#getBytesOption(name:String):Option[java.nio.ByteBuffer]", "kind" : "def"}, {"label" : "getBytes", "tail" : "(name: String): ByteBuffer", "member" : "com.khulnasoft.spark.connector.ScalaGettableData.getBytes", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue.html#getBytes(name:String):java.nio.ByteBuffer", "kind" : "def"}, {"label" : "getStringOption", "tail" : "(name: String): Option[String]", "member" : "com.khulnasoft.spark.connector.ScalaGettableData.getStringOption", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue.html#getStringOption(name:String):Option[String]", "kind" : "def"}, {"label" : "getString", "tail" : "(name: String): String", "member" : "com.khulnasoft.spark.connector.ScalaGettableData.getString", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue.html#getString(name:String):String", "kind" : "def"}, {"label" : "getDoubleOption", "tail" : "(name: String): Option[Double]", "member" : "com.khulnasoft.spark.connector.ScalaGettableData.getDoubleOption", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue.html#getDoubleOption(name:String):Option[Double]", "kind" : "def"}, {"label" : "getDouble", "tail" : "(name: String): Double", "member" : "com.khulnasoft.spark.connector.ScalaGettableData.getDouble", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue.html#getDouble(name:String):Double", "kind" : "def"}, {"label" : "getFloatOption", "tail" : "(name: String): Option[Float]", "member" : "com.khulnasoft.spark.connector.ScalaGettableData.getFloatOption", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue.html#getFloatOption(name:String):Option[Float]", "kind" : "def"}, {"label" : "getFloat", "tail" : "(name: String): Float", "member" : "com.khulnasoft.spark.connector.ScalaGettableData.getFloat", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue.html#getFloat(name:String):Float", "kind" : "def"}, {"label" : "getLongOption", "tail" : "(name: String): Option[Long]", "member" : "com.khulnasoft.spark.connector.ScalaGettableData.getLongOption", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue.html#getLongOption(name:String):Option[Long]", "kind" : "def"}, {"label" : "getLong", "tail" : "(name: String): Long", "member" : "com.khulnasoft.spark.connector.ScalaGettableData.getLong", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue.html#getLong(name:String):Long", "kind" : "def"}, {"label" : "getIntOption", "tail" : "(name: String): Option[Int]", "member" : "com.khulnasoft.spark.connector.ScalaGettableData.getIntOption", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue.html#getIntOption(name:String):Option[Int]", "kind" : "def"}, {"label" : "getInt", "tail" : "(name: String): Int", "member" : "com.khulnasoft.spark.connector.ScalaGettableData.getInt", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue.html#getInt(name:String):Int", "kind" : "def"}, {"label" : "getShortOption", "tail" : "(name: String): Option[Short]", "member" : "com.khulnasoft.spark.connector.ScalaGettableData.getShortOption", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue.html#getShortOption(name:String):Option[Short]", "kind" : "def"}, {"label" : "getShort", "tail" : "(name: String): Short", "member" : "com.khulnasoft.spark.connector.ScalaGettableData.getShort", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue.html#getShort(name:String):Short", "kind" : "def"}, {"label" : "getByteOption", "tail" : "(name: String): Option[Byte]", "member" : "com.khulnasoft.spark.connector.ScalaGettableData.getByteOption", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue.html#getByteOption(name:String):Option[Byte]", "kind" : "def"}, {"label" : "getByte", "tail" : "(name: String): Byte", "member" : "com.khulnasoft.spark.connector.ScalaGettableData.getByte", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue.html#getByte(name:String):Byte", "kind" : "def"}, {"label" : "getBooleanOption", "tail" : "(name: String): Option[Boolean]", "member" : "com.khulnasoft.spark.connector.ScalaGettableData.getBooleanOption", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue.html#getBooleanOption(name:String):Option[Boolean]", "kind" : "def"}, {"label" : "getBoolean", "tail" : "(name: String): Boolean", "member" : "com.khulnasoft.spark.connector.ScalaGettableData.getBoolean", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue.html#getBoolean(name:String):Boolean", "kind" : "def"}, {"label" : "get", "tail" : "(name: String)(c: TypeConverter[T]): T", "member" : "com.khulnasoft.spark.connector.ScalaGettableData.get", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue.html#get[T](name:String)(implicitc:com.khulnasoft.spark.connector.types.TypeConverter[T]):T", "kind" : "def"}, {"label" : "toMap", "tail" : "(): Map[String, Any]", "member" : "com.khulnasoft.spark.connector.ScalaGettableData.toMap", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue.html#toMap:Map[String,Any]", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "com.khulnasoft.spark.connector.GettableData.hashCode", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue.html#hashCode():Int", "kind" : "def"}, {"label" : "equals", "tail" : "(o: Any): Boolean", "member" : "com.khulnasoft.spark.connector.GettableData.equals", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue.html#equals(o:Any):Boolean", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.GettableData.toString", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue.html#toString():String", "kind" : "def"}, {"label" : "dataAsString", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.GettableData.dataAsString", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue.html#dataAsString:String", "kind" : "def"}, {"label" : "contains", "tail" : "(name: String): Boolean", "member" : "com.khulnasoft.spark.connector.GettableData.contains", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue.html#contains(name:String):Boolean", "kind" : "def"}, {"label" : "nameOf", "tail" : "(index: Int): String", "member" : "com.khulnasoft.spark.connector.GettableData.nameOf", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue.html#nameOf(index:Int):String", "kind" : "def"}, {"label" : "indexOf", "tail" : "(name: String): Int", "member" : "com.khulnasoft.spark.connector.GettableData.indexOf", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue.html#indexOf(name:String):Int", "kind" : "def"}, {"label" : "isNullAt", "tail" : "(name: String): Boolean", "member" : "com.khulnasoft.spark.connector.GettableData.isNullAt", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue.html#isNullAt(name:String):Boolean", "kind" : "def"}, {"label" : "getRawCql", "tail" : "(name: String): AnyRef", "member" : "com.khulnasoft.spark.connector.GettableData.getRawCql", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue.html#getRawCql(name:String):AnyRef", "kind" : "def"}, {"label" : "getRaw", "tail" : "(name: String): AnyRef", "member" : "com.khulnasoft.spark.connector.GettableData.getRaw", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue.html#getRaw(name:String):AnyRef", "kind" : "def"}, {"label" : "iterator", "tail" : "(): Iterator[AnyRef]", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.iterator", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue.html#iterator:Iterator[AnyRef]", "kind" : "def"}, {"label" : "getMap", "tail" : "(index: Int)(arg0: TypeConverter[K], arg1: TypeConverter[V]): Map[K, V]", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getMap", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue.html#getMap[K,V](index:Int)(implicitevidence$3:com.khulnasoft.spark.connector.types.TypeConverter[K],implicitevidence$4:com.khulnasoft.spark.connector.types.TypeConverter[V]):Map[K,V]", "kind" : "def"}, {"label" : "getSet", "tail" : "(index: Int)(arg0: TypeConverter[T]): Set[T]", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getSet", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue.html#getSet[T](index:Int)(implicitevidence$2:com.khulnasoft.spark.connector.types.TypeConverter[T]):Set[T]", "kind" : "def"}, {"label" : "getList", "tail" : "(index: Int)(arg0: TypeConverter[T]): Vector[T]", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getList", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue.html#getList[T](index:Int)(implicitevidence$1:com.khulnasoft.spark.connector.types.TypeConverter[T]):Vector[T]", "kind" : "def"}, {"label" : "getTupleValueOption", "tail" : "(index: Int): Option[TupleValue]", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getTupleValueOption", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue.html#getTupleValueOption(index:Int):Option[com.khulnasoft.spark.connector.TupleValue]", "kind" : "def"}, {"label" : "getTupleValue", "tail" : "(index: Int): TupleValue", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getTupleValue", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue.html#getTupleValue(index:Int):com.khulnasoft.spark.connector.TupleValue", "kind" : "def"}, {"label" : "getUDTValueOption", "tail" : "(index: Int): Option[UDTValue]", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getUDTValueOption", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue.html#getUDTValueOption(index:Int):Option[com.khulnasoft.spark.connector.UDTValue]", "kind" : "def"}, {"label" : "getUDTValue", "tail" : "(index: Int): UDTValue", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getUDTValue", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue.html#getUDTValue(index:Int):com.khulnasoft.spark.connector.UDTValue", "kind" : "def"}, {"label" : "getInetOption", "tail" : "(index: Int): Option[InetAddress]", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getInetOption", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue.html#getInetOption(index:Int):Option[java.net.InetAddress]", "kind" : "def"}, {"label" : "getInet", "tail" : "(index: Int): InetAddress", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getInet", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue.html#getInet(index:Int):java.net.InetAddress", "kind" : "def"}, {"label" : "getUUIDOption", "tail" : "(index: Int): Option[UUID]", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getUUIDOption", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue.html#getUUIDOption(index:Int):Option[java.util.UUID]", "kind" : "def"}, {"label" : "getUUID", "tail" : "(index: Int): UUID", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getUUID", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue.html#getUUID(index:Int):java.util.UUID", "kind" : "def"}, {"label" : "getDecimalOption", "tail" : "(index: Int): Option[BigDecimal]", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getDecimalOption", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue.html#getDecimalOption(index:Int):Option[BigDecimal]", "kind" : "def"}, {"label" : "getDecimal", "tail" : "(index: Int): BigDecimal", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getDecimal", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue.html#getDecimal(index:Int):BigDecimal", "kind" : "def"}, {"label" : "getVarIntOption", "tail" : "(index: Int): Option[BigInt]", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getVarIntOption", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue.html#getVarIntOption(index:Int):Option[BigInt]", "kind" : "def"}, {"label" : "getVarInt", "tail" : "(index: Int): BigInt", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getVarInt", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue.html#getVarInt(index:Int):BigInt", "kind" : "def"}, {"label" : "getDateOption", "tail" : "(index: Int): Option[Date]", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getDateOption", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue.html#getDateOption(index:Int):Option[java.util.Date]", "kind" : "def"}, {"label" : "getDate", "tail" : "(index: Int): Date", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getDate", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue.html#getDate(index:Int):java.util.Date", "kind" : "def"}, {"label" : "getBytesOption", "tail" : "(index: Int): Option[ByteBuffer]", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getBytesOption", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue.html#getBytesOption(index:Int):Option[java.nio.ByteBuffer]", "kind" : "def"}, {"label" : "getBytes", "tail" : "(index: Int): ByteBuffer", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getBytes", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue.html#getBytes(index:Int):java.nio.ByteBuffer", "kind" : "def"}, {"label" : "getStringOption", "tail" : "(index: Int): Option[String]", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getStringOption", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue.html#getStringOption(index:Int):Option[String]", "kind" : "def"}, {"label" : "getString", "tail" : "(index: Int): String", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getString", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue.html#getString(index:Int):String", "kind" : "def"}, {"label" : "getDoubleOption", "tail" : "(index: Int): Option[Double]", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getDoubleOption", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue.html#getDoubleOption(index:Int):Option[Double]", "kind" : "def"}, {"label" : "getDouble", "tail" : "(index: Int): Double", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getDouble", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue.html#getDouble(index:Int):Double", "kind" : "def"}, {"label" : "getFloatOption", "tail" : "(index: Int): Option[Float]", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getFloatOption", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue.html#getFloatOption(index:Int):Option[Float]", "kind" : "def"}, {"label" : "getFloat", "tail" : "(index: Int): Float", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getFloat", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue.html#getFloat(index:Int):Float", "kind" : "def"}, {"label" : "getLongOption", "tail" : "(index: Int): Option[Long]", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getLongOption", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue.html#getLongOption(index:Int):Option[Long]", "kind" : "def"}, {"label" : "getLong", "tail" : "(index: Int): Long", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getLong", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue.html#getLong(index:Int):Long", "kind" : "def"}, {"label" : "getIntOption", "tail" : "(index: Int): Option[Int]", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getIntOption", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue.html#getIntOption(index:Int):Option[Int]", "kind" : "def"}, {"label" : "getInt", "tail" : "(index: Int): Int", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getInt", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue.html#getInt(index:Int):Int", "kind" : "def"}, {"label" : "getShortOption", "tail" : "(index: Int): Option[Short]", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getShortOption", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue.html#getShortOption(index:Int):Option[Short]", "kind" : "def"}, {"label" : "getShort", "tail" : "(index: Int): Short", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getShort", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue.html#getShort(index:Int):Short", "kind" : "def"}, {"label" : "getByteOption", "tail" : "(index: Int): Option[Byte]", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getByteOption", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue.html#getByteOption(index:Int):Option[Byte]", "kind" : "def"}, {"label" : "getByte", "tail" : "(index: Int): Byte", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getByte", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue.html#getByte(index:Int):Byte", "kind" : "def"}, {"label" : "getBooleanOption", "tail" : "(index: Int): Option[Boolean]", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getBooleanOption", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue.html#getBooleanOption(index:Int):Option[Boolean]", "kind" : "def"}, {"label" : "getBoolean", "tail" : "(index: Int): Boolean", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.getBoolean", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue.html#getBoolean(index:Int):Boolean", "kind" : "def"}, {"label" : "get", "tail" : "(index: Int)(c: TypeConverter[T]): T", "member" : "com.khulnasoft.spark.connector.ScalaGettableByIndexData.get", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue.html#get[T](index:Int)(implicitc:com.khulnasoft.spark.connector.types.TypeConverter[T]):T", "kind" : "def"}, {"label" : "isNullAt", "tail" : "(index: Int): Boolean", "member" : "com.khulnasoft.spark.connector.GettableByIndexData.isNullAt", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue.html#isNullAt(index:Int):Boolean", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "com.khulnasoft.spark.connector.GettableByIndexData.size", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue.html#size:Int", "kind" : "def"}, {"label" : "length", "tail" : "(): Int", "member" : "com.khulnasoft.spark.connector.GettableByIndexData.length", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue.html#length:Int", "kind" : "def"}, {"label" : "getRaw", "tail" : "(index: Int): AnyRef", "member" : "com.khulnasoft.spark.connector.GettableByIndexData.getRaw", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue.html#getRaw(index:Int):AnyRef", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/UDTValue.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/khulnasoft\/spark\/connector\/UDTValue.html", "kind" : "case class"}, {"name" : "com.khulnasoft.spark.connector.WriteTime", "shortDescription" : "References write time of a column.", "members_case class" : [{"label" : "as", "tail" : "(alias: String): WriteTime", "member" : "com.khulnasoft.spark.connector.WriteTime.as", "link" : "com\/khulnasoft\/spark\/connector\/WriteTime.html#as(alias:String):com.khulnasoft.spark.connector.WriteTime", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.WriteTime.toString", "link" : "com\/khulnasoft\/spark\/connector\/WriteTime.html#toString():String", "kind" : "def"}, {"label" : "selectedAs", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.WriteTime.selectedAs", "link" : "com\/khulnasoft\/spark\/connector\/WriteTime.html#selectedAs:String", "kind" : "def"}, {"label" : "cqlValueName", "tail" : ": String", "member" : "com.khulnasoft.spark.connector.WriteTime.cqlValueName", "link" : "com\/khulnasoft\/spark\/connector\/WriteTime.html#cqlValueName:String", "kind" : "val"}, {"label" : "cql", "tail" : ": String", "member" : "com.khulnasoft.spark.connector.WriteTime.cql", "link" : "com\/khulnasoft\/spark\/connector\/WriteTime.html#cql:String", "kind" : "val"}, {"member" : "com.khulnasoft.spark.connector.WriteTime#<init>", "error" : "unsupported entity"}, {"label" : "alias", "tail" : ": Option[String]", "member" : "com.khulnasoft.spark.connector.WriteTime.alias", "link" : "com\/khulnasoft\/spark\/connector\/WriteTime.html#alias:Option[String]", "kind" : "val"}, {"label" : "columnName", "tail" : ": String", "member" : "com.khulnasoft.spark.connector.WriteTime.columnName", "link" : "com\/khulnasoft\/spark\/connector\/WriteTime.html#columnName:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/WriteTime.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/WriteTime.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/WriteTime.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/WriteTime.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/WriteTime.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/WriteTime.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/WriteTime.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/WriteTime.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/WriteTime.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/WriteTime.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/WriteTime.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/WriteTime.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/WriteTime.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/WriteTime.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/WriteTime.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/WriteTime.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/khulnasoft\/spark\/connector\/WriteTime.html", "kind" : "case class"}], "com.khulnasoft.spark.connector.mapper" : [{"name" : "com.khulnasoft.spark.connector.mapper.ColumnMapForReading", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapForReading.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapForReading.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapForReading.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapForReading.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapForReading.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapForReading.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapForReading.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapForReading.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapForReading.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapForReading.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapForReading.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapForReading.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapForReading.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapForReading.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapForReading.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapForReading.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapForReading.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapForReading.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapForReading.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "allowsNull", "tail" : "(): Boolean", "member" : "com.khulnasoft.spark.connector.mapper.ColumnMapForReading.allowsNull", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapForReading.html#allowsNull:Boolean", "kind" : "abstract def"}, {"label" : "setters", "tail" : "(): Map[String, ColumnRef]", "member" : "com.khulnasoft.spark.connector.mapper.ColumnMapForReading.setters", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapForReading.html#setters:Map[String,com.khulnasoft.spark.connector.ColumnRef]", "kind" : "abstract def"}, {"label" : "constructor", "tail" : "(): Seq[ColumnRef]", "member" : "com.khulnasoft.spark.connector.mapper.ColumnMapForReading.constructor", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapForReading.html#constructor:Seq[com.khulnasoft.spark.connector.ColumnRef]", "kind" : "abstract def"}], "shortDescription" : "A column map for reading objects from Cassandra.", "trait" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapForReading.html", "kind" : "trait"}, {"name" : "com.khulnasoft.spark.connector.mapper.ColumnMapForWriting", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapForWriting.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapForWriting.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapForWriting.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapForWriting.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapForWriting.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapForWriting.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapForWriting.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapForWriting.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapForWriting.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapForWriting.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapForWriting.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapForWriting.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapForWriting.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapForWriting.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapForWriting.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapForWriting.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapForWriting.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapForWriting.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapForWriting.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "getters", "tail" : "(): Map[String, ColumnRef]", "member" : "com.khulnasoft.spark.connector.mapper.ColumnMapForWriting.getters", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapForWriting.html#getters:Map[String,com.khulnasoft.spark.connector.ColumnRef]", "kind" : "abstract def"}], "shortDescription" : "A column map for saving objects to Cassandra.", "trait" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapForWriting.html", "kind" : "trait"}, {"name" : "com.khulnasoft.spark.connector.mapper.ColumnMapper", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapper.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapper.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapper.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapper.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapper.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapper.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapper.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapper.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapper.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapper.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapper.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapper.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapper.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapper.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapper.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapper.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapper.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapper.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapper.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "newTable", "tail" : "(keyspaceName: String, tableName: String, protocolVersion: ProtocolVersion): TableDef", "member" : "com.khulnasoft.spark.connector.mapper.ColumnMapper.newTable", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapper.html#newTable(keyspaceName:String,tableName:String,protocolVersion:com.khulnasoft.oss.driver.api.core.ProtocolVersion):com.khulnasoft.spark.connector.cql.TableDef", "kind" : "abstract def"}, {"label" : "columnMapForWriting", "tail" : "(struct: StructDef, selectedColumns: IndexedSeq[ColumnRef]): ColumnMapForWriting", "member" : "com.khulnasoft.spark.connector.mapper.ColumnMapper.columnMapForWriting", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapper.html#columnMapForWriting(struct:com.khulnasoft.spark.connector.cql.StructDef,selectedColumns:IndexedSeq[com.khulnasoft.spark.connector.ColumnRef]):com.khulnasoft.spark.connector.mapper.ColumnMapForWriting", "kind" : "abstract def"}, {"label" : "columnMapForReading", "tail" : "(struct: StructDef, selectedColumns: IndexedSeq[ColumnRef]): ColumnMapForReading", "member" : "com.khulnasoft.spark.connector.mapper.ColumnMapper.columnMapForReading", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapper.html#columnMapForReading(struct:com.khulnasoft.spark.connector.cql.StructDef,selectedColumns:IndexedSeq[com.khulnasoft.spark.connector.ColumnRef]):com.khulnasoft.spark.connector.mapper.ColumnMapForReading", "kind" : "abstract def"}], "shortDescription" : "Produces ColumnMapForReading or ColumnMapForWriting objects that mapclass T properties to columns in a given Cassandra table.", "object" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapper$.html", "members_object" : [{"label" : "tuple22ColumnMapper", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[A1], arg1: scala.reflect.api.JavaUniverse.TypeTag[A2], arg2: scala.reflect.api.JavaUniverse.TypeTag[A3], arg3: scala.reflect.api.JavaUniverse.TypeTag[A4], arg4: scala.reflect.api.JavaUniverse.TypeTag[A5], arg5: scala.reflect.api.JavaUniverse.TypeTag[A6], arg6: scala.reflect.api.JavaUniverse.TypeTag[A7], arg7: scala.reflect.api.JavaUniverse.TypeTag[A8], arg8: scala.reflect.api.JavaUniverse.TypeTag[A9], arg9: scala.reflect.api.JavaUniverse.TypeTag[A10], arg10: scala.reflect.api.JavaUniverse.TypeTag[A11], arg11: scala.reflect.api.JavaUniverse.TypeTag[A12], arg12: scala.reflect.api.JavaUniverse.TypeTag[A13], arg13: scala.reflect.api.JavaUniverse.TypeTag[A14], arg14: scala.reflect.api.JavaUniverse.TypeTag[A15], arg15: scala.reflect.api.JavaUniverse.TypeTag[A16], arg16: scala.reflect.api.JavaUniverse.TypeTag[A17], arg17: scala.reflect.api.JavaUniverse.TypeTag[A18], arg18: scala.reflect.api.JavaUniverse.TypeTag[A19], arg19: scala.reflect.api.JavaUniverse.TypeTag[A20], arg20: scala.reflect.api.JavaUniverse.TypeTag[A21], arg21: scala.reflect.api.JavaUniverse.TypeTag[A22]): TupleColumnMapper[(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21, A22)]", "member" : "com.khulnasoft.spark.connector.mapper.ColumnMapper.tuple22ColumnMapper", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapper$.html#tuple22ColumnMapper[A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,A21,A22](implicitevidence$233:reflect.runtime.universe.TypeTag[A1],implicitevidence$234:reflect.runtime.universe.TypeTag[A2],implicitevidence$235:reflect.runtime.universe.TypeTag[A3],implicitevidence$236:reflect.runtime.universe.TypeTag[A4],implicitevidence$237:reflect.runtime.universe.TypeTag[A5],implicitevidence$238:reflect.runtime.universe.TypeTag[A6],implicitevidence$239:reflect.runtime.universe.TypeTag[A7],implicitevidence$240:reflect.runtime.universe.TypeTag[A8],implicitevidence$241:reflect.runtime.universe.TypeTag[A9],implicitevidence$242:reflect.runtime.universe.TypeTag[A10],implicitevidence$243:reflect.runtime.universe.TypeTag[A11],implicitevidence$244:reflect.runtime.universe.TypeTag[A12],implicitevidence$245:reflect.runtime.universe.TypeTag[A13],implicitevidence$246:reflect.runtime.universe.TypeTag[A14],implicitevidence$247:reflect.runtime.universe.TypeTag[A15],implicitevidence$248:reflect.runtime.universe.TypeTag[A16],implicitevidence$249:reflect.runtime.universe.TypeTag[A17],implicitevidence$250:reflect.runtime.universe.TypeTag[A18],implicitevidence$251:reflect.runtime.universe.TypeTag[A19],implicitevidence$252:reflect.runtime.universe.TypeTag[A20],implicitevidence$253:reflect.runtime.universe.TypeTag[A21],implicitevidence$254:reflect.runtime.universe.TypeTag[A22]):com.khulnasoft.spark.connector.mapper.TupleColumnMapper[(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,A21,A22)]", "kind" : "implicit def"}, {"label" : "tuple21ColumnMapper", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[A1], arg1: scala.reflect.api.JavaUniverse.TypeTag[A2], arg2: scala.reflect.api.JavaUniverse.TypeTag[A3], arg3: scala.reflect.api.JavaUniverse.TypeTag[A4], arg4: scala.reflect.api.JavaUniverse.TypeTag[A5], arg5: scala.reflect.api.JavaUniverse.TypeTag[A6], arg6: scala.reflect.api.JavaUniverse.TypeTag[A7], arg7: scala.reflect.api.JavaUniverse.TypeTag[A8], arg8: scala.reflect.api.JavaUniverse.TypeTag[A9], arg9: scala.reflect.api.JavaUniverse.TypeTag[A10], arg10: scala.reflect.api.JavaUniverse.TypeTag[A11], arg11: scala.reflect.api.JavaUniverse.TypeTag[A12], arg12: scala.reflect.api.JavaUniverse.TypeTag[A13], arg13: scala.reflect.api.JavaUniverse.TypeTag[A14], arg14: scala.reflect.api.JavaUniverse.TypeTag[A15], arg15: scala.reflect.api.JavaUniverse.TypeTag[A16], arg16: scala.reflect.api.JavaUniverse.TypeTag[A17], arg17: scala.reflect.api.JavaUniverse.TypeTag[A18], arg18: scala.reflect.api.JavaUniverse.TypeTag[A19], arg19: scala.reflect.api.JavaUniverse.TypeTag[A20], arg20: scala.reflect.api.JavaUniverse.TypeTag[A21]): TupleColumnMapper[(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20, A21)]", "member" : "com.khulnasoft.spark.connector.mapper.ColumnMapper.tuple21ColumnMapper", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapper$.html#tuple21ColumnMapper[A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,A21](implicitevidence$212:reflect.runtime.universe.TypeTag[A1],implicitevidence$213:reflect.runtime.universe.TypeTag[A2],implicitevidence$214:reflect.runtime.universe.TypeTag[A3],implicitevidence$215:reflect.runtime.universe.TypeTag[A4],implicitevidence$216:reflect.runtime.universe.TypeTag[A5],implicitevidence$217:reflect.runtime.universe.TypeTag[A6],implicitevidence$218:reflect.runtime.universe.TypeTag[A7],implicitevidence$219:reflect.runtime.universe.TypeTag[A8],implicitevidence$220:reflect.runtime.universe.TypeTag[A9],implicitevidence$221:reflect.runtime.universe.TypeTag[A10],implicitevidence$222:reflect.runtime.universe.TypeTag[A11],implicitevidence$223:reflect.runtime.universe.TypeTag[A12],implicitevidence$224:reflect.runtime.universe.TypeTag[A13],implicitevidence$225:reflect.runtime.universe.TypeTag[A14],implicitevidence$226:reflect.runtime.universe.TypeTag[A15],implicitevidence$227:reflect.runtime.universe.TypeTag[A16],implicitevidence$228:reflect.runtime.universe.TypeTag[A17],implicitevidence$229:reflect.runtime.universe.TypeTag[A18],implicitevidence$230:reflect.runtime.universe.TypeTag[A19],implicitevidence$231:reflect.runtime.universe.TypeTag[A20],implicitevidence$232:reflect.runtime.universe.TypeTag[A21]):com.khulnasoft.spark.connector.mapper.TupleColumnMapper[(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20,A21)]", "kind" : "implicit def"}, {"label" : "tuple20ColumnMapper", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[A1], arg1: scala.reflect.api.JavaUniverse.TypeTag[A2], arg2: scala.reflect.api.JavaUniverse.TypeTag[A3], arg3: scala.reflect.api.JavaUniverse.TypeTag[A4], arg4: scala.reflect.api.JavaUniverse.TypeTag[A5], arg5: scala.reflect.api.JavaUniverse.TypeTag[A6], arg6: scala.reflect.api.JavaUniverse.TypeTag[A7], arg7: scala.reflect.api.JavaUniverse.TypeTag[A8], arg8: scala.reflect.api.JavaUniverse.TypeTag[A9], arg9: scala.reflect.api.JavaUniverse.TypeTag[A10], arg10: scala.reflect.api.JavaUniverse.TypeTag[A11], arg11: scala.reflect.api.JavaUniverse.TypeTag[A12], arg12: scala.reflect.api.JavaUniverse.TypeTag[A13], arg13: scala.reflect.api.JavaUniverse.TypeTag[A14], arg14: scala.reflect.api.JavaUniverse.TypeTag[A15], arg15: scala.reflect.api.JavaUniverse.TypeTag[A16], arg16: scala.reflect.api.JavaUniverse.TypeTag[A17], arg17: scala.reflect.api.JavaUniverse.TypeTag[A18], arg18: scala.reflect.api.JavaUniverse.TypeTag[A19], arg19: scala.reflect.api.JavaUniverse.TypeTag[A20]): TupleColumnMapper[(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19, A20)]", "member" : "com.khulnasoft.spark.connector.mapper.ColumnMapper.tuple20ColumnMapper", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapper$.html#tuple20ColumnMapper[A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20](implicitevidence$192:reflect.runtime.universe.TypeTag[A1],implicitevidence$193:reflect.runtime.universe.TypeTag[A2],implicitevidence$194:reflect.runtime.universe.TypeTag[A3],implicitevidence$195:reflect.runtime.universe.TypeTag[A4],implicitevidence$196:reflect.runtime.universe.TypeTag[A5],implicitevidence$197:reflect.runtime.universe.TypeTag[A6],implicitevidence$198:reflect.runtime.universe.TypeTag[A7],implicitevidence$199:reflect.runtime.universe.TypeTag[A8],implicitevidence$200:reflect.runtime.universe.TypeTag[A9],implicitevidence$201:reflect.runtime.universe.TypeTag[A10],implicitevidence$202:reflect.runtime.universe.TypeTag[A11],implicitevidence$203:reflect.runtime.universe.TypeTag[A12],implicitevidence$204:reflect.runtime.universe.TypeTag[A13],implicitevidence$205:reflect.runtime.universe.TypeTag[A14],implicitevidence$206:reflect.runtime.universe.TypeTag[A15],implicitevidence$207:reflect.runtime.universe.TypeTag[A16],implicitevidence$208:reflect.runtime.universe.TypeTag[A17],implicitevidence$209:reflect.runtime.universe.TypeTag[A18],implicitevidence$210:reflect.runtime.universe.TypeTag[A19],implicitevidence$211:reflect.runtime.universe.TypeTag[A20]):com.khulnasoft.spark.connector.mapper.TupleColumnMapper[(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19,A20)]", "kind" : "implicit def"}, {"label" : "tuple19ColumnMapper", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[A1], arg1: scala.reflect.api.JavaUniverse.TypeTag[A2], arg2: scala.reflect.api.JavaUniverse.TypeTag[A3], arg3: scala.reflect.api.JavaUniverse.TypeTag[A4], arg4: scala.reflect.api.JavaUniverse.TypeTag[A5], arg5: scala.reflect.api.JavaUniverse.TypeTag[A6], arg6: scala.reflect.api.JavaUniverse.TypeTag[A7], arg7: scala.reflect.api.JavaUniverse.TypeTag[A8], arg8: scala.reflect.api.JavaUniverse.TypeTag[A9], arg9: scala.reflect.api.JavaUniverse.TypeTag[A10], arg10: scala.reflect.api.JavaUniverse.TypeTag[A11], arg11: scala.reflect.api.JavaUniverse.TypeTag[A12], arg12: scala.reflect.api.JavaUniverse.TypeTag[A13], arg13: scala.reflect.api.JavaUniverse.TypeTag[A14], arg14: scala.reflect.api.JavaUniverse.TypeTag[A15], arg15: scala.reflect.api.JavaUniverse.TypeTag[A16], arg16: scala.reflect.api.JavaUniverse.TypeTag[A17], arg17: scala.reflect.api.JavaUniverse.TypeTag[A18], arg18: scala.reflect.api.JavaUniverse.TypeTag[A19]): TupleColumnMapper[(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18, A19)]", "member" : "com.khulnasoft.spark.connector.mapper.ColumnMapper.tuple19ColumnMapper", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapper$.html#tuple19ColumnMapper[A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19](implicitevidence$173:reflect.runtime.universe.TypeTag[A1],implicitevidence$174:reflect.runtime.universe.TypeTag[A2],implicitevidence$175:reflect.runtime.universe.TypeTag[A3],implicitevidence$176:reflect.runtime.universe.TypeTag[A4],implicitevidence$177:reflect.runtime.universe.TypeTag[A5],implicitevidence$178:reflect.runtime.universe.TypeTag[A6],implicitevidence$179:reflect.runtime.universe.TypeTag[A7],implicitevidence$180:reflect.runtime.universe.TypeTag[A8],implicitevidence$181:reflect.runtime.universe.TypeTag[A9],implicitevidence$182:reflect.runtime.universe.TypeTag[A10],implicitevidence$183:reflect.runtime.universe.TypeTag[A11],implicitevidence$184:reflect.runtime.universe.TypeTag[A12],implicitevidence$185:reflect.runtime.universe.TypeTag[A13],implicitevidence$186:reflect.runtime.universe.TypeTag[A14],implicitevidence$187:reflect.runtime.universe.TypeTag[A15],implicitevidence$188:reflect.runtime.universe.TypeTag[A16],implicitevidence$189:reflect.runtime.universe.TypeTag[A17],implicitevidence$190:reflect.runtime.universe.TypeTag[A18],implicitevidence$191:reflect.runtime.universe.TypeTag[A19]):com.khulnasoft.spark.connector.mapper.TupleColumnMapper[(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,A19)]", "kind" : "implicit def"}, {"label" : "tuple18ColumnMapper", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[A1], arg1: scala.reflect.api.JavaUniverse.TypeTag[A2], arg2: scala.reflect.api.JavaUniverse.TypeTag[A3], arg3: scala.reflect.api.JavaUniverse.TypeTag[A4], arg4: scala.reflect.api.JavaUniverse.TypeTag[A5], arg5: scala.reflect.api.JavaUniverse.TypeTag[A6], arg6: scala.reflect.api.JavaUniverse.TypeTag[A7], arg7: scala.reflect.api.JavaUniverse.TypeTag[A8], arg8: scala.reflect.api.JavaUniverse.TypeTag[A9], arg9: scala.reflect.api.JavaUniverse.TypeTag[A10], arg10: scala.reflect.api.JavaUniverse.TypeTag[A11], arg11: scala.reflect.api.JavaUniverse.TypeTag[A12], arg12: scala.reflect.api.JavaUniverse.TypeTag[A13], arg13: scala.reflect.api.JavaUniverse.TypeTag[A14], arg14: scala.reflect.api.JavaUniverse.TypeTag[A15], arg15: scala.reflect.api.JavaUniverse.TypeTag[A16], arg16: scala.reflect.api.JavaUniverse.TypeTag[A17], arg17: scala.reflect.api.JavaUniverse.TypeTag[A18]): TupleColumnMapper[(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17, A18)]", "member" : "com.khulnasoft.spark.connector.mapper.ColumnMapper.tuple18ColumnMapper", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapper$.html#tuple18ColumnMapper[A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18](implicitevidence$155:reflect.runtime.universe.TypeTag[A1],implicitevidence$156:reflect.runtime.universe.TypeTag[A2],implicitevidence$157:reflect.runtime.universe.TypeTag[A3],implicitevidence$158:reflect.runtime.universe.TypeTag[A4],implicitevidence$159:reflect.runtime.universe.TypeTag[A5],implicitevidence$160:reflect.runtime.universe.TypeTag[A6],implicitevidence$161:reflect.runtime.universe.TypeTag[A7],implicitevidence$162:reflect.runtime.universe.TypeTag[A8],implicitevidence$163:reflect.runtime.universe.TypeTag[A9],implicitevidence$164:reflect.runtime.universe.TypeTag[A10],implicitevidence$165:reflect.runtime.universe.TypeTag[A11],implicitevidence$166:reflect.runtime.universe.TypeTag[A12],implicitevidence$167:reflect.runtime.universe.TypeTag[A13],implicitevidence$168:reflect.runtime.universe.TypeTag[A14],implicitevidence$169:reflect.runtime.universe.TypeTag[A15],implicitevidence$170:reflect.runtime.universe.TypeTag[A16],implicitevidence$171:reflect.runtime.universe.TypeTag[A17],implicitevidence$172:reflect.runtime.universe.TypeTag[A18]):com.khulnasoft.spark.connector.mapper.TupleColumnMapper[(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18)]", "kind" : "implicit def"}, {"label" : "tuple17ColumnMapper", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[A1], arg1: scala.reflect.api.JavaUniverse.TypeTag[A2], arg2: scala.reflect.api.JavaUniverse.TypeTag[A3], arg3: scala.reflect.api.JavaUniverse.TypeTag[A4], arg4: scala.reflect.api.JavaUniverse.TypeTag[A5], arg5: scala.reflect.api.JavaUniverse.TypeTag[A6], arg6: scala.reflect.api.JavaUniverse.TypeTag[A7], arg7: scala.reflect.api.JavaUniverse.TypeTag[A8], arg8: scala.reflect.api.JavaUniverse.TypeTag[A9], arg9: scala.reflect.api.JavaUniverse.TypeTag[A10], arg10: scala.reflect.api.JavaUniverse.TypeTag[A11], arg11: scala.reflect.api.JavaUniverse.TypeTag[A12], arg12: scala.reflect.api.JavaUniverse.TypeTag[A13], arg13: scala.reflect.api.JavaUniverse.TypeTag[A14], arg14: scala.reflect.api.JavaUniverse.TypeTag[A15], arg15: scala.reflect.api.JavaUniverse.TypeTag[A16], arg16: scala.reflect.api.JavaUniverse.TypeTag[A17]): TupleColumnMapper[(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16, A17)]", "member" : "com.khulnasoft.spark.connector.mapper.ColumnMapper.tuple17ColumnMapper", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapper$.html#tuple17ColumnMapper[A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17](implicitevidence$138:reflect.runtime.universe.TypeTag[A1],implicitevidence$139:reflect.runtime.universe.TypeTag[A2],implicitevidence$140:reflect.runtime.universe.TypeTag[A3],implicitevidence$141:reflect.runtime.universe.TypeTag[A4],implicitevidence$142:reflect.runtime.universe.TypeTag[A5],implicitevidence$143:reflect.runtime.universe.TypeTag[A6],implicitevidence$144:reflect.runtime.universe.TypeTag[A7],implicitevidence$145:reflect.runtime.universe.TypeTag[A8],implicitevidence$146:reflect.runtime.universe.TypeTag[A9],implicitevidence$147:reflect.runtime.universe.TypeTag[A10],implicitevidence$148:reflect.runtime.universe.TypeTag[A11],implicitevidence$149:reflect.runtime.universe.TypeTag[A12],implicitevidence$150:reflect.runtime.universe.TypeTag[A13],implicitevidence$151:reflect.runtime.universe.TypeTag[A14],implicitevidence$152:reflect.runtime.universe.TypeTag[A15],implicitevidence$153:reflect.runtime.universe.TypeTag[A16],implicitevidence$154:reflect.runtime.universe.TypeTag[A17]):com.khulnasoft.spark.connector.mapper.TupleColumnMapper[(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17)]", "kind" : "implicit def"}, {"label" : "tuple16ColumnMapper", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[A1], arg1: scala.reflect.api.JavaUniverse.TypeTag[A2], arg2: scala.reflect.api.JavaUniverse.TypeTag[A3], arg3: scala.reflect.api.JavaUniverse.TypeTag[A4], arg4: scala.reflect.api.JavaUniverse.TypeTag[A5], arg5: scala.reflect.api.JavaUniverse.TypeTag[A6], arg6: scala.reflect.api.JavaUniverse.TypeTag[A7], arg7: scala.reflect.api.JavaUniverse.TypeTag[A8], arg8: scala.reflect.api.JavaUniverse.TypeTag[A9], arg9: scala.reflect.api.JavaUniverse.TypeTag[A10], arg10: scala.reflect.api.JavaUniverse.TypeTag[A11], arg11: scala.reflect.api.JavaUniverse.TypeTag[A12], arg12: scala.reflect.api.JavaUniverse.TypeTag[A13], arg13: scala.reflect.api.JavaUniverse.TypeTag[A14], arg14: scala.reflect.api.JavaUniverse.TypeTag[A15], arg15: scala.reflect.api.JavaUniverse.TypeTag[A16]): TupleColumnMapper[(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16)]", "member" : "com.khulnasoft.spark.connector.mapper.ColumnMapper.tuple16ColumnMapper", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapper$.html#tuple16ColumnMapper[A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16](implicitevidence$122:reflect.runtime.universe.TypeTag[A1],implicitevidence$123:reflect.runtime.universe.TypeTag[A2],implicitevidence$124:reflect.runtime.universe.TypeTag[A3],implicitevidence$125:reflect.runtime.universe.TypeTag[A4],implicitevidence$126:reflect.runtime.universe.TypeTag[A5],implicitevidence$127:reflect.runtime.universe.TypeTag[A6],implicitevidence$128:reflect.runtime.universe.TypeTag[A7],implicitevidence$129:reflect.runtime.universe.TypeTag[A8],implicitevidence$130:reflect.runtime.universe.TypeTag[A9],implicitevidence$131:reflect.runtime.universe.TypeTag[A10],implicitevidence$132:reflect.runtime.universe.TypeTag[A11],implicitevidence$133:reflect.runtime.universe.TypeTag[A12],implicitevidence$134:reflect.runtime.universe.TypeTag[A13],implicitevidence$135:reflect.runtime.universe.TypeTag[A14],implicitevidence$136:reflect.runtime.universe.TypeTag[A15],implicitevidence$137:reflect.runtime.universe.TypeTag[A16]):com.khulnasoft.spark.connector.mapper.TupleColumnMapper[(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16)]", "kind" : "implicit def"}, {"label" : "tuple15ColumnMapper", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[A1], arg1: scala.reflect.api.JavaUniverse.TypeTag[A2], arg2: scala.reflect.api.JavaUniverse.TypeTag[A3], arg3: scala.reflect.api.JavaUniverse.TypeTag[A4], arg4: scala.reflect.api.JavaUniverse.TypeTag[A5], arg5: scala.reflect.api.JavaUniverse.TypeTag[A6], arg6: scala.reflect.api.JavaUniverse.TypeTag[A7], arg7: scala.reflect.api.JavaUniverse.TypeTag[A8], arg8: scala.reflect.api.JavaUniverse.TypeTag[A9], arg9: scala.reflect.api.JavaUniverse.TypeTag[A10], arg10: scala.reflect.api.JavaUniverse.TypeTag[A11], arg11: scala.reflect.api.JavaUniverse.TypeTag[A12], arg12: scala.reflect.api.JavaUniverse.TypeTag[A13], arg13: scala.reflect.api.JavaUniverse.TypeTag[A14], arg14: scala.reflect.api.JavaUniverse.TypeTag[A15]): TupleColumnMapper[(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15)]", "member" : "com.khulnasoft.spark.connector.mapper.ColumnMapper.tuple15ColumnMapper", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapper$.html#tuple15ColumnMapper[A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15](implicitevidence$107:reflect.runtime.universe.TypeTag[A1],implicitevidence$108:reflect.runtime.universe.TypeTag[A2],implicitevidence$109:reflect.runtime.universe.TypeTag[A3],implicitevidence$110:reflect.runtime.universe.TypeTag[A4],implicitevidence$111:reflect.runtime.universe.TypeTag[A5],implicitevidence$112:reflect.runtime.universe.TypeTag[A6],implicitevidence$113:reflect.runtime.universe.TypeTag[A7],implicitevidence$114:reflect.runtime.universe.TypeTag[A8],implicitevidence$115:reflect.runtime.universe.TypeTag[A9],implicitevidence$116:reflect.runtime.universe.TypeTag[A10],implicitevidence$117:reflect.runtime.universe.TypeTag[A11],implicitevidence$118:reflect.runtime.universe.TypeTag[A12],implicitevidence$119:reflect.runtime.universe.TypeTag[A13],implicitevidence$120:reflect.runtime.universe.TypeTag[A14],implicitevidence$121:reflect.runtime.universe.TypeTag[A15]):com.khulnasoft.spark.connector.mapper.TupleColumnMapper[(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15)]", "kind" : "implicit def"}, {"label" : "tuple14ColumnMapper", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[A1], arg1: scala.reflect.api.JavaUniverse.TypeTag[A2], arg2: scala.reflect.api.JavaUniverse.TypeTag[A3], arg3: scala.reflect.api.JavaUniverse.TypeTag[A4], arg4: scala.reflect.api.JavaUniverse.TypeTag[A5], arg5: scala.reflect.api.JavaUniverse.TypeTag[A6], arg6: scala.reflect.api.JavaUniverse.TypeTag[A7], arg7: scala.reflect.api.JavaUniverse.TypeTag[A8], arg8: scala.reflect.api.JavaUniverse.TypeTag[A9], arg9: scala.reflect.api.JavaUniverse.TypeTag[A10], arg10: scala.reflect.api.JavaUniverse.TypeTag[A11], arg11: scala.reflect.api.JavaUniverse.TypeTag[A12], arg12: scala.reflect.api.JavaUniverse.TypeTag[A13], arg13: scala.reflect.api.JavaUniverse.TypeTag[A14]): TupleColumnMapper[(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14)]", "member" : "com.khulnasoft.spark.connector.mapper.ColumnMapper.tuple14ColumnMapper", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapper$.html#tuple14ColumnMapper[A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14](implicitevidence$93:reflect.runtime.universe.TypeTag[A1],implicitevidence$94:reflect.runtime.universe.TypeTag[A2],implicitevidence$95:reflect.runtime.universe.TypeTag[A3],implicitevidence$96:reflect.runtime.universe.TypeTag[A4],implicitevidence$97:reflect.runtime.universe.TypeTag[A5],implicitevidence$98:reflect.runtime.universe.TypeTag[A6],implicitevidence$99:reflect.runtime.universe.TypeTag[A7],implicitevidence$100:reflect.runtime.universe.TypeTag[A8],implicitevidence$101:reflect.runtime.universe.TypeTag[A9],implicitevidence$102:reflect.runtime.universe.TypeTag[A10],implicitevidence$103:reflect.runtime.universe.TypeTag[A11],implicitevidence$104:reflect.runtime.universe.TypeTag[A12],implicitevidence$105:reflect.runtime.universe.TypeTag[A13],implicitevidence$106:reflect.runtime.universe.TypeTag[A14]):com.khulnasoft.spark.connector.mapper.TupleColumnMapper[(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14)]", "kind" : "implicit def"}, {"label" : "tuple13ColumnMapper", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[A1], arg1: scala.reflect.api.JavaUniverse.TypeTag[A2], arg2: scala.reflect.api.JavaUniverse.TypeTag[A3], arg3: scala.reflect.api.JavaUniverse.TypeTag[A4], arg4: scala.reflect.api.JavaUniverse.TypeTag[A5], arg5: scala.reflect.api.JavaUniverse.TypeTag[A6], arg6: scala.reflect.api.JavaUniverse.TypeTag[A7], arg7: scala.reflect.api.JavaUniverse.TypeTag[A8], arg8: scala.reflect.api.JavaUniverse.TypeTag[A9], arg9: scala.reflect.api.JavaUniverse.TypeTag[A10], arg10: scala.reflect.api.JavaUniverse.TypeTag[A11], arg11: scala.reflect.api.JavaUniverse.TypeTag[A12], arg12: scala.reflect.api.JavaUniverse.TypeTag[A13]): TupleColumnMapper[(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13)]", "member" : "com.khulnasoft.spark.connector.mapper.ColumnMapper.tuple13ColumnMapper", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapper$.html#tuple13ColumnMapper[A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13](implicitevidence$80:reflect.runtime.universe.TypeTag[A1],implicitevidence$81:reflect.runtime.universe.TypeTag[A2],implicitevidence$82:reflect.runtime.universe.TypeTag[A3],implicitevidence$83:reflect.runtime.universe.TypeTag[A4],implicitevidence$84:reflect.runtime.universe.TypeTag[A5],implicitevidence$85:reflect.runtime.universe.TypeTag[A6],implicitevidence$86:reflect.runtime.universe.TypeTag[A7],implicitevidence$87:reflect.runtime.universe.TypeTag[A8],implicitevidence$88:reflect.runtime.universe.TypeTag[A9],implicitevidence$89:reflect.runtime.universe.TypeTag[A10],implicitevidence$90:reflect.runtime.universe.TypeTag[A11],implicitevidence$91:reflect.runtime.universe.TypeTag[A12],implicitevidence$92:reflect.runtime.universe.TypeTag[A13]):com.khulnasoft.spark.connector.mapper.TupleColumnMapper[(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13)]", "kind" : "implicit def"}, {"label" : "tuple12ColumnMapper", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[A1], arg1: scala.reflect.api.JavaUniverse.TypeTag[A2], arg2: scala.reflect.api.JavaUniverse.TypeTag[A3], arg3: scala.reflect.api.JavaUniverse.TypeTag[A4], arg4: scala.reflect.api.JavaUniverse.TypeTag[A5], arg5: scala.reflect.api.JavaUniverse.TypeTag[A6], arg6: scala.reflect.api.JavaUniverse.TypeTag[A7], arg7: scala.reflect.api.JavaUniverse.TypeTag[A8], arg8: scala.reflect.api.JavaUniverse.TypeTag[A9], arg9: scala.reflect.api.JavaUniverse.TypeTag[A10], arg10: scala.reflect.api.JavaUniverse.TypeTag[A11], arg11: scala.reflect.api.JavaUniverse.TypeTag[A12]): TupleColumnMapper[(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12)]", "member" : "com.khulnasoft.spark.connector.mapper.ColumnMapper.tuple12ColumnMapper", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapper$.html#tuple12ColumnMapper[A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12](implicitevidence$68:reflect.runtime.universe.TypeTag[A1],implicitevidence$69:reflect.runtime.universe.TypeTag[A2],implicitevidence$70:reflect.runtime.universe.TypeTag[A3],implicitevidence$71:reflect.runtime.universe.TypeTag[A4],implicitevidence$72:reflect.runtime.universe.TypeTag[A5],implicitevidence$73:reflect.runtime.universe.TypeTag[A6],implicitevidence$74:reflect.runtime.universe.TypeTag[A7],implicitevidence$75:reflect.runtime.universe.TypeTag[A8],implicitevidence$76:reflect.runtime.universe.TypeTag[A9],implicitevidence$77:reflect.runtime.universe.TypeTag[A10],implicitevidence$78:reflect.runtime.universe.TypeTag[A11],implicitevidence$79:reflect.runtime.universe.TypeTag[A12]):com.khulnasoft.spark.connector.mapper.TupleColumnMapper[(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12)]", "kind" : "implicit def"}, {"label" : "tuple11ColumnMapper", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[A1], arg1: scala.reflect.api.JavaUniverse.TypeTag[A2], arg2: scala.reflect.api.JavaUniverse.TypeTag[A3], arg3: scala.reflect.api.JavaUniverse.TypeTag[A4], arg4: scala.reflect.api.JavaUniverse.TypeTag[A5], arg5: scala.reflect.api.JavaUniverse.TypeTag[A6], arg6: scala.reflect.api.JavaUniverse.TypeTag[A7], arg7: scala.reflect.api.JavaUniverse.TypeTag[A8], arg8: scala.reflect.api.JavaUniverse.TypeTag[A9], arg9: scala.reflect.api.JavaUniverse.TypeTag[A10], arg10: scala.reflect.api.JavaUniverse.TypeTag[A11]): TupleColumnMapper[(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11)]", "member" : "com.khulnasoft.spark.connector.mapper.ColumnMapper.tuple11ColumnMapper", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapper$.html#tuple11ColumnMapper[A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11](implicitevidence$57:reflect.runtime.universe.TypeTag[A1],implicitevidence$58:reflect.runtime.universe.TypeTag[A2],implicitevidence$59:reflect.runtime.universe.TypeTag[A3],implicitevidence$60:reflect.runtime.universe.TypeTag[A4],implicitevidence$61:reflect.runtime.universe.TypeTag[A5],implicitevidence$62:reflect.runtime.universe.TypeTag[A6],implicitevidence$63:reflect.runtime.universe.TypeTag[A7],implicitevidence$64:reflect.runtime.universe.TypeTag[A8],implicitevidence$65:reflect.runtime.universe.TypeTag[A9],implicitevidence$66:reflect.runtime.universe.TypeTag[A10],implicitevidence$67:reflect.runtime.universe.TypeTag[A11]):com.khulnasoft.spark.connector.mapper.TupleColumnMapper[(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11)]", "kind" : "implicit def"}, {"label" : "tuple10ColumnMapper", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[A1], arg1: scala.reflect.api.JavaUniverse.TypeTag[A2], arg2: scala.reflect.api.JavaUniverse.TypeTag[A3], arg3: scala.reflect.api.JavaUniverse.TypeTag[A4], arg4: scala.reflect.api.JavaUniverse.TypeTag[A5], arg5: scala.reflect.api.JavaUniverse.TypeTag[A6], arg6: scala.reflect.api.JavaUniverse.TypeTag[A7], arg7: scala.reflect.api.JavaUniverse.TypeTag[A8], arg8: scala.reflect.api.JavaUniverse.TypeTag[A9], arg9: scala.reflect.api.JavaUniverse.TypeTag[A10]): TupleColumnMapper[(A1, A2, A3, A4, A5, A6, A7, A8, A9, A10)]", "member" : "com.khulnasoft.spark.connector.mapper.ColumnMapper.tuple10ColumnMapper", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapper$.html#tuple10ColumnMapper[A1,A2,A3,A4,A5,A6,A7,A8,A9,A10](implicitevidence$47:reflect.runtime.universe.TypeTag[A1],implicitevidence$48:reflect.runtime.universe.TypeTag[A2],implicitevidence$49:reflect.runtime.universe.TypeTag[A3],implicitevidence$50:reflect.runtime.universe.TypeTag[A4],implicitevidence$51:reflect.runtime.universe.TypeTag[A5],implicitevidence$52:reflect.runtime.universe.TypeTag[A6],implicitevidence$53:reflect.runtime.universe.TypeTag[A7],implicitevidence$54:reflect.runtime.universe.TypeTag[A8],implicitevidence$55:reflect.runtime.universe.TypeTag[A9],implicitevidence$56:reflect.runtime.universe.TypeTag[A10]):com.khulnasoft.spark.connector.mapper.TupleColumnMapper[(A1,A2,A3,A4,A5,A6,A7,A8,A9,A10)]", "kind" : "implicit def"}, {"label" : "tuple9ColumnMapper", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[A1], arg1: scala.reflect.api.JavaUniverse.TypeTag[A2], arg2: scala.reflect.api.JavaUniverse.TypeTag[A3], arg3: scala.reflect.api.JavaUniverse.TypeTag[A4], arg4: scala.reflect.api.JavaUniverse.TypeTag[A5], arg5: scala.reflect.api.JavaUniverse.TypeTag[A6], arg6: scala.reflect.api.JavaUniverse.TypeTag[A7], arg7: scala.reflect.api.JavaUniverse.TypeTag[A8], arg8: scala.reflect.api.JavaUniverse.TypeTag[A9]): TupleColumnMapper[(A1, A2, A3, A4, A5, A6, A7, A8, A9)]", "member" : "com.khulnasoft.spark.connector.mapper.ColumnMapper.tuple9ColumnMapper", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapper$.html#tuple9ColumnMapper[A1,A2,A3,A4,A5,A6,A7,A8,A9](implicitevidence$38:reflect.runtime.universe.TypeTag[A1],implicitevidence$39:reflect.runtime.universe.TypeTag[A2],implicitevidence$40:reflect.runtime.universe.TypeTag[A3],implicitevidence$41:reflect.runtime.universe.TypeTag[A4],implicitevidence$42:reflect.runtime.universe.TypeTag[A5],implicitevidence$43:reflect.runtime.universe.TypeTag[A6],implicitevidence$44:reflect.runtime.universe.TypeTag[A7],implicitevidence$45:reflect.runtime.universe.TypeTag[A8],implicitevidence$46:reflect.runtime.universe.TypeTag[A9]):com.khulnasoft.spark.connector.mapper.TupleColumnMapper[(A1,A2,A3,A4,A5,A6,A7,A8,A9)]", "kind" : "implicit def"}, {"label" : "tuple8ColumnMapper", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[A1], arg1: scala.reflect.api.JavaUniverse.TypeTag[A2], arg2: scala.reflect.api.JavaUniverse.TypeTag[A3], arg3: scala.reflect.api.JavaUniverse.TypeTag[A4], arg4: scala.reflect.api.JavaUniverse.TypeTag[A5], arg5: scala.reflect.api.JavaUniverse.TypeTag[A6], arg6: scala.reflect.api.JavaUniverse.TypeTag[A7], arg7: scala.reflect.api.JavaUniverse.TypeTag[A8]): TupleColumnMapper[(A1, A2, A3, A4, A5, A6, A7, A8)]", "member" : "com.khulnasoft.spark.connector.mapper.ColumnMapper.tuple8ColumnMapper", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapper$.html#tuple8ColumnMapper[A1,A2,A3,A4,A5,A6,A7,A8](implicitevidence$30:reflect.runtime.universe.TypeTag[A1],implicitevidence$31:reflect.runtime.universe.TypeTag[A2],implicitevidence$32:reflect.runtime.universe.TypeTag[A3],implicitevidence$33:reflect.runtime.universe.TypeTag[A4],implicitevidence$34:reflect.runtime.universe.TypeTag[A5],implicitevidence$35:reflect.runtime.universe.TypeTag[A6],implicitevidence$36:reflect.runtime.universe.TypeTag[A7],implicitevidence$37:reflect.runtime.universe.TypeTag[A8]):com.khulnasoft.spark.connector.mapper.TupleColumnMapper[(A1,A2,A3,A4,A5,A6,A7,A8)]", "kind" : "implicit def"}, {"label" : "tuple7ColumnMapper", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[A1], arg1: scala.reflect.api.JavaUniverse.TypeTag[A2], arg2: scala.reflect.api.JavaUniverse.TypeTag[A3], arg3: scala.reflect.api.JavaUniverse.TypeTag[A4], arg4: scala.reflect.api.JavaUniverse.TypeTag[A5], arg5: scala.reflect.api.JavaUniverse.TypeTag[A6], arg6: scala.reflect.api.JavaUniverse.TypeTag[A7]): TupleColumnMapper[(A1, A2, A3, A4, A5, A6, A7)]", "member" : "com.khulnasoft.spark.connector.mapper.ColumnMapper.tuple7ColumnMapper", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapper$.html#tuple7ColumnMapper[A1,A2,A3,A4,A5,A6,A7](implicitevidence$23:reflect.runtime.universe.TypeTag[A1],implicitevidence$24:reflect.runtime.universe.TypeTag[A2],implicitevidence$25:reflect.runtime.universe.TypeTag[A3],implicitevidence$26:reflect.runtime.universe.TypeTag[A4],implicitevidence$27:reflect.runtime.universe.TypeTag[A5],implicitevidence$28:reflect.runtime.universe.TypeTag[A6],implicitevidence$29:reflect.runtime.universe.TypeTag[A7]):com.khulnasoft.spark.connector.mapper.TupleColumnMapper[(A1,A2,A3,A4,A5,A6,A7)]", "kind" : "implicit def"}, {"label" : "tuple6ColumnMapper", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[A1], arg1: scala.reflect.api.JavaUniverse.TypeTag[A2], arg2: scala.reflect.api.JavaUniverse.TypeTag[A3], arg3: scala.reflect.api.JavaUniverse.TypeTag[A4], arg4: scala.reflect.api.JavaUniverse.TypeTag[A5], arg5: scala.reflect.api.JavaUniverse.TypeTag[A6]): TupleColumnMapper[(A1, A2, A3, A4, A5, A6)]", "member" : "com.khulnasoft.spark.connector.mapper.ColumnMapper.tuple6ColumnMapper", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapper$.html#tuple6ColumnMapper[A1,A2,A3,A4,A5,A6](implicitevidence$17:reflect.runtime.universe.TypeTag[A1],implicitevidence$18:reflect.runtime.universe.TypeTag[A2],implicitevidence$19:reflect.runtime.universe.TypeTag[A3],implicitevidence$20:reflect.runtime.universe.TypeTag[A4],implicitevidence$21:reflect.runtime.universe.TypeTag[A5],implicitevidence$22:reflect.runtime.universe.TypeTag[A6]):com.khulnasoft.spark.connector.mapper.TupleColumnMapper[(A1,A2,A3,A4,A5,A6)]", "kind" : "implicit def"}, {"label" : "tuple5ColumnMapper", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[A1], arg1: scala.reflect.api.JavaUniverse.TypeTag[A2], arg2: scala.reflect.api.JavaUniverse.TypeTag[A3], arg3: scala.reflect.api.JavaUniverse.TypeTag[A4], arg4: scala.reflect.api.JavaUniverse.TypeTag[A5]): TupleColumnMapper[(A1, A2, A3, A4, A5)]", "member" : "com.khulnasoft.spark.connector.mapper.ColumnMapper.tuple5ColumnMapper", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapper$.html#tuple5ColumnMapper[A1,A2,A3,A4,A5](implicitevidence$12:reflect.runtime.universe.TypeTag[A1],implicitevidence$13:reflect.runtime.universe.TypeTag[A2],implicitevidence$14:reflect.runtime.universe.TypeTag[A3],implicitevidence$15:reflect.runtime.universe.TypeTag[A4],implicitevidence$16:reflect.runtime.universe.TypeTag[A5]):com.khulnasoft.spark.connector.mapper.TupleColumnMapper[(A1,A2,A3,A4,A5)]", "kind" : "implicit def"}, {"label" : "tuple4ColumnMapper", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[A1], arg1: scala.reflect.api.JavaUniverse.TypeTag[A2], arg2: scala.reflect.api.JavaUniverse.TypeTag[A3], arg3: scala.reflect.api.JavaUniverse.TypeTag[A4]): TupleColumnMapper[(A1, A2, A3, A4)]", "member" : "com.khulnasoft.spark.connector.mapper.ColumnMapper.tuple4ColumnMapper", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapper$.html#tuple4ColumnMapper[A1,A2,A3,A4](implicitevidence$8:reflect.runtime.universe.TypeTag[A1],implicitevidence$9:reflect.runtime.universe.TypeTag[A2],implicitevidence$10:reflect.runtime.universe.TypeTag[A3],implicitevidence$11:reflect.runtime.universe.TypeTag[A4]):com.khulnasoft.spark.connector.mapper.TupleColumnMapper[(A1,A2,A3,A4)]", "kind" : "implicit def"}, {"label" : "tuple3ColumnMapper", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[A1], arg1: scala.reflect.api.JavaUniverse.TypeTag[A2], arg2: scala.reflect.api.JavaUniverse.TypeTag[A3]): TupleColumnMapper[(A1, A2, A3)]", "member" : "com.khulnasoft.spark.connector.mapper.ColumnMapper.tuple3ColumnMapper", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapper$.html#tuple3ColumnMapper[A1,A2,A3](implicitevidence$5:reflect.runtime.universe.TypeTag[A1],implicitevidence$6:reflect.runtime.universe.TypeTag[A2],implicitevidence$7:reflect.runtime.universe.TypeTag[A3]):com.khulnasoft.spark.connector.mapper.TupleColumnMapper[(A1,A2,A3)]", "kind" : "implicit def"}, {"label" : "tuple2ColumnMapper", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[A1], arg1: scala.reflect.api.JavaUniverse.TypeTag[A2]): TupleColumnMapper[(A1, A2)]", "member" : "com.khulnasoft.spark.connector.mapper.ColumnMapper.tuple2ColumnMapper", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapper$.html#tuple2ColumnMapper[A1,A2](implicitevidence$3:reflect.runtime.universe.TypeTag[A1],implicitevidence$4:reflect.runtime.universe.TypeTag[A2]):com.khulnasoft.spark.connector.mapper.TupleColumnMapper[(A1,A2)]", "kind" : "implicit def"}, {"label" : "tuple1ColumnMapper", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[A1]): TupleColumnMapper[(A1)]", "member" : "com.khulnasoft.spark.connector.mapper.ColumnMapper.tuple1ColumnMapper", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapper$.html#tuple1ColumnMapper[A1](implicitevidence$2:reflect.runtime.universe.TypeTag[A1]):com.khulnasoft.spark.connector.mapper.TupleColumnMapper[(A1,)]", "kind" : "implicit def"}, {"label" : "defaultColumnMapper", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[T]): ColumnMapper[T]", "member" : "com.khulnasoft.spark.connector.mapper.LowPriorityColumnMapper.defaultColumnMapper", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapper$.html#defaultColumnMapper[T](implicitevidence$1:reflect.runtime.universe.TypeTag[T]):com.khulnasoft.spark.connector.mapper.ColumnMapper[T]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapper$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapper$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapper$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapper$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapper$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapper$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapper$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapper$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapper$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapper$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapper$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapper$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapper$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapper$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapper$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapper$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapper$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapper$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapper$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapper.html", "kind" : "trait"}, {"name" : "com.khulnasoft.spark.connector.mapper.ColumnMapperConvention", "shortDescription" : "", "object" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapperConvention$.html", "members_object" : [{"label" : "columnForProperty", "tail" : "(propertyName: String, columnByName: Map[String, ColumnRef]): Option[ColumnRef]", "member" : "com.khulnasoft.spark.connector.mapper.ColumnMapperConvention.columnForProperty", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapperConvention$.html#columnForProperty(propertyName:String,columnByName:Map[String,com.khulnasoft.spark.connector.ColumnRef]):Option[com.khulnasoft.spark.connector.ColumnRef]", "kind" : "def"}, {"label" : "camelCaseToUnderscore", "tail" : "(str: String): String", "member" : "com.khulnasoft.spark.connector.mapper.ColumnMapperConvention.camelCaseToUnderscore", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapperConvention$.html#camelCaseToUnderscore(str:String):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapperConvention$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapperConvention$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapperConvention$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapperConvention$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapperConvention$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapperConvention$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapperConvention$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapperConvention$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapperConvention$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapperConvention$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapperConvention$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapperConvention$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapperConvention$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapperConvention$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapperConvention$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapperConvention$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapperConvention$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapperConvention$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ColumnMapperConvention$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.khulnasoft.spark.connector.mapper.DefaultColumnMapper", "shortDescription" : "A ColumnMapper that assumes camel case naming convention for property accessors and constructornames and underscore naming convention for column names.", "object" : "com\/khulnasoft\/spark\/connector\/mapper\/DefaultColumnMapper$.html", "members_class" : [{"label" : "newTable", "tail" : "(keyspaceName: String, tableName: String, protocolVersion: ProtocolVersion): TableDef", "member" : "com.khulnasoft.spark.connector.mapper.DefaultColumnMapper.newTable", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/DefaultColumnMapper.html#newTable(keyspaceName:String,tableName:String,protocolVersion:com.khulnasoft.oss.driver.api.core.ProtocolVersion):com.khulnasoft.spark.connector.cql.TableDef", "kind" : "def"}, {"label" : "columnMapForWriting", "tail" : "(struct: StructDef, selectedColumns: IndexedSeq[ColumnRef]): ColumnMapForWriting", "member" : "com.khulnasoft.spark.connector.mapper.DefaultColumnMapper.columnMapForWriting", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/DefaultColumnMapper.html#columnMapForWriting(struct:com.khulnasoft.spark.connector.cql.StructDef,selectedColumns:IndexedSeq[com.khulnasoft.spark.connector.ColumnRef]):com.khulnasoft.spark.connector.mapper.ColumnMapForWriting", "kind" : "def"}, {"label" : "columnMapForReading", "tail" : "(struct: StructDef, selectedColumns: IndexedSeq[ColumnRef]): ColumnMapForReading", "member" : "com.khulnasoft.spark.connector.mapper.DefaultColumnMapper.columnMapForReading", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/DefaultColumnMapper.html#columnMapForReading(struct:com.khulnasoft.spark.connector.cql.StructDef,selectedColumns:IndexedSeq[com.khulnasoft.spark.connector.ColumnRef]):com.khulnasoft.spark.connector.mapper.ColumnMapForReading", "kind" : "def"}, {"label" : "setterToColumnName", "tail" : "(setterName: String, columns: Map[String, ColumnRef]): Option[ColumnRef]", "member" : "com.khulnasoft.spark.connector.mapper.DefaultColumnMapper.setterToColumnName", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/DefaultColumnMapper.html#setterToColumnName(setterName:String,columns:Map[String,com.khulnasoft.spark.connector.ColumnRef]):Option[com.khulnasoft.spark.connector.ColumnRef]", "kind" : "def"}, {"label" : "getterToColumnName", "tail" : "(getterName: String, columns: Map[String, ColumnRef]): Option[ColumnRef]", "member" : "com.khulnasoft.spark.connector.mapper.DefaultColumnMapper.getterToColumnName", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/DefaultColumnMapper.html#getterToColumnName(getterName:String,columns:Map[String,com.khulnasoft.spark.connector.ColumnRef]):Option[com.khulnasoft.spark.connector.ColumnRef]", "kind" : "def"}, {"label" : "ctorParamToColumnName", "tail" : "(paramName: String, columns: Map[String, ColumnRef]): Option[ColumnRef]", "member" : "com.khulnasoft.spark.connector.mapper.DefaultColumnMapper.ctorParamToColumnName", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/DefaultColumnMapper.html#ctorParamToColumnName(paramName:String,columns:Map[String,com.khulnasoft.spark.connector.ColumnRef]):Option[com.khulnasoft.spark.connector.ColumnRef]", "kind" : "def"}, {"member" : "com.khulnasoft.spark.connector.mapper.DefaultColumnMapper#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/DefaultColumnMapper.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/DefaultColumnMapper.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/DefaultColumnMapper.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/DefaultColumnMapper.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/DefaultColumnMapper.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/DefaultColumnMapper.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/DefaultColumnMapper.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/DefaultColumnMapper.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/DefaultColumnMapper.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/DefaultColumnMapper.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/DefaultColumnMapper.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/DefaultColumnMapper.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/DefaultColumnMapper.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/DefaultColumnMapper.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/DefaultColumnMapper.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/DefaultColumnMapper.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/DefaultColumnMapper.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/DefaultColumnMapper.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/DefaultColumnMapper.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/DefaultColumnMapper$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/DefaultColumnMapper$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/DefaultColumnMapper$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/DefaultColumnMapper$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/DefaultColumnMapper$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/DefaultColumnMapper$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/DefaultColumnMapper$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/DefaultColumnMapper$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/DefaultColumnMapper$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/DefaultColumnMapper$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/DefaultColumnMapper$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/DefaultColumnMapper$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/DefaultColumnMapper$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/DefaultColumnMapper$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/DefaultColumnMapper$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/DefaultColumnMapper$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/DefaultColumnMapper$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/DefaultColumnMapper$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/DefaultColumnMapper$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/khulnasoft\/spark\/connector\/mapper\/DefaultColumnMapper.html", "kind" : "class"}, {"name" : "com.khulnasoft.spark.connector.mapper.GettableDataToMappedTypeConverter", "shortDescription" : "Converts a GettableData object representing a table row or a UDT valueto a tuple or a case class object using the given ColumnMapper.", "members_class" : [{"label" : "convertPF", "tail" : "(): PartialFunction[Any, T]", "member" : "com.khulnasoft.spark.connector.mapper.GettableDataToMappedTypeConverter.convertPF", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/GettableDataToMappedTypeConverter.html#convertPF:PartialFunction[Any,T]", "kind" : "def"}, {"label" : "columnMap", "tail" : ": ColumnMapForReading", "member" : "com.khulnasoft.spark.connector.mapper.GettableDataToMappedTypeConverter.columnMap", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/GettableDataToMappedTypeConverter.html#columnMap:com.khulnasoft.spark.connector.mapper.ColumnMapForReading", "kind" : "val"}, {"label" : "targetTypeName", "tail" : ": String", "member" : "com.khulnasoft.spark.connector.mapper.GettableDataToMappedTypeConverter.targetTypeName", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/GettableDataToMappedTypeConverter.html#targetTypeName:String", "kind" : "val"}, {"label" : "targetTypeTag", "tail" : "(): scala.reflect.api.JavaUniverse.TypeTag[T]", "member" : "com.khulnasoft.spark.connector.mapper.GettableDataToMappedTypeConverter.targetTypeTag", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/GettableDataToMappedTypeConverter.html#targetTypeTag:reflect.runtime.universe.TypeTag[T]", "kind" : "def"}, {"member" : "com.khulnasoft.spark.connector.mapper.GettableDataToMappedTypeConverter#<init>", "error" : "unsupported entity"}, {"label" : "convert", "tail" : "(obj: Any): T", "member" : "com.khulnasoft.spark.connector.types.TypeConverter.convert", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/GettableDataToMappedTypeConverter.html#convert(obj:Any):T", "kind" : "def"}, {"label" : "targetType", "tail" : "", "member" : "com.khulnasoft.spark.connector.types.TypeConverter.targetType", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/GettableDataToMappedTypeConverter.html#targetType=T", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/GettableDataToMappedTypeConverter.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/GettableDataToMappedTypeConverter.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/GettableDataToMappedTypeConverter.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/GettableDataToMappedTypeConverter.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/GettableDataToMappedTypeConverter.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/GettableDataToMappedTypeConverter.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/GettableDataToMappedTypeConverter.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/GettableDataToMappedTypeConverter.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/GettableDataToMappedTypeConverter.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/GettableDataToMappedTypeConverter.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/GettableDataToMappedTypeConverter.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/GettableDataToMappedTypeConverter.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/GettableDataToMappedTypeConverter.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/GettableDataToMappedTypeConverter.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/GettableDataToMappedTypeConverter.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/GettableDataToMappedTypeConverter.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/GettableDataToMappedTypeConverter.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/GettableDataToMappedTypeConverter.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/GettableDataToMappedTypeConverter.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/khulnasoft\/spark\/connector\/mapper\/GettableDataToMappedTypeConverter.html", "kind" : "class"}, {"name" : "com.khulnasoft.spark.connector.mapper.JavaBeanColumnMapper", "shortDescription" : "", "object" : "com\/khulnasoft\/spark\/connector\/mapper\/JavaBeanColumnMapper$.html", "members_class" : [{"label" : "newTable", "tail" : "(keyspaceName: String, tableName: String, protocolVersion: ProtocolVersion): TableDef", "member" : "com.khulnasoft.spark.connector.mapper.JavaBeanColumnMapper.newTable", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/JavaBeanColumnMapper.html#newTable(keyspaceName:String,tableName:String,protocolVersion:com.khulnasoft.oss.driver.api.core.ProtocolVersion):com.khulnasoft.spark.connector.cql.TableDef", "kind" : "def"}, {"label" : "allowsNull", "tail" : "(): Boolean", "member" : "com.khulnasoft.spark.connector.mapper.JavaBeanColumnMapper.allowsNull", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/JavaBeanColumnMapper.html#allowsNull:Boolean", "kind" : "def"}, {"label" : "constructorParamToColumnName", "tail" : "(paramName: String, columns: Map[String, ColumnRef]): Option[ColumnRef]", "member" : "com.khulnasoft.spark.connector.mapper.JavaBeanColumnMapper.constructorParamToColumnName", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/JavaBeanColumnMapper.html#constructorParamToColumnName(paramName:String,columns:Map[String,com.khulnasoft.spark.connector.ColumnRef]):Option[com.khulnasoft.spark.connector.ColumnRef]", "kind" : "def"}, {"label" : "setterToColumnName", "tail" : "(setterName: String, columns: Map[String, ColumnRef]): Option[ColumnRef]", "member" : "com.khulnasoft.spark.connector.mapper.JavaBeanColumnMapper.setterToColumnName", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/JavaBeanColumnMapper.html#setterToColumnName(setterName:String,columns:Map[String,com.khulnasoft.spark.connector.ColumnRef]):Option[com.khulnasoft.spark.connector.ColumnRef]", "kind" : "def"}, {"label" : "getterToColumnName", "tail" : "(getterName: String, columns: Map[String, ColumnRef]): Option[ColumnRef]", "member" : "com.khulnasoft.spark.connector.mapper.JavaBeanColumnMapper.getterToColumnName", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/JavaBeanColumnMapper.html#getterToColumnName(getterName:String,columns:Map[String,com.khulnasoft.spark.connector.ColumnRef]):Option[com.khulnasoft.spark.connector.ColumnRef]", "kind" : "def"}, {"label" : "isSetter", "tail" : "(method: Method): Boolean", "member" : "com.khulnasoft.spark.connector.mapper.JavaBeanColumnMapper.isSetter", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/JavaBeanColumnMapper.html#isSetter(method:java.lang.reflect.Method):Boolean", "kind" : "def"}, {"label" : "isGetter", "tail" : "(method: Method): Boolean", "member" : "com.khulnasoft.spark.connector.mapper.JavaBeanColumnMapper.isGetter", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/JavaBeanColumnMapper.html#isGetter(method:java.lang.reflect.Method):Boolean", "kind" : "def"}, {"member" : "com.khulnasoft.spark.connector.mapper.JavaBeanColumnMapper#<init>", "error" : "unsupported entity"}, {"label" : "columnMapForWriting", "tail" : "(struct: StructDef, selectedColumns: IndexedSeq[ColumnRef]): ColumnMapForWriting", "member" : "com.khulnasoft.spark.connector.mapper.ReflectionColumnMapper.columnMapForWriting", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/JavaBeanColumnMapper.html#columnMapForWriting(struct:com.khulnasoft.spark.connector.cql.StructDef,selectedColumns:IndexedSeq[com.khulnasoft.spark.connector.ColumnRef]):com.khulnasoft.spark.connector.mapper.ColumnMapForWriting", "kind" : "def"}, {"label" : "columnMapForReading", "tail" : "(struct: StructDef, selectedColumns: IndexedSeq[ColumnRef]): ColumnMapForReading", "member" : "com.khulnasoft.spark.connector.mapper.ReflectionColumnMapper.columnMapForReading", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/JavaBeanColumnMapper.html#columnMapForReading(struct:com.khulnasoft.spark.connector.cql.StructDef,selectedColumns:IndexedSeq[com.khulnasoft.spark.connector.ColumnRef]):com.khulnasoft.spark.connector.mapper.ColumnMapForReading", "kind" : "def"}, {"label" : "cls", "tail" : ": Class[_]", "member" : "com.khulnasoft.spark.connector.mapper.ReflectionColumnMapper.cls", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/JavaBeanColumnMapper.html#cls:Class[_]", "kind" : "val"}, {"label" : "annotationForFieldName", "tail" : "(fieldName: String): Option[String]", "member" : "com.khulnasoft.spark.connector.mapper.ReflectionColumnMapper.annotationForFieldName", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/JavaBeanColumnMapper.html#annotationForFieldName(fieldName:String):Option[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/JavaBeanColumnMapper.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/JavaBeanColumnMapper.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/JavaBeanColumnMapper.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/JavaBeanColumnMapper.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/JavaBeanColumnMapper.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/JavaBeanColumnMapper.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/JavaBeanColumnMapper.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/JavaBeanColumnMapper.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/JavaBeanColumnMapper.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/JavaBeanColumnMapper.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/JavaBeanColumnMapper.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/JavaBeanColumnMapper.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/JavaBeanColumnMapper.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/JavaBeanColumnMapper.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/JavaBeanColumnMapper.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/JavaBeanColumnMapper.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/JavaBeanColumnMapper.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/JavaBeanColumnMapper.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/JavaBeanColumnMapper.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "AccessorRegex", "tail" : ": Regex", "member" : "com.khulnasoft.spark.connector.mapper.JavaBeanColumnMapper.AccessorRegex", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/JavaBeanColumnMapper$.html#AccessorRegex:scala.util.matching.Regex", "kind" : "val"}, {"label" : "SetterRegex", "tail" : ": Regex", "member" : "com.khulnasoft.spark.connector.mapper.JavaBeanColumnMapper.SetterRegex", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/JavaBeanColumnMapper$.html#SetterRegex:scala.util.matching.Regex", "kind" : "val"}, {"label" : "GetterRegex", "tail" : ": Regex", "member" : "com.khulnasoft.spark.connector.mapper.JavaBeanColumnMapper.GetterRegex", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/JavaBeanColumnMapper$.html#GetterRegex:scala.util.matching.Regex", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/JavaBeanColumnMapper$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/JavaBeanColumnMapper$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/JavaBeanColumnMapper$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/JavaBeanColumnMapper$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/JavaBeanColumnMapper$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/JavaBeanColumnMapper$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/JavaBeanColumnMapper$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/JavaBeanColumnMapper$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/JavaBeanColumnMapper$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/JavaBeanColumnMapper$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/JavaBeanColumnMapper$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/JavaBeanColumnMapper$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/JavaBeanColumnMapper$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/JavaBeanColumnMapper$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/JavaBeanColumnMapper$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/JavaBeanColumnMapper$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/JavaBeanColumnMapper$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/JavaBeanColumnMapper$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/JavaBeanColumnMapper$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/khulnasoft\/spark\/connector\/mapper\/JavaBeanColumnMapper.html", "kind" : "class"}, {"name" : "com.khulnasoft.spark.connector.mapper.LowPriorityColumnMapper", "members_trait" : [{"label" : "defaultColumnMapper", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[T]): ColumnMapper[T]", "member" : "com.khulnasoft.spark.connector.mapper.LowPriorityColumnMapper.defaultColumnMapper", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/LowPriorityColumnMapper.html#defaultColumnMapper[T](implicitevidence$1:reflect.runtime.universe.TypeTag[T]):com.khulnasoft.spark.connector.mapper.ColumnMapper[T]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/LowPriorityColumnMapper.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/LowPriorityColumnMapper.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/LowPriorityColumnMapper.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/LowPriorityColumnMapper.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/LowPriorityColumnMapper.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/LowPriorityColumnMapper.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/LowPriorityColumnMapper.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/LowPriorityColumnMapper.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/LowPriorityColumnMapper.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/LowPriorityColumnMapper.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/LowPriorityColumnMapper.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/LowPriorityColumnMapper.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/LowPriorityColumnMapper.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/LowPriorityColumnMapper.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/LowPriorityColumnMapper.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/LowPriorityColumnMapper.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/LowPriorityColumnMapper.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/LowPriorityColumnMapper.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/LowPriorityColumnMapper.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Provides implicit ColumnMapper used for mapping all non-tuple classes.", "trait" : "com\/khulnasoft\/spark\/connector\/mapper\/LowPriorityColumnMapper.html", "kind" : "trait"}, {"name" : "com.khulnasoft.spark.connector.mapper.MappedToGettableDataConverter", "shortDescription" : "", "object" : "com\/khulnasoft\/spark\/connector\/mapper\/MappedToGettableDataConverter$.html", "members_object" : [{"label" : "apply", "tail" : "(struct: StructDef, columnSelection: IndexedSeq[ColumnRef], forceClassLoader: Option[ClassLoader])(arg0: scala.reflect.api.JavaUniverse.TypeTag[T], arg1: ColumnMapper[T]): TypeConverter[ValueRepr]", "member" : "com.khulnasoft.spark.connector.mapper.MappedToGettableDataConverter.apply", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/MappedToGettableDataConverter$.html#apply[T](struct:com.khulnasoft.spark.connector.cql.StructDef,columnSelection:IndexedSeq[com.khulnasoft.spark.connector.ColumnRef],forceClassLoader:Option[ClassLoader])(implicitevidence$1:reflect.runtime.universe.TypeTag[T],implicitevidence$2:com.khulnasoft.spark.connector.mapper.ColumnMapper[T]):com.khulnasoft.spark.connector.types.TypeConverter[struct.ValueRepr]", "kind" : "def"}, {"label" : "isTraceEnabled", "tail" : "(): Boolean", "member" : "com.khulnasoft.spark.connector.util.Logging.isTraceEnabled", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/MappedToGettableDataConverter$.html#isTraceEnabled():Boolean", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "com.khulnasoft.spark.connector.util.Logging.logError", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/MappedToGettableDataConverter$.html#logError(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "com.khulnasoft.spark.connector.util.Logging.logWarning", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/MappedToGettableDataConverter$.html#logWarning(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "com.khulnasoft.spark.connector.util.Logging.logTrace", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/MappedToGettableDataConverter$.html#logTrace(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "com.khulnasoft.spark.connector.util.Logging.logDebug", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/MappedToGettableDataConverter$.html#logDebug(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "com.khulnasoft.spark.connector.util.Logging.logInfo", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/MappedToGettableDataConverter$.html#logInfo(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String): Unit", "member" : "com.khulnasoft.spark.connector.util.Logging.logError", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/MappedToGettableDataConverter$.html#logError(msg:=>String):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String): Unit", "member" : "com.khulnasoft.spark.connector.util.Logging.logWarning", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/MappedToGettableDataConverter$.html#logWarning(msg:=>String):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String): Unit", "member" : "com.khulnasoft.spark.connector.util.Logging.logTrace", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/MappedToGettableDataConverter$.html#logTrace(msg:=>String):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String): Unit", "member" : "com.khulnasoft.spark.connector.util.Logging.logDebug", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/MappedToGettableDataConverter$.html#logDebug(msg:=>String):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String): Unit", "member" : "com.khulnasoft.spark.connector.util.Logging.logInfo", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/MappedToGettableDataConverter$.html#logInfo(msg:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "com.khulnasoft.spark.connector.util.Logging.log", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/MappedToGettableDataConverter$.html#log:org.slf4j.Logger", "kind" : "def"}, {"label" : "logName", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.util.Logging.logName", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/MappedToGettableDataConverter$.html#logName:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/MappedToGettableDataConverter$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/MappedToGettableDataConverter$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/MappedToGettableDataConverter$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/MappedToGettableDataConverter$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/MappedToGettableDataConverter$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/MappedToGettableDataConverter$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/MappedToGettableDataConverter$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/MappedToGettableDataConverter$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/MappedToGettableDataConverter$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/MappedToGettableDataConverter$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/MappedToGettableDataConverter$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/MappedToGettableDataConverter$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/MappedToGettableDataConverter$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/MappedToGettableDataConverter$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/MappedToGettableDataConverter$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/MappedToGettableDataConverter$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/MappedToGettableDataConverter$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/MappedToGettableDataConverter$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/MappedToGettableDataConverter$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.khulnasoft.spark.connector.mapper.PropertyExtractor", "shortDescription" : "Extracts values from fields of an object.", "object" : "com\/khulnasoft\/spark\/connector\/mapper\/PropertyExtractor$.html", "members_class" : [{"label" : "extractProperty", "tail" : "(obj: T, propertyName: String): AnyRef", "member" : "com.khulnasoft.spark.connector.mapper.PropertyExtractor.extractProperty", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/PropertyExtractor.html#extractProperty(obj:T,propertyName:String):AnyRef", "kind" : "def"}, {"label" : "extract", "tail" : "(obj: T, target: Array[AnyRef]): Array[AnyRef]", "member" : "com.khulnasoft.spark.connector.mapper.PropertyExtractor.extract", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/PropertyExtractor.html#extract(obj:T,target:Array[AnyRef]):Array[AnyRef]", "kind" : "def"}, {"label" : "extract", "tail" : "(obj: T): Array[AnyRef]", "member" : "com.khulnasoft.spark.connector.mapper.PropertyExtractor.extract", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/PropertyExtractor.html#extract(obj:T):Array[AnyRef]", "kind" : "def"}, {"member" : "com.khulnasoft.spark.connector.mapper.PropertyExtractor#<init>", "error" : "unsupported entity"}, {"label" : "propertyNames", "tail" : ": Seq[String]", "member" : "com.khulnasoft.spark.connector.mapper.PropertyExtractor.propertyNames", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/PropertyExtractor.html#propertyNames:Seq[String]", "kind" : "val"}, {"label" : "cls", "tail" : ": Class[T]", "member" : "com.khulnasoft.spark.connector.mapper.PropertyExtractor.cls", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/PropertyExtractor.html#cls:Class[T]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/PropertyExtractor.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/PropertyExtractor.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/PropertyExtractor.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/PropertyExtractor.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/PropertyExtractor.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/PropertyExtractor.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/PropertyExtractor.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/PropertyExtractor.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/PropertyExtractor.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/PropertyExtractor.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/PropertyExtractor.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/PropertyExtractor.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/PropertyExtractor.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/PropertyExtractor.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/PropertyExtractor.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/PropertyExtractor.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/PropertyExtractor.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/PropertyExtractor.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/PropertyExtractor.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "availablePropertyNames", "tail" : "(cls: Class[_], requestedPropertyNames: Seq[String]): Seq[String]", "member" : "com.khulnasoft.spark.connector.mapper.PropertyExtractor.availablePropertyNames", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/PropertyExtractor$.html#availablePropertyNames(cls:Class[_],requestedPropertyNames:Seq[String]):Seq[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/PropertyExtractor$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/PropertyExtractor$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/PropertyExtractor$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/PropertyExtractor$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/PropertyExtractor$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/PropertyExtractor$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/PropertyExtractor$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/PropertyExtractor$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/PropertyExtractor$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/PropertyExtractor$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/PropertyExtractor$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/PropertyExtractor$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/PropertyExtractor$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/PropertyExtractor$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/PropertyExtractor$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/PropertyExtractor$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/PropertyExtractor$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/PropertyExtractor$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/PropertyExtractor$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/khulnasoft\/spark\/connector\/mapper\/PropertyExtractor.html", "kind" : "class"}, {"name" : "com.khulnasoft.spark.connector.mapper.ReflectionColumnMapper", "shortDescription" : "", "members_class" : [{"label" : "columnMapForWriting", "tail" : "(struct: StructDef, selectedColumns: IndexedSeq[ColumnRef]): ColumnMapForWriting", "member" : "com.khulnasoft.spark.connector.mapper.ReflectionColumnMapper.columnMapForWriting", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ReflectionColumnMapper.html#columnMapForWriting(struct:com.khulnasoft.spark.connector.cql.StructDef,selectedColumns:IndexedSeq[com.khulnasoft.spark.connector.ColumnRef]):com.khulnasoft.spark.connector.mapper.ColumnMapForWriting", "kind" : "def"}, {"label" : "columnMapForReading", "tail" : "(struct: StructDef, selectedColumns: IndexedSeq[ColumnRef]): ColumnMapForReading", "member" : "com.khulnasoft.spark.connector.mapper.ReflectionColumnMapper.columnMapForReading", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ReflectionColumnMapper.html#columnMapForReading(struct:com.khulnasoft.spark.connector.cql.StructDef,selectedColumns:IndexedSeq[com.khulnasoft.spark.connector.ColumnRef]):com.khulnasoft.spark.connector.mapper.ColumnMapForReading", "kind" : "def"}, {"label" : "cls", "tail" : ": Class[_]", "member" : "com.khulnasoft.spark.connector.mapper.ReflectionColumnMapper.cls", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ReflectionColumnMapper.html#cls:Class[_]", "kind" : "val"}, {"label" : "annotationForFieldName", "tail" : "(fieldName: String): Option[String]", "member" : "com.khulnasoft.spark.connector.mapper.ReflectionColumnMapper.annotationForFieldName", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ReflectionColumnMapper.html#annotationForFieldName(fieldName:String):Option[String]", "kind" : "def"}, {"member" : "com.khulnasoft.spark.connector.mapper.ReflectionColumnMapper#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ReflectionColumnMapper.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ReflectionColumnMapper.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ReflectionColumnMapper.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ReflectionColumnMapper.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ReflectionColumnMapper.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ReflectionColumnMapper.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ReflectionColumnMapper.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ReflectionColumnMapper.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ReflectionColumnMapper.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ReflectionColumnMapper.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ReflectionColumnMapper.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ReflectionColumnMapper.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ReflectionColumnMapper.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ReflectionColumnMapper.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ReflectionColumnMapper.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ReflectionColumnMapper.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ReflectionColumnMapper.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ReflectionColumnMapper.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ReflectionColumnMapper.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "allowsNull", "tail" : "(): Boolean", "member" : "com.khulnasoft.spark.connector.mapper.ReflectionColumnMapper.allowsNull", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ReflectionColumnMapper.html#allowsNull:Boolean", "kind" : "abstract def"}, {"label" : "constructorParamToColumnName", "tail" : "(paramName: String, columns: Map[String, ColumnRef]): Option[ColumnRef]", "member" : "com.khulnasoft.spark.connector.mapper.ReflectionColumnMapper.constructorParamToColumnName", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ReflectionColumnMapper.html#constructorParamToColumnName(paramName:String,columns:Map[String,com.khulnasoft.spark.connector.ColumnRef]):Option[com.khulnasoft.spark.connector.ColumnRef]", "kind" : "abstract def"}, {"label" : "getterToColumnName", "tail" : "(getterName: String, columns: Map[String, ColumnRef]): Option[ColumnRef]", "member" : "com.khulnasoft.spark.connector.mapper.ReflectionColumnMapper.getterToColumnName", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ReflectionColumnMapper.html#getterToColumnName(getterName:String,columns:Map[String,com.khulnasoft.spark.connector.ColumnRef]):Option[com.khulnasoft.spark.connector.ColumnRef]", "kind" : "abstract def"}, {"label" : "setterToColumnName", "tail" : "(setterName: String, columns: Map[String, ColumnRef]): Option[ColumnRef]", "member" : "com.khulnasoft.spark.connector.mapper.ReflectionColumnMapper.setterToColumnName", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ReflectionColumnMapper.html#setterToColumnName(setterName:String,columns:Map[String,com.khulnasoft.spark.connector.ColumnRef]):Option[com.khulnasoft.spark.connector.ColumnRef]", "kind" : "abstract def"}, {"label" : "isGetter", "tail" : "(method: Method): Boolean", "member" : "com.khulnasoft.spark.connector.mapper.ReflectionColumnMapper.isGetter", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ReflectionColumnMapper.html#isGetter(method:java.lang.reflect.Method):Boolean", "kind" : "abstract def"}, {"label" : "isSetter", "tail" : "(method: Method): Boolean", "member" : "com.khulnasoft.spark.connector.mapper.ReflectionColumnMapper.isSetter", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ReflectionColumnMapper.html#isSetter(method:java.lang.reflect.Method):Boolean", "kind" : "abstract def"}, {"label" : "newTable", "tail" : "(keyspaceName: String, tableName: String, protocolVersion: ProtocolVersion): TableDef", "member" : "com.khulnasoft.spark.connector.mapper.ColumnMapper.newTable", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/ReflectionColumnMapper.html#newTable(keyspaceName:String,tableName:String,protocolVersion:com.khulnasoft.oss.driver.api.core.ProtocolVersion):com.khulnasoft.spark.connector.cql.TableDef", "kind" : "abstract def"}], "class" : "com\/khulnasoft\/spark\/connector\/mapper\/ReflectionColumnMapper.html", "kind" : "class"}, {"name" : "com.khulnasoft.spark.connector.mapper.SimpleColumnMapForReading", "shortDescription" : "", "members_case class" : [{"member" : "com.khulnasoft.spark.connector.mapper.SimpleColumnMapForReading#<init>", "error" : "unsupported entity"}, {"label" : "allowsNull", "tail" : ": Boolean", "member" : "com.khulnasoft.spark.connector.mapper.SimpleColumnMapForReading.allowsNull", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/SimpleColumnMapForReading.html#allowsNull:Boolean", "kind" : "val"}, {"label" : "setters", "tail" : ": Map[String, ColumnRef]", "member" : "com.khulnasoft.spark.connector.mapper.SimpleColumnMapForReading.setters", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/SimpleColumnMapForReading.html#setters:Map[String,com.khulnasoft.spark.connector.ColumnRef]", "kind" : "val"}, {"label" : "constructor", "tail" : ": Seq[ColumnRef]", "member" : "com.khulnasoft.spark.connector.mapper.SimpleColumnMapForReading.constructor", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/SimpleColumnMapForReading.html#constructor:Seq[com.khulnasoft.spark.connector.ColumnRef]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/SimpleColumnMapForReading.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/SimpleColumnMapForReading.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/SimpleColumnMapForReading.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/SimpleColumnMapForReading.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/SimpleColumnMapForReading.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/SimpleColumnMapForReading.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/SimpleColumnMapForReading.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/SimpleColumnMapForReading.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/SimpleColumnMapForReading.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/SimpleColumnMapForReading.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/SimpleColumnMapForReading.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/SimpleColumnMapForReading.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/SimpleColumnMapForReading.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/SimpleColumnMapForReading.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/SimpleColumnMapForReading.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/SimpleColumnMapForReading.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/khulnasoft\/spark\/connector\/mapper\/SimpleColumnMapForReading.html", "kind" : "case class"}, {"name" : "com.khulnasoft.spark.connector.mapper.SimpleColumnMapForWriting", "shortDescription" : "", "members_case class" : [{"member" : "com.khulnasoft.spark.connector.mapper.SimpleColumnMapForWriting#<init>", "error" : "unsupported entity"}, {"label" : "getters", "tail" : ": Map[String, ColumnRef]", "member" : "com.khulnasoft.spark.connector.mapper.SimpleColumnMapForWriting.getters", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/SimpleColumnMapForWriting.html#getters:Map[String,com.khulnasoft.spark.connector.ColumnRef]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/SimpleColumnMapForWriting.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/SimpleColumnMapForWriting.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/SimpleColumnMapForWriting.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/SimpleColumnMapForWriting.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/SimpleColumnMapForWriting.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/SimpleColumnMapForWriting.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/SimpleColumnMapForWriting.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/SimpleColumnMapForWriting.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/SimpleColumnMapForWriting.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/SimpleColumnMapForWriting.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/SimpleColumnMapForWriting.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/SimpleColumnMapForWriting.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/SimpleColumnMapForWriting.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/SimpleColumnMapForWriting.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/SimpleColumnMapForWriting.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/SimpleColumnMapForWriting.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/khulnasoft\/spark\/connector\/mapper\/SimpleColumnMapForWriting.html", "kind" : "case class"}, {"name" : "com.khulnasoft.spark.connector.mapper.TupleColumnMapper", "shortDescription" : "", "members_class" : [{"label" : "newTable", "tail" : "(keyspaceName: String, tableName: String, protocolVersion: ProtocolVersion): TableDef", "member" : "com.khulnasoft.spark.connector.mapper.TupleColumnMapper.newTable", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/TupleColumnMapper.html#newTable(keyspaceName:String,tableName:String,protocolVersion:com.khulnasoft.oss.driver.api.core.ProtocolVersion):com.khulnasoft.spark.connector.cql.TableDef", "kind" : "def"}, {"label" : "columnMapForWriting", "tail" : "(struct: StructDef, selectedColumns: IndexedSeq[ColumnRef]): SimpleColumnMapForWriting", "member" : "com.khulnasoft.spark.connector.mapper.TupleColumnMapper.columnMapForWriting", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/TupleColumnMapper.html#columnMapForWriting(struct:com.khulnasoft.spark.connector.cql.StructDef,selectedColumns:IndexedSeq[com.khulnasoft.spark.connector.ColumnRef]):com.khulnasoft.spark.connector.mapper.SimpleColumnMapForWriting", "kind" : "def"}, {"label" : "columnMapForReading", "tail" : "(struct: StructDef, selectedColumns: IndexedSeq[ColumnRef]): ColumnMapForReading", "member" : "com.khulnasoft.spark.connector.mapper.TupleColumnMapper.columnMapForReading", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/TupleColumnMapper.html#columnMapForReading(struct:com.khulnasoft.spark.connector.cql.StructDef,selectedColumns:IndexedSeq[com.khulnasoft.spark.connector.ColumnRef]):com.khulnasoft.spark.connector.mapper.ColumnMapForReading", "kind" : "def"}, {"label" : "methodNames", "tail" : ": Array[String]", "member" : "com.khulnasoft.spark.connector.mapper.TupleColumnMapper.methodNames", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/TupleColumnMapper.html#methodNames:Array[String]", "kind" : "val"}, {"label" : "ctorLength", "tail" : ": Int", "member" : "com.khulnasoft.spark.connector.mapper.TupleColumnMapper.ctorLength", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/TupleColumnMapper.html#ctorLength:Int", "kind" : "val"}, {"label" : "cls", "tail" : ": Class[_]", "member" : "com.khulnasoft.spark.connector.mapper.TupleColumnMapper.cls", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/TupleColumnMapper.html#cls:Class[_]", "kind" : "val"}, {"member" : "com.khulnasoft.spark.connector.mapper.TupleColumnMapper#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/TupleColumnMapper.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/TupleColumnMapper.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/TupleColumnMapper.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/TupleColumnMapper.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/TupleColumnMapper.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/TupleColumnMapper.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/TupleColumnMapper.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/TupleColumnMapper.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/TupleColumnMapper.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/TupleColumnMapper.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/TupleColumnMapper.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/TupleColumnMapper.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/TupleColumnMapper.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/TupleColumnMapper.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/TupleColumnMapper.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/TupleColumnMapper.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/TupleColumnMapper.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/TupleColumnMapper.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/mapper\/TupleColumnMapper.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/khulnasoft\/spark\/connector\/mapper\/TupleColumnMapper.html", "kind" : "class"}], "com.khulnasoft.spark.connector.util" : [{"name" : "com.khulnasoft.spark.connector.util.AnyObjectFactory", "shortDescription" : "Factory for creating objects of any type by invoking their primary constructor.", "object" : "com\/khulnasoft\/spark\/connector\/util\/AnyObjectFactory$.html", "members_class" : [{"label" : "newInstance", "tail" : "(args: AnyRef*): T", "member" : "com.khulnasoft.spark.connector.util.AnyObjectFactory.newInstance", "link" : "com\/khulnasoft\/spark\/connector\/util\/AnyObjectFactory.html#newInstance(args:AnyRef*):T", "kind" : "def"}, {"label" : "constructorParamTypes", "tail" : ": Array[scala.reflect.api.JavaUniverse.Type]", "member" : "com.khulnasoft.spark.connector.util.AnyObjectFactory.constructorParamTypes", "link" : "com\/khulnasoft\/spark\/connector\/util\/AnyObjectFactory.html#constructorParamTypes:Array[reflect.runtime.universe.Type]", "kind" : "lazy val"}, {"label" : "argCount", "tail" : ": Int", "member" : "com.khulnasoft.spark.connector.util.AnyObjectFactory.argCount", "link" : "com\/khulnasoft\/spark\/connector\/util\/AnyObjectFactory.html#argCount:Int", "kind" : "val"}, {"label" : "constructorParamTypeNames", "tail" : ": IndexedSeq[ParamType]", "member" : "com.khulnasoft.spark.connector.util.AnyObjectFactory.constructorParamTypeNames", "link" : "com\/khulnasoft\/spark\/connector\/util\/AnyObjectFactory.html#constructorParamTypeNames:IndexedSeq[com.khulnasoft.spark.connector.util.AnyObjectFactory.ParamType]", "kind" : "val"}, {"label" : "javaClass", "tail" : ": Class[T]", "member" : "com.khulnasoft.spark.connector.util.AnyObjectFactory.javaClass", "link" : "com\/khulnasoft\/spark\/connector\/util\/AnyObjectFactory.html#javaClass:Class[T]", "kind" : "val"}, {"label" : "rm", "tail" : ": scala.reflect.api.JavaUniverse.RuntimeMirror", "member" : "com.khulnasoft.spark.connector.util.AnyObjectFactory.rm", "link" : "com\/khulnasoft\/spark\/connector\/util\/AnyObjectFactory.html#rm:reflect.runtime.universe.RuntimeMirror", "kind" : "lazy val"}, {"member" : "com.khulnasoft.spark.connector.util.AnyObjectFactory#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/util\/AnyObjectFactory.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/util\/AnyObjectFactory.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/util\/AnyObjectFactory.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/util\/AnyObjectFactory.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/util\/AnyObjectFactory.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/util\/AnyObjectFactory.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/util\/AnyObjectFactory.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/util\/AnyObjectFactory.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/util\/AnyObjectFactory.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/util\/AnyObjectFactory.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/util\/AnyObjectFactory.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/util\/AnyObjectFactory.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/khulnasoft\/spark\/connector\/util\/AnyObjectFactory.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/util\/AnyObjectFactory.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/khulnasoft\/spark\/connector\/util\/AnyObjectFactory.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/khulnasoft\/spark\/connector\/util\/AnyObjectFactory.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/util\/AnyObjectFactory.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/util\/AnyObjectFactory.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/util\/AnyObjectFactory.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "getRealEnclosingClass", "tail" : "(clazz: Class[T]): Option[Class[?0]] forSome {type ?0}", "member" : "com.khulnasoft.spark.connector.util.AnyObjectFactory.getRealEnclosingClass", "link" : "com\/khulnasoft\/spark\/connector\/util\/AnyObjectFactory$.html#getRealEnclosingClass[T](clazz:Class[T]):Option[Class[?0]]forSome{type?0}", "kind" : "def"}, {"label" : "isRealMemberClass", "tail" : "(clazz: Class[T]): Boolean", "member" : "com.khulnasoft.spark.connector.util.AnyObjectFactory.isRealMemberClass", "link" : "com\/khulnasoft\/spark\/connector\/util\/AnyObjectFactory$.html#isRealMemberClass[T](clazz:Class[T]):Boolean", "kind" : "def"}, {"label" : "resolveConstructorFromParamTypeNames", "tail" : "(clazz: Class[T], paramTypeNames: IndexedSeq[ParamType]): Constructor[T]", "member" : "com.khulnasoft.spark.connector.util.AnyObjectFactory.resolveConstructorFromParamTypeNames", "link" : "com\/khulnasoft\/spark\/connector\/util\/AnyObjectFactory$.html#resolveConstructorFromParamTypeNames[T](clazz:Class[T],paramTypeNames:IndexedSeq[com.khulnasoft.spark.connector.util.AnyObjectFactory.ParamType]):java.lang.reflect.Constructor[T]", "kind" : "def"}, {"label" : "isNoArgsConstructor", "tail" : "(ctor: Constructor[_]): Boolean", "member" : "com.khulnasoft.spark.connector.util.AnyObjectFactory.isNoArgsConstructor", "link" : "com\/khulnasoft\/spark\/connector\/util\/AnyObjectFactory$.html#isNoArgsConstructor(ctor:java.lang.reflect.Constructor[_]):Boolean", "kind" : "def"}, {"label" : "oneIfMemberClass", "tail" : "(clazz: Class[_]): Int", "member" : "com.khulnasoft.spark.connector.util.AnyObjectFactory.oneIfMemberClass", "link" : "com\/khulnasoft\/spark\/connector\/util\/AnyObjectFactory$.html#oneIfMemberClass(clazz:Class[_]):Int", "kind" : "def"}, {"label" : "isTraceEnabled", "tail" : "(): Boolean", "member" : "com.khulnasoft.spark.connector.util.Logging.isTraceEnabled", "link" : "com\/khulnasoft\/spark\/connector\/util\/AnyObjectFactory$.html#isTraceEnabled():Boolean", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "com.khulnasoft.spark.connector.util.Logging.logError", "link" : "com\/khulnasoft\/spark\/connector\/util\/AnyObjectFactory$.html#logError(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "com.khulnasoft.spark.connector.util.Logging.logWarning", "link" : "com\/khulnasoft\/spark\/connector\/util\/AnyObjectFactory$.html#logWarning(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "com.khulnasoft.spark.connector.util.Logging.logTrace", "link" : "com\/khulnasoft\/spark\/connector\/util\/AnyObjectFactory$.html#logTrace(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "com.khulnasoft.spark.connector.util.Logging.logDebug", "link" : "com\/khulnasoft\/spark\/connector\/util\/AnyObjectFactory$.html#logDebug(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "com.khulnasoft.spark.connector.util.Logging.logInfo", "link" : "com\/khulnasoft\/spark\/connector\/util\/AnyObjectFactory$.html#logInfo(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String): Unit", "member" : "com.khulnasoft.spark.connector.util.Logging.logError", "link" : "com\/khulnasoft\/spark\/connector\/util\/AnyObjectFactory$.html#logError(msg:=>String):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String): Unit", "member" : "com.khulnasoft.spark.connector.util.Logging.logWarning", "link" : "com\/khulnasoft\/spark\/connector\/util\/AnyObjectFactory$.html#logWarning(msg:=>String):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String): Unit", "member" : "com.khulnasoft.spark.connector.util.Logging.logTrace", "link" : "com\/khulnasoft\/spark\/connector\/util\/AnyObjectFactory$.html#logTrace(msg:=>String):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String): Unit", "member" : "com.khulnasoft.spark.connector.util.Logging.logDebug", "link" : "com\/khulnasoft\/spark\/connector\/util\/AnyObjectFactory$.html#logDebug(msg:=>String):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String): Unit", "member" : "com.khulnasoft.spark.connector.util.Logging.logInfo", "link" : "com\/khulnasoft\/spark\/connector\/util\/AnyObjectFactory$.html#logInfo(msg:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "com.khulnasoft.spark.connector.util.Logging.log", "link" : "com\/khulnasoft\/spark\/connector\/util\/AnyObjectFactory$.html#log:org.slf4j.Logger", "kind" : "def"}, {"label" : "logName", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.util.Logging.logName", "link" : "com\/khulnasoft\/spark\/connector\/util\/AnyObjectFactory$.html#logName:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/util\/AnyObjectFactory$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/util\/AnyObjectFactory$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/util\/AnyObjectFactory$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/util\/AnyObjectFactory$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/util\/AnyObjectFactory$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/util\/AnyObjectFactory$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/util\/AnyObjectFactory$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/util\/AnyObjectFactory$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/util\/AnyObjectFactory$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/util\/AnyObjectFactory$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/util\/AnyObjectFactory$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/util\/AnyObjectFactory$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/khulnasoft\/spark\/connector\/util\/AnyObjectFactory$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/util\/AnyObjectFactory$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/khulnasoft\/spark\/connector\/util\/AnyObjectFactory$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/khulnasoft\/spark\/connector\/util\/AnyObjectFactory$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/util\/AnyObjectFactory$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/util\/AnyObjectFactory$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/util\/AnyObjectFactory$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/khulnasoft\/spark\/connector\/util\/AnyObjectFactory.html", "kind" : "class"}, {"name" : "com.khulnasoft.spark.connector.util.ByteBufferUtil", "shortDescription" : "", "object" : "com\/khulnasoft\/spark\/connector\/util\/ByteBufferUtil$.html", "members_object" : [{"label" : "toArray", "tail" : "(buffer: ByteBuffer): Array[Byte]", "member" : "com.khulnasoft.spark.connector.util.ByteBufferUtil.toArray", "link" : "com\/khulnasoft\/spark\/connector\/util\/ByteBufferUtil$.html#toArray(buffer:java.nio.ByteBuffer):Array[Byte]", "kind" : "def"}, {"label" : "copyBuffer", "tail" : "(src: ByteBuffer, dest: Array[Byte]): Array[Byte]", "member" : "com.khulnasoft.spark.connector.util.ByteBufferUtil.copyBuffer", "link" : "com\/khulnasoft\/spark\/connector\/util\/ByteBufferUtil$.html#copyBuffer(src:java.nio.ByteBuffer,dest:Array[Byte]):Array[Byte]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/util\/ByteBufferUtil$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/util\/ByteBufferUtil$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/util\/ByteBufferUtil$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/util\/ByteBufferUtil$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/util\/ByteBufferUtil$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/util\/ByteBufferUtil$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/util\/ByteBufferUtil$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/util\/ByteBufferUtil$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/util\/ByteBufferUtil$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/util\/ByteBufferUtil$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/util\/ByteBufferUtil$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/util\/ByteBufferUtil$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/khulnasoft\/spark\/connector\/util\/ByteBufferUtil$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/util\/ByteBufferUtil$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/khulnasoft\/spark\/connector\/util\/ByteBufferUtil$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/khulnasoft\/spark\/connector\/util\/ByteBufferUtil$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/util\/ByteBufferUtil$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/util\/ByteBufferUtil$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/util\/ByteBufferUtil$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.khulnasoft.spark.connector.util.DriverUtil", "shortDescription" : "", "object" : "com\/khulnasoft\/spark\/connector\/util\/DriverUtil$.html", "members_object" : [{"label" : "toAddress", "tail" : "(node: Node): Option[InetSocketAddress]", "member" : "com.khulnasoft.spark.connector.util.DriverUtil.toAddress", "link" : "com\/khulnasoft\/spark\/connector\/util\/DriverUtil$.html#toAddress(node:com.khulnasoft.oss.driver.api.core.metadata.Node):Option[java.net.InetSocketAddress]", "kind" : "def"}, {"label" : "toOption", "tail" : "(optional: Optional[T]): Option[T]", "member" : "com.khulnasoft.spark.connector.util.DriverUtil.toOption", "link" : "com\/khulnasoft\/spark\/connector\/util\/DriverUtil$.html#toOption[T](optional:java.util.Optional[T]):Option[T]", "kind" : "def"}, {"label" : "toName", "tail" : "(id: CqlIdentifier): String", "member" : "com.khulnasoft.spark.connector.util.DriverUtil.toName", "link" : "com\/khulnasoft\/spark\/connector\/util\/DriverUtil$.html#toName(id:com.khulnasoft.oss.driver.api.core.CqlIdentifier):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/util\/DriverUtil$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/util\/DriverUtil$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/util\/DriverUtil$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/util\/DriverUtil$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/util\/DriverUtil$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/util\/DriverUtil$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/util\/DriverUtil$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/util\/DriverUtil$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/util\/DriverUtil$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/util\/DriverUtil$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/util\/DriverUtil$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/util\/DriverUtil$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/khulnasoft\/spark\/connector\/util\/DriverUtil$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/util\/DriverUtil$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/khulnasoft\/spark\/connector\/util\/DriverUtil$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/khulnasoft\/spark\/connector\/util\/DriverUtil$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/util\/DriverUtil$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/util\/DriverUtil$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/util\/DriverUtil$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.khulnasoft.spark.connector.util.Logging", "members_trait" : [{"label" : "isTraceEnabled", "tail" : "(): Boolean", "member" : "com.khulnasoft.spark.connector.util.Logging.isTraceEnabled", "link" : "com\/khulnasoft\/spark\/connector\/util\/Logging.html#isTraceEnabled():Boolean", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "com.khulnasoft.spark.connector.util.Logging.logError", "link" : "com\/khulnasoft\/spark\/connector\/util\/Logging.html#logError(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "com.khulnasoft.spark.connector.util.Logging.logWarning", "link" : "com\/khulnasoft\/spark\/connector\/util\/Logging.html#logWarning(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "com.khulnasoft.spark.connector.util.Logging.logTrace", "link" : "com\/khulnasoft\/spark\/connector\/util\/Logging.html#logTrace(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "com.khulnasoft.spark.connector.util.Logging.logDebug", "link" : "com\/khulnasoft\/spark\/connector\/util\/Logging.html#logDebug(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String, throwable: Throwable): Unit", "member" : "com.khulnasoft.spark.connector.util.Logging.logInfo", "link" : "com\/khulnasoft\/spark\/connector\/util\/Logging.html#logInfo(msg:=>String,throwable:Throwable):Unit", "kind" : "def"}, {"label" : "logError", "tail" : "(msg: ⇒ String): Unit", "member" : "com.khulnasoft.spark.connector.util.Logging.logError", "link" : "com\/khulnasoft\/spark\/connector\/util\/Logging.html#logError(msg:=>String):Unit", "kind" : "def"}, {"label" : "logWarning", "tail" : "(msg: ⇒ String): Unit", "member" : "com.khulnasoft.spark.connector.util.Logging.logWarning", "link" : "com\/khulnasoft\/spark\/connector\/util\/Logging.html#logWarning(msg:=>String):Unit", "kind" : "def"}, {"label" : "logTrace", "tail" : "(msg: ⇒ String): Unit", "member" : "com.khulnasoft.spark.connector.util.Logging.logTrace", "link" : "com\/khulnasoft\/spark\/connector\/util\/Logging.html#logTrace(msg:=>String):Unit", "kind" : "def"}, {"label" : "logDebug", "tail" : "(msg: ⇒ String): Unit", "member" : "com.khulnasoft.spark.connector.util.Logging.logDebug", "link" : "com\/khulnasoft\/spark\/connector\/util\/Logging.html#logDebug(msg:=>String):Unit", "kind" : "def"}, {"label" : "logInfo", "tail" : "(msg: ⇒ String): Unit", "member" : "com.khulnasoft.spark.connector.util.Logging.logInfo", "link" : "com\/khulnasoft\/spark\/connector\/util\/Logging.html#logInfo(msg:=>String):Unit", "kind" : "def"}, {"label" : "log", "tail" : "(): Logger", "member" : "com.khulnasoft.spark.connector.util.Logging.log", "link" : "com\/khulnasoft\/spark\/connector\/util\/Logging.html#log:org.slf4j.Logger", "kind" : "def"}, {"label" : "logName", "tail" : "(): String", "member" : "com.khulnasoft.spark.connector.util.Logging.logName", "link" : "com\/khulnasoft\/spark\/connector\/util\/Logging.html#logName:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/util\/Logging.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/util\/Logging.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/util\/Logging.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/util\/Logging.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/util\/Logging.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/util\/Logging.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/util\/Logging.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/util\/Logging.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/util\/Logging.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/util\/Logging.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/util\/Logging.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/util\/Logging.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/khulnasoft\/spark\/connector\/util\/Logging.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/util\/Logging.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/khulnasoft\/spark\/connector\/util\/Logging.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/khulnasoft\/spark\/connector\/util\/Logging.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/util\/Logging.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/util\/Logging.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/util\/Logging.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Utility trait for classes that want to log data.", "trait" : "com\/khulnasoft\/spark\/connector\/util\/Logging.html", "kind" : "trait"}, {"name" : "com.khulnasoft.spark.connector.util.NameTools", "shortDescription" : "", "object" : "com\/khulnasoft\/spark\/connector\/util\/NameTools$.html", "members_object" : [{"label" : "getErrorString", "tail" : "(keyspace: String, table: Option[String], suggestion: Option[Suggestions]): String", "member" : "com.khulnasoft.spark.connector.util.NameTools.getErrorString", "link" : "com\/khulnasoft\/spark\/connector\/util\/NameTools$.html#getErrorString(keyspace:String,table:Option[String],suggestion:Option[com.khulnasoft.spark.connector.util.NameTools.Suggestions]):String", "kind" : "def"}, {"label" : "getSuggestions", "tail" : "(clusterMetadata: Metadata, keyspace: String, table: String): Option[Suggestions]", "member" : "com.khulnasoft.spark.connector.util.NameTools.getSuggestions", "link" : "com\/khulnasoft\/spark\/connector\/util\/NameTools$.html#getSuggestions(clusterMetadata:com.khulnasoft.oss.driver.api.core.metadata.Metadata,keyspace:String,table:String):Option[com.khulnasoft.spark.connector.util.NameTools.Suggestions]", "kind" : "def"}, {"label" : "getSuggestions", "tail" : "(clusterMetadata: Metadata, keyspace: String): Option[Suggestions]", "member" : "com.khulnasoft.spark.connector.util.NameTools.getSuggestions", "link" : "com\/khulnasoft\/spark\/connector\/util\/NameTools$.html#getSuggestions(clusterMetadata:com.khulnasoft.oss.driver.api.core.metadata.Metadata,keyspace:String):Option[com.khulnasoft.spark.connector.util.NameTools.Suggestions]", "kind" : "def"}, {"label" : "KeyspaceOnlySuggestions", "tail" : "", "member" : "com.khulnasoft.spark.connector.util.NameTools.KeyspaceOnlySuggestions", "link" : "com\/khulnasoft\/spark\/connector\/util\/NameTools$.html#KeyspaceOnlySuggestionsextendsNameTools.SuggestionswithProductwithSerializable", "kind" : "case class"}, {"label" : "KeyspaceAndTableSuggestions", "tail" : "", "member" : "com.khulnasoft.spark.connector.util.NameTools.KeyspaceAndTableSuggestions", "link" : "com\/khulnasoft\/spark\/connector\/util\/NameTools$.html#KeyspaceAndTableSuggestionsextendsNameTools.SuggestionswithProductwithSerializable", "kind" : "case class"}, {"label" : "KeyspaceSuggestions", "tail" : "", "member" : "com.khulnasoft.spark.connector.util.NameTools.KeyspaceSuggestions", "link" : "com\/khulnasoft\/spark\/connector\/util\/NameTools$.html#KeyspaceSuggestionsextendsNameTools.SuggestionswithProductwithSerializable", "kind" : "case class"}, {"label" : "TableSuggestions", "tail" : "", "member" : "com.khulnasoft.spark.connector.util.NameTools.TableSuggestions", "link" : "com\/khulnasoft\/spark\/connector\/util\/NameTools$.html#TableSuggestionsextendsNameTools.SuggestionswithProductwithSerializable", "kind" : "case class"}, {"label" : "Suggestions", "tail" : "", "member" : "com.khulnasoft.spark.connector.util.NameTools.Suggestions", "link" : "com\/khulnasoft\/spark\/connector\/util\/NameTools$.html#SuggestionsextendsAnyRef", "kind" : "sealed trait"}, {"label" : "MinJWScore", "tail" : ": Double", "member" : "com.khulnasoft.spark.connector.util.NameTools.MinJWScore", "link" : "com\/khulnasoft\/spark\/connector\/util\/NameTools$.html#MinJWScore:Double", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/util\/NameTools$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/util\/NameTools$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/util\/NameTools$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/util\/NameTools$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/util\/NameTools$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/util\/NameTools$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/util\/NameTools$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/util\/NameTools$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/util\/NameTools$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/util\/NameTools$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/util\/NameTools$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/util\/NameTools$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/khulnasoft\/spark\/connector\/util\/NameTools$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/util\/NameTools$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/khulnasoft\/spark\/connector\/util\/NameTools$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/khulnasoft\/spark\/connector\/util\/NameTools$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/util\/NameTools$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/util\/NameTools$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/util\/NameTools$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.khulnasoft.spark.connector.util.Quote", "shortDescription" : "", "object" : "com\/khulnasoft\/spark\/connector\/util\/Quote$.html", "members_object" : [{"label" : "quote", "tail" : "(name: String): String", "member" : "com.khulnasoft.spark.connector.util.Quote.quote", "link" : "com\/khulnasoft\/spark\/connector\/util\/Quote$.html#quote(name:String):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/util\/Quote$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/util\/Quote$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/util\/Quote$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/util\/Quote$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/util\/Quote$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/util\/Quote$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/util\/Quote$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/util\/Quote$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/util\/Quote$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/util\/Quote$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/util\/Quote$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/util\/Quote$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/khulnasoft\/spark\/connector\/util\/Quote$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/util\/Quote$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/khulnasoft\/spark\/connector\/util\/Quote$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/khulnasoft\/spark\/connector\/util\/Quote$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/util\/Quote$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/util\/Quote$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/util\/Quote$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.khulnasoft.spark.connector.util.ReflectionUtil", "shortDescription" : "", "object" : "com\/khulnasoft\/spark\/connector\/util\/ReflectionUtil$.html", "members_object" : [{"label" : "isScalaTuple", "tail" : "(tpe: scala.reflect.api.JavaUniverse.Type): Boolean", "member" : "com.khulnasoft.spark.connector.util.ReflectionUtil.isScalaTuple", "link" : "com\/khulnasoft\/spark\/connector\/util\/ReflectionUtil$.html#isScalaTuple(tpe:reflect.runtime.universe.Type):Boolean", "kind" : "def"}, {"label" : "isScalaTuple", "tail" : "(symbol: scala.reflect.api.JavaUniverse.Symbol): Boolean", "member" : "com.khulnasoft.spark.connector.util.ReflectionUtil.isScalaTuple", "link" : "com\/khulnasoft\/spark\/connector\/util\/ReflectionUtil$.html#isScalaTuple(symbol:reflect.runtime.universe.Symbol):Boolean", "kind" : "def"}, {"label" : "classTag", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[T]): ClassTag[T]", "member" : "com.khulnasoft.spark.connector.util.ReflectionUtil.classTag", "link" : "com\/khulnasoft\/spark\/connector\/util\/ReflectionUtil$.html#classTag[T](implicitevidence$7:reflect.runtime.universe.TypeTag[T]):scala.reflect.ClassTag[T]", "kind" : "def"}, {"label" : "typeToTypeTag", "tail" : "(tpe: scala.reflect.api.JavaUniverse.Type): scala.reflect.api.JavaUniverse.TypeTag[T]", "member" : "com.khulnasoft.spark.connector.util.ReflectionUtil.typeToTypeTag", "link" : "com\/khulnasoft\/spark\/connector\/util\/ReflectionUtil$.html#typeToTypeTag[T](tpe:reflect.runtime.universe.Type):reflect.runtime.universe.TypeTag[T]", "kind" : "def"}, {"label" : "setters", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[T]): Seq[(String, scala.reflect.api.JavaUniverse.Type)]", "member" : "com.khulnasoft.spark.connector.util.ReflectionUtil.setters", "link" : "com\/khulnasoft\/spark\/connector\/util\/ReflectionUtil$.html#setters[T](implicitevidence$6:reflect.runtime.universe.TypeTag[T]):Seq[(String,reflect.runtime.universe.Type)]", "kind" : "def"}, {"label" : "setters", "tail" : "(tpe: scala.reflect.api.JavaUniverse.Type): Seq[(String, scala.reflect.api.JavaUniverse.Type)]", "member" : "com.khulnasoft.spark.connector.util.ReflectionUtil.setters", "link" : "com\/khulnasoft\/spark\/connector\/util\/ReflectionUtil$.html#setters(tpe:reflect.runtime.universe.Type):Seq[(String,reflect.runtime.universe.Type)]", "kind" : "def"}, {"label" : "returnType", "tail" : "(tpe: scala.reflect.api.JavaUniverse.Type, methodName: String): scala.reflect.api.JavaUniverse.Type", "member" : "com.khulnasoft.spark.connector.util.ReflectionUtil.returnType", "link" : "com\/khulnasoft\/spark\/connector\/util\/ReflectionUtil$.html#returnType(tpe:reflect.runtime.universe.Type,methodName:String):reflect.runtime.universe.Type", "kind" : "def"}, {"label" : "methodParamTypes", "tail" : "(tpe: scala.reflect.api.JavaUniverse.Type, methodName: String): Seq[scala.reflect.api.JavaUniverse.Type]", "member" : "com.khulnasoft.spark.connector.util.ReflectionUtil.methodParamTypes", "link" : "com\/khulnasoft\/spark\/connector\/util\/ReflectionUtil$.html#methodParamTypes(tpe:reflect.runtime.universe.Type,methodName:String):Seq[reflect.runtime.universe.Type]", "kind" : "def"}, {"label" : "method", "tail" : "(tpe: scala.reflect.api.JavaUniverse.Type, methodName: String): scala.reflect.api.JavaUniverse.Type", "member" : "com.khulnasoft.spark.connector.util.ReflectionUtil.method", "link" : "com\/khulnasoft\/spark\/connector\/util\/ReflectionUtil$.html#method(tpe:reflect.runtime.universe.Type,methodName:String):reflect.runtime.universe.Type", "kind" : "def"}, {"label" : "getters", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[T]): Seq[(String, scala.reflect.api.JavaUniverse.Type)]", "member" : "com.khulnasoft.spark.connector.util.ReflectionUtil.getters", "link" : "com\/khulnasoft\/spark\/connector\/util\/ReflectionUtil$.html#getters[T](implicitevidence$5:reflect.runtime.universe.TypeTag[T]):Seq[(String,reflect.runtime.universe.Type)]", "kind" : "def"}, {"label" : "getters", "tail" : "(tpe: scala.reflect.api.JavaUniverse.Type): Seq[(String, scala.reflect.api.JavaUniverse.Type)]", "member" : "com.khulnasoft.spark.connector.util.ReflectionUtil.getters", "link" : "com\/khulnasoft\/spark\/connector\/util\/ReflectionUtil$.html#getters(tpe:reflect.runtime.universe.Type):Seq[(String,reflect.runtime.universe.Type)]", "kind" : "def"}, {"label" : "constructorParams", "tail" : "(arg0: scala.reflect.api.JavaUniverse.TypeTag[T]): Seq[(String, scala.reflect.api.JavaUniverse.Type)]", "member" : "com.khulnasoft.spark.connector.util.ReflectionUtil.constructorParams", "link" : "com\/khulnasoft\/spark\/connector\/util\/ReflectionUtil$.html#constructorParams[T](implicitevidence$4:reflect.runtime.universe.TypeTag[T]):Seq[(String,reflect.runtime.universe.Type)]", "kind" : "def"}, {"label" : "constructorParams", "tail" : "(tpe: scala.reflect.api.JavaUniverse.Type): Seq[(String, scala.reflect.api.JavaUniverse.Type)]", "member" : "com.khulnasoft.spark.connector.util.ReflectionUtil.constructorParams", "link" : "com\/khulnasoft\/spark\/connector\/util\/ReflectionUtil$.html#constructorParams(tpe:reflect.runtime.universe.Type):Seq[(String,reflect.runtime.universe.Type)]", "kind" : "def"}, {"label" : "findGlobalObject", "tail" : "(objectName: String)(arg0: scala.reflect.api.JavaUniverse.TypeTag[T]): T", "member" : "com.khulnasoft.spark.connector.util.ReflectionUtil.findGlobalObject", "link" : "com\/khulnasoft\/spark\/connector\/util\/ReflectionUtil$.html#findGlobalObject[T](objectName:String)(implicitevidence$3:reflect.runtime.universe.TypeTag[T]):T", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/util\/ReflectionUtil$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/util\/ReflectionUtil$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/util\/ReflectionUtil$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/util\/ReflectionUtil$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/util\/ReflectionUtil$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/util\/ReflectionUtil$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/util\/ReflectionUtil$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/util\/ReflectionUtil$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/util\/ReflectionUtil$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/util\/ReflectionUtil$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/util\/ReflectionUtil$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/util\/ReflectionUtil$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/khulnasoft\/spark\/connector\/util\/ReflectionUtil$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/util\/ReflectionUtil$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/khulnasoft\/spark\/connector\/util\/ReflectionUtil$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/khulnasoft\/spark\/connector\/util\/ReflectionUtil$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/util\/ReflectionUtil$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/util\/ReflectionUtil$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/util\/ReflectionUtil$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.khulnasoft.spark.connector.util.Symbols", "shortDescription" : "", "object" : "com\/khulnasoft\/spark\/connector\/util\/Symbols$.html", "members_object" : [{"label" : "MapSymbols", "tail" : ": Set[scala.reflect.api.JavaUniverse.Symbol]", "member" : "com.khulnasoft.spark.connector.util.Symbols.MapSymbols", "link" : "com\/khulnasoft\/spark\/connector\/util\/Symbols$.html#MapSymbols:scala.collection.immutable.Set[reflect.runtime.universe.Symbol]", "kind" : "val"}, {"label" : "SetSymbols", "tail" : ": Set[scala.reflect.api.JavaUniverse.Symbol]", "member" : "com.khulnasoft.spark.connector.util.Symbols.SetSymbols", "link" : "com\/khulnasoft\/spark\/connector\/util\/Symbols$.html#SetSymbols:scala.collection.immutable.Set[reflect.runtime.universe.Symbol]", "kind" : "val"}, {"label" : "ListSymbols", "tail" : ": Set[scala.reflect.api.JavaUniverse.Symbol]", "member" : "com.khulnasoft.spark.connector.util.Symbols.ListSymbols", "link" : "com\/khulnasoft\/spark\/connector\/util\/Symbols$.html#ListSymbols:scala.collection.immutable.Set[reflect.runtime.universe.Symbol]", "kind" : "val"}, {"label" : "TripleSymbol", "tail" : ": scala.reflect.api.JavaUniverse.Symbol", "member" : "com.khulnasoft.spark.connector.util.Symbols.TripleSymbol", "link" : "com\/khulnasoft\/spark\/connector\/util\/Symbols$.html#TripleSymbol:reflect.runtime.universe.Symbol", "kind" : "val"}, {"label" : "PairSymbol", "tail" : ": scala.reflect.api.JavaUniverse.Symbol", "member" : "com.khulnasoft.spark.connector.util.Symbols.PairSymbol", "link" : "com\/khulnasoft\/spark\/connector\/util\/Symbols$.html#PairSymbol:reflect.runtime.universe.Symbol", "kind" : "val"}, {"label" : "JavaHashMapSymbol", "tail" : ": scala.reflect.api.JavaUniverse.Symbol", "member" : "com.khulnasoft.spark.connector.util.Symbols.JavaHashMapSymbol", "link" : "com\/khulnasoft\/spark\/connector\/util\/Symbols$.html#JavaHashMapSymbol:reflect.runtime.universe.Symbol", "kind" : "val"}, {"label" : "JavaMapSymbol", "tail" : ": scala.reflect.api.JavaUniverse.Symbol", "member" : "com.khulnasoft.spark.connector.util.Symbols.JavaMapSymbol", "link" : "com\/khulnasoft\/spark\/connector\/util\/Symbols$.html#JavaMapSymbol:reflect.runtime.universe.Symbol", "kind" : "val"}, {"label" : "JavaHashSetSymbol", "tail" : ": scala.reflect.api.JavaUniverse.Symbol", "member" : "com.khulnasoft.spark.connector.util.Symbols.JavaHashSetSymbol", "link" : "com\/khulnasoft\/spark\/connector\/util\/Symbols$.html#JavaHashSetSymbol:reflect.runtime.universe.Symbol", "kind" : "val"}, {"label" : "JavaSetSymbol", "tail" : ": scala.reflect.api.JavaUniverse.Symbol", "member" : "com.khulnasoft.spark.connector.util.Symbols.JavaSetSymbol", "link" : "com\/khulnasoft\/spark\/connector\/util\/Symbols$.html#JavaSetSymbol:reflect.runtime.universe.Symbol", "kind" : "val"}, {"label" : "JavaArrayListSymbol", "tail" : ": scala.reflect.api.JavaUniverse.Symbol", "member" : "com.khulnasoft.spark.connector.util.Symbols.JavaArrayListSymbol", "link" : "com\/khulnasoft\/spark\/connector\/util\/Symbols$.html#JavaArrayListSymbol:reflect.runtime.universe.Symbol", "kind" : "val"}, {"label" : "JavaListSymbol", "tail" : ": scala.reflect.api.JavaUniverse.Symbol", "member" : "com.khulnasoft.spark.connector.util.Symbols.JavaListSymbol", "link" : "com\/khulnasoft\/spark\/connector\/util\/Symbols$.html#JavaListSymbol:reflect.runtime.universe.Symbol", "kind" : "val"}, {"label" : "TreeMapSymbol", "tail" : ": scala.reflect.api.JavaUniverse.Symbol", "member" : "com.khulnasoft.spark.connector.util.Symbols.TreeMapSymbol", "link" : "com\/khulnasoft\/spark\/connector\/util\/Symbols$.html#TreeMapSymbol:reflect.runtime.universe.Symbol", "kind" : "val"}, {"label" : "MapSymbol", "tail" : ": scala.reflect.api.JavaUniverse.Symbol", "member" : "com.khulnasoft.spark.connector.util.Symbols.MapSymbol", "link" : "com\/khulnasoft\/spark\/connector\/util\/Symbols$.html#MapSymbol:reflect.runtime.universe.Symbol", "kind" : "val"}, {"label" : "IterableSymbol", "tail" : ": scala.reflect.api.JavaUniverse.Symbol", "member" : "com.khulnasoft.spark.connector.util.Symbols.IterableSymbol", "link" : "com\/khulnasoft\/spark\/connector\/util\/Symbols$.html#IterableSymbol:reflect.runtime.universe.Symbol", "kind" : "val"}, {"label" : "IndexedSeqSymbol", "tail" : ": scala.reflect.api.JavaUniverse.Symbol", "member" : "com.khulnasoft.spark.connector.util.Symbols.IndexedSeqSymbol", "link" : "com\/khulnasoft\/spark\/connector\/util\/Symbols$.html#IndexedSeqSymbol:reflect.runtime.universe.Symbol", "kind" : "val"}, {"label" : "SeqSymbol", "tail" : ": scala.reflect.api.JavaUniverse.Symbol", "member" : "com.khulnasoft.spark.connector.util.Symbols.SeqSymbol", "link" : "com\/khulnasoft\/spark\/connector\/util\/Symbols$.html#SeqSymbol:reflect.runtime.universe.Symbol", "kind" : "val"}, {"label" : "TreeSetSymbol", "tail" : ": scala.reflect.api.JavaUniverse.Symbol", "member" : "com.khulnasoft.spark.connector.util.Symbols.TreeSetSymbol", "link" : "com\/khulnasoft\/spark\/connector\/util\/Symbols$.html#TreeSetSymbol:reflect.runtime.universe.Symbol", "kind" : "val"}, {"label" : "SetSymbol", "tail" : ": scala.reflect.api.JavaUniverse.Symbol", "member" : "com.khulnasoft.spark.connector.util.Symbols.SetSymbol", "link" : "com\/khulnasoft\/spark\/connector\/util\/Symbols$.html#SetSymbol:reflect.runtime.universe.Symbol", "kind" : "val"}, {"label" : "VectorSymbol", "tail" : ": scala.reflect.api.JavaUniverse.Symbol", "member" : "com.khulnasoft.spark.connector.util.Symbols.VectorSymbol", "link" : "com\/khulnasoft\/spark\/connector\/util\/Symbols$.html#VectorSymbol:reflect.runtime.universe.Symbol", "kind" : "val"}, {"label" : "ListSymbol", "tail" : ": scala.reflect.api.JavaUniverse.Symbol", "member" : "com.khulnasoft.spark.connector.util.Symbols.ListSymbol", "link" : "com\/khulnasoft\/spark\/connector\/util\/Symbols$.html#ListSymbol:reflect.runtime.universe.Symbol", "kind" : "val"}, {"label" : "OptionSymbol", "tail" : ": scala.reflect.api.JavaUniverse.Symbol", "member" : "com.khulnasoft.spark.connector.util.Symbols.OptionSymbol", "link" : "com\/khulnasoft\/spark\/connector\/util\/Symbols$.html#OptionSymbol:reflect.runtime.universe.Symbol", "kind" : "val"}, {"label" : "CassandraOptionSymbol", "tail" : ": scala.reflect.api.JavaUniverse.Symbol", "member" : "com.khulnasoft.spark.connector.util.Symbols.CassandraOptionSymbol", "link" : "com\/khulnasoft\/spark\/connector\/util\/Symbols$.html#CassandraOptionSymbol:reflect.runtime.universe.Symbol", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/khulnasoft\/spark\/connector\/util\/Symbols$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/khulnasoft\/spark\/connector\/util\/Symbols$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/khulnasoft\/spark\/connector\/util\/Symbols$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/khulnasoft\/spark\/connector\/util\/Symbols$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/khulnasoft\/spark\/connector\/util\/Symbols$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/khulnasoft\/spark\/connector\/util\/Symbols$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/khulnasoft\/spark\/connector\/util\/Symbols$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/util\/Symbols$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/util\/Symbols$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/khulnasoft\/spark\/connector\/util\/Symbols$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/khulnasoft\/spark\/connector\/util\/Symbols$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/khulnasoft\/spark\/connector\/util\/Symbols$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/khulnasoft\/spark\/connector\/util\/Symbols$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/khulnasoft\/spark\/connector\/util\/Symbols$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/khulnasoft\/spark\/connector\/util\/Symbols$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/khulnasoft\/spark\/connector\/util\/Symbols$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/khulnasoft\/spark\/connector\/util\/Symbols$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/util\/Symbols$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/khulnasoft\/spark\/connector\/util\/Symbols$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}]};